
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СхемаКомпоновкиДанных = Отчеты.ТренерскийСостав.ПолучитьМакет("РасшифровкаДанных");
	ПараметрыОтчёта = СхемаКомпоновкиДанных.Параметры;
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ПараметрыДанных = Настройки.ПараметрыДанных.Элементы;
	ЭлементПериод = ПараметрыДанных.Найти("ДатаОтчета");
	ЭлементПериод.Использование = Истина;
	ЭлементПериод.Значение = Параметры.Период;
	ЭлементНачалоГода = ПараметрыДанных.Найти("НачалоГода");
	ЭлементНачалоГода.Использование = Истина;
	ЭлементНачалоГода.Значение = НачалоГода(Параметры.НачалоГода);
	ЭлементКонецГода = ПараметрыДанных.Найти("КонецГода");
	ЭлементКонецГода.Использование = Истина;
	ЭлементКонецГода.Значение = КонецГода(Параметры.КонецГода);
	ЭлементТекущаяДата = ПараметрыДанных.Найти("ТекущаяДата");
	ЭлементТекущаяДата.Использование = Истина;
	ЭлементТекущаяДата.Значение = ТекущаяДатаСеанса();
	ЭлементОрганизация = ПараметрыДанных.Найти("Организация");
	ЭлементОрганизация.Использование = Истина;
	ЭлементОрганизация.Значение = ПараметрыСеанса.ТекущаяОрганизация;

	Если Параметры.Свойство("ВидСпорта") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидСпорта");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ВидСпорта;
		Отбор.Использование = Истина;	
	КонецЕсли;
	
	Если Параметры.Свойство("До35") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("До35");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.До35;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("От35ИДо49") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("От35ИДо49");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.От35ИДо49;
		Отбор.Использование = Истина;
	КонецЕсли;

	Если Параметры.Свойство("От49ИДо65") Тогда
		 Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("От49ИДо65");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.От49ИДо65;
		Отбор.Использование = Истина;
	КонецЕсли;

	Если Параметры.Свойство("От65") Тогда
		 Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("От65");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.От65;
		Отбор.Использование = Истина;
	КонецЕсли;

	Если Параметры.Свойство("ПерваяКатегория") Тогда
	    Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПерваяКатегория");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ПерваяКатегория;
		Отбор.Использование = Истина;
	КонецЕсли;

	Если Параметры.Свойство("ВтораяКатегория") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВтораяКатегория");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ВтораяКатегория;
		Отбор.Использование = Истина;
	КонецЕсли;

	Если Параметры.Свойство("ВысшаяКатегория") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВысшаяКатегория");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ВысшаяКатегория;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗваниеМастерСпорта") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЗваниеМастерСпорта");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ЗваниеМастерСпорта;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ТренерШтат") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТренерШтат");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ТренерШтат;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("Переподготовка") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Переподготовка");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.Переподготовка;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ПовышениеКвалификации") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПовышениеКвалификации");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ПовышениеКвалификации;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ВысшееОбразование") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВысшееОбразование");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ВысшееОбразование;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("СреднееОбразование") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СреднееОбразование");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.СреднееОбразование;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ВысшееОбразованиеФизкультурное") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВысшееОбразованиеФизкультурное");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ВысшееОбразованиеФизкультурное;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("СреднееОбразованиеФизкультурное") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СреднееОбразованиеФизкультурное");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.СреднееОбразованиеФизкультурное;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ВысшееОбразованиеСовместительФизкультурное") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВысшееОбразованиеСовместительФизкультурное");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ВысшееОбразованиеСовместительФизкультурное;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("СреднееОбразованиеСовместительФизкультурное") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СреднееОбразованиеСовместительФизкультурное");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.СреднееОбразованиеСовместительФизкультурное;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ПереподготовкаСовместитель") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПереподготовкаСовместитель");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ПереподготовкаСовместитель;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ПовышениеКвалификацииСовместитель") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПовышениеКвалификацииСовместитель");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ПовышениеКвалификацииСовместитель;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ПерваяКатегорияСовместитель") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПерваяКатегорияСовместитель");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ПерваяКатегорияСовместитель;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ВтораяКатегорияСовместитель") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВтораяКатегорияСовместитель");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ВтораяКатегорияСовместитель;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ВысшаяКатегорияСовместитель") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВысшаяКатегорияСовместитель");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ВысшаяКатегорияСовместитель;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ВысшееОбразованиеСовместитель") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВысшееОбразованиеСовместитель");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ВысшееОбразованиеСовместитель;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("СреднееОбразованиеСовместитель") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СреднееОбразованиеСовместитель");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.СреднееОбразованиеСовместитель;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ТренерПреподавательШтат") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТренерПреподавательШтат");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ТренерПреподавательШтат;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ТренерПреподавательКоличество") Тогда
		Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТренерПреподавательКоличество");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение = Параметры.ТренерПреподавательКоличество;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	Результат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	АвтоЗаголовок = Ложь;
	Заголовок = НСтр("ru = 'Тренерский состав (расшифровка)'");
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", РаботаемСРасшифровкойНаСервере(Расшифровка));
	ОткрытьФорму("Справочник.Тренеры.Форма.ФормаЭлемента", ПараметрыФормы);
КонецПроцедуры

&НаСервереБезКонтекста
Функция РаботаемСРасшифровкойНаСервере(Расшифровка)
	
	Возврат Справочники.Тренеры.НайтиПоНаименованию(Расшифровка);
	
КонецФункции