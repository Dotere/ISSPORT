&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СхемаКомпоновкиДанных = Отчеты.ЧисленностьЗанимающихсяПоПрограммамСпортивнойПодготовки.ПолучитьМакет("РасшифровкаДанных");
	ПараметрыОтчёта = СхемаКомпоновкиДанных.Параметры;
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;  
	ПараметрыОтчёта.Период.Значение 	 = Параметры.Период;

	Массив = МассивДанных();
	Для каждого Элемент Из Массив Цикл
		Если Параметры.Свойство(Элемент) Тогда
			Если Элемент = "ВидСпорта" Тогда
				Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидСпорта");
				Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				Отбор.ПравоеЗначение = Параметры.ВидСпорта;
				Отбор.Использование = Истина;
			Иначе
				Отбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элемент);
				Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				Отбор.ПравоеЗначение = 1;
				Отбор.Использование = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	МакетКомпоновки.ЗначенияПараметров.Период.Значение = Параметры.Период;
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	Результат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	АвтоЗаголовок = Ложь;
	Заголовок = НСтр("ru = 'Численность занимающихся по программам спортивной подготовки (расшифровка)'");
	
КонецПроцедуры

Функция МассивДанных()
	Массив = Новый Массив;
	Массив.Добавить("ВидСпорта");
	Массив.Добавить("НеОтчислен");
	Массив.Добавить("ЭтапСОГ");
	Массив.Добавить("ЭтапНП1");
	Массив.Добавить("ЭтапНП2");
	Массив.Добавить("ЭтапНП3");
	Массив.Добавить("ЭтапТ1");
	Массив.Добавить("ЭтапТ2");
	Массив.Добавить("ЭтапТ3");
	Массив.Добавить("ЭтапТ4");
	Массив.Добавить("ЭтапТ5");
	Массив.Добавить("ЭтапССМ1");
	Массив.Добавить("ЭтапССМ2");
	Массив.Добавить("ЭтапССМ3");
	Массив.Добавить("ЭтапССМ4");
	Массив.Добавить("ЭтапССМ5");
	Массив.Добавить("ЭтапВСМ1");
	Массив.Добавить("ЭтапВСМ2");
	Массив.Добавить("ЭтапВСМ3");
	Массив.Добавить("ЭтапВСМ4");
	Массив.Добавить("ЭтапВСМ5");
	Массив.Добавить("ЭтапыНП");
	Массив.Добавить("ЭтапыТ");
	Массив.Добавить("ЭтапыССМ");
	Массив.Добавить("ЭтапыВСМ");
	Массив.Добавить("ОтчисленВЭтомГоду");
	Массив.Добавить("ЭтапыОтчисленныеСОГ");
	Массив.Добавить("ЭтапыОтчисленныеНП");
	Массив.Добавить("ЭтапыОтчисленныеТ");
	Массив.Добавить("ЭтапыОтчисленныеССМ");
	Массив.Добавить("ЭтапыОтчисленныеВСМ");
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", РаботаемСРасшифровкойНаСервере(Расшифровка));
	ОткрытьФорму("Справочник.Спортсмены.Форма.ФормаЭлемента", ПараметрыФормы);
КонецПроцедуры

&НаСервереБезКонтекста
Функция РаботаемСРасшифровкойНаСервере(Расшифровка)
	
	Возврат Справочники.Спортсмены.НайтиПоНаименованию(Расшифровка);
	
КонецФункции