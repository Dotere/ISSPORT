
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЭтаФорма.ПредставлениеТекущегоВарианта = "Расшифровка" Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьОтчетНаСервере(Результат);
	
	Элементы.Результат.ОтображениеСостояния.Видимость = Ложь;
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	ВариантМодифицирован = Ложь;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ПредставлениеВарианта = "Расшифровка" Тогда
		Возврат;
	КонецЕсли;
	
	Период	= Параметры.Период;
	УчебныйГод	= Параметры.УчебныйГод;
	Группа	= Параметры.Группа;
	Тренер	= Параметры.Тренер;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере(ТабДок)

	ТабДок.Очистить();
	
	ОбъектОтчет = РеквизитФормыВЗначение("Отчет");
	ОСКД = ОбъектОтчет.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

	НастройкиОСКД = ОСКД.НастройкиПоУмолчанию;
	ПараметрыДанныхОСКД = НастройкиОСКД.ПараметрыДанных.Элементы;

	ЭлементПараметр = ПараметрыДанныхОСКД.Найти("Период");
	ЭлементПараметр.Использование = Истина;
	ЭлементПараметр.Значение = Период;
	
	ЭлементПараметр = ПараметрыДанныхОСКД.Найти("УчебныйГод");
	ЭлементПараметр.Использование = Истина;
	ЭлементПараметр.Значение = УчебныйГод;
	
	ЭлементПараметр = ПараметрыДанныхОСКД.Найти("Группа");
	ЭлементПараметр.Использование = Истина;
	ЭлементПараметр.Значение = Группа;
	
	ЭлементПараметр = ПараметрыДанныхОСКД.Найти("Тренер");
	ЭлементПараметр.Использование = Истина;
	ЭлементПараметр.Значение = Тренер;

	КомпоновщикМакетаОСКД = Новый КомпоновщикМакетаКомпоновкиДанных;
	ДанныеРасшифровкиКомпоновкиДанных = Новый ДанныеРасшифровкиКомпоновкиДанных;
 	Макет = КомпоновщикМакетаОСКД.Выполнить(ОСКД, НастройкиОСКД, ДанныеРасшифровкиКомпоновкиДанных);

	ПроцессорКомпоновкиОСКД = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиОСКД.Инициализировать(Макет,, ДанныеРасшифровкиКомпоновкиДанных);
	
	ПроцессорВыводаОСКД = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаОСКД.УстановитьДокумент(ТабДок);
	ПроцессорВыводаОСКД.НачатьВывод();
	ПроцессорВыводаОСКД.Вывести(ПроцессорКомпоновкиОСКД);
	ДанныеРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровкиКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;
	Данные = ТабДокОбработкаРасшифровкиНаСервере(Расшифровка);
	ОткрытьЗначение(Данные);
	
КонецПроцедуры

&НаСервере
Функция ТабДокОбработкаРасшифровкиНаСервере(Расшифровка)
	
	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);

	Если ТипЗнч(Расшифровка) = Тип("ИдентификаторРасшифровкиКомпоновкиДанных") тогда
		ЭлементРасшифровки = Данные.Элементы[Расшифровка];
		Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
			Для Каждого Поле Из ЭлементРасшифровки.ПолучитьПоля() Цикл
				Возврат Поле.Значение;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции


