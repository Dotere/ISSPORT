// {Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
         Возврат;
    КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);	
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	УчетСпортсменовСервер.ЗаполнитьРеквизит(ЭтотОбъект, "Ответственный", ПараметрыСеанса.ТекущийПользователь);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
	// {Рарус adilas #Возрастные группы в соревновании -11068 2020.12.09
	// Уведомления о страховании и возрастных группах					
	ВыполнитьПроверкуПередПроведением(Отказ);		
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// }Рарус adilas #Возрастные группы в соревновании -11068 2020.12.09
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	ПроведениеСервер.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ, "УчастникиСоревнований");

	Движения.Записать();

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Движения.Записать();

	ПроведениеСервер.ВыполнитьКонтрольРезультатовОтменыПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьПроверкуПередПроведением(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСпортсменов"			, СоставУчастников.Выгрузить());
	// {Рарус adilas #11621 -Интервал периода соревнований в протоколе 2020.12.14
	Запрос.УстановитьПараметр("ДатаНачалаСоревнования"    	, ДатаНачалаСоревнования);
	Запрос.УстановитьПараметр("ДатаОкончанияСоревнования"   , ДатаОкончанияСоревнования);
	// }Рарус adilas #11621 -Интервал периода соревнований в протоколе 2020.12.14
	Запрос.УстановитьПараметр("УчебныйГод"             		, УчебныйГод);
	Запрос.УстановитьПараметр("Соревнование"           		, Соревнование);
	Запрос.УстановитьПараметр("Организация"            		, Организация);
	Запрос.УстановитьПараметр("ВидСпорта"              		, ВидСпорта);
	Запрос.УстановитьПараметр("СписокВозврастныхГрупп" 		, Соревнование.МеждународныеВозрастныеГруппы.Выгрузить().ВыгрузитьКолонку("МеждународнаяВозрастнаяГруппа"));
	Запрос.Текст =  "ВЫБРАТЬ
	                |	ТаблицаСпортсменов.Спортсмен КАК Спортсмен,
	                |	ТаблицаСпортсменов.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа
	                |ПОМЕСТИТЬ ВТ_ТаблицаСпортсменов
	                |ИЗ
	                |	&ТаблицаСпортсменов КАК ТаблицаСпортсменов
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_ТаблицаСпортсменов.Спортсмен КАК Спортсмен
	                |ИЗ
	                |	ВТ_ТаблицаСпортсменов КАК ВТ_ТаблицаСпортсменов
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкиНаПроведениеСоревнования.СрезПоследних(
	                |				&ДатаНачалаСоревнования,
	                |				УчебныйГод = &УчебныйГод
	                |					И Соревнование = &Соревнование
	                |					И ВидСпорта = &ВидСпорта) КАК ЗаявкиНаПроведениеСоревнования
	                |		ПО ВТ_ТаблицаСпортсменов.Спортсмен = ЗаявкиНаПроведениеСоревнования.Спортсмен
	                |ГДЕ
	                |	ЗаявкиНаПроведениеСоревнования.Регистратор ЕСТЬ NULL
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	РегистрацияДопусковКСпортивнымСоревнованиям.Спортсмен КАК Спортсмен
	                |ПОМЕСТИТЬ ВТ_СпортсменыСДопуском
	                |ИЗ
	                |	РегистрСведений.РегистрацияДопусковКСпортивнымСоревнованиям.СрезПоследних(
	                |			,
	                |			Спортсмен В
	                |					(ВЫБРАТЬ
	                |						ВТ_ТаблицаСпортсменов.Спортсмен
	                |					ИЗ
	                |						ВТ_ТаблицаСпортсменов)
	                |				И ДействуетДо >= &ДатаНачалаСоревнования) КАК РегистрацияДопусковКСпортивнымСоревнованиям
	                |ГДЕ
	                |	РегистрацияДопусковКСпортивнымСоревнованиям.ДействуетДо >= &ДатаОкончанияСоревнования
	                |	И РегистрацияДопусковКСпортивнымСоревнованиям.Спортсмен.СтатусСпортсмена <> ЗНАЧЕНИЕ(Перечисление.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения)
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	РегистрацияСтраховыхПолисовСпортсменов.Спортсмен КАК Спортсмен
	                |ПОМЕСТИТЬ ВТ_СпортменыСПолисом
	                |ИЗ
	                |	РегистрСведений.РегистрацияСтраховыхПолисовСпортсменов КАК РегистрацияСтраховыхПолисовСпортсменов
	                |ГДЕ
	                |	РегистрацияСтраховыхПолисовСпортсменов.ДатаНачала <= &ДатаНачалаСоревнования
	                |	И РегистрацияСтраховыхПолисовСпортсменов.ДатаОкончания >= &ДатаОкончанияСоревнования
	                |	И РегистрацияСтраховыхПолисовСпортсменов.Спортсмен В
	                |			(ВЫБРАТЬ
	                |				ВТ_ТаблицаСпортсменов.Спортсмен
	                |			ИЗ
	                |				ВТ_ТаблицаСпортсменов)
	                |	И РегистрацияСтраховыхПолисовСпортсменов.ВидСпорта = &ВидСпорта
	                |	И РегистрацияСтраховыхПолисовСпортсменов.Организация = &Организация
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_ТаблицаСпортсменов.Спортсмен КАК Спортсмен
	                |ИЗ
	                |	ВТ_ТаблицаСпортсменов КАК ВТ_ТаблицаСпортсменов
	                |ГДЕ
	                |	НЕ ВТ_ТаблицаСпортсменов.Спортсмен В
	                |				(ВЫБРАТЬ
	                |					ВТ_СпортсменыСДопуском.Спортсмен
	                |				ИЗ
	                |					ВТ_СпортсменыСДопуском)
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_ТаблицаСпортсменов.Спортсмен КАК Спортсмен,
	                |	ВТ_ТаблицаСпортсменов.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа
	                |ИЗ
	                |	ВТ_ТаблицаСпортсменов КАК ВТ_ТаблицаСпортсменов
	                |ГДЕ
	                |	НЕ ВТ_ТаблицаСпортсменов.МеждународнаяВозрастнаяГруппа В (&СписокВозврастныхГрупп)
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_ТаблицаСпортсменов.Спортсмен КАК Спортсмен
	                |ИЗ
	                |	ВТ_ТаблицаСпортсменов КАК ВТ_ТаблицаСпортсменов
	                |ГДЕ
	                |	НЕ ВТ_ТаблицаСпортсменов.Спортсмен В
	                |				(ВЫБРАТЬ
	                |					ВТ_СпортменыСПолисом.Спортсмен
	                |				ИЗ
	                |					ВТ_СпортменыСПолисом)
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен
	                |ПОМЕСТИТЬ ВТ_СоставУчащихся
	                |ИЗ
	                |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, ВидСпорта = &ВидСпорта) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
	                |ГДЕ
	                |	(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1)
	                |			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения >= &ДатаОкончанияСоревнования
	                |			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен.СтатусСпортсмена <> ЗНАЧЕНИЕ(Перечисление.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения))
	                |	И СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения <= &ДатаНачалаСоревнования
	                |
	                |ИНДЕКСИРОВАТЬ ПО
	                |	Спортсмен
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_ТаблицаСпортсменов.Спортсмен КАК Спортсмен
	                |ИЗ
	                |	ВТ_ТаблицаСпортсменов КАК ВТ_ТаблицаСпортсменов
	                |ГДЕ
	                |	НЕ ВТ_ТаблицаСпортсменов.Спортсмен В
	                |				(ВЫБРАТЬ
	                |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен
	                |				ИЗ
	                |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)";
	
	Результат = Запрос.ВыполнитьПакет();
	
	тзСпортсменыБезЗаявок = Результат[1].Выгрузить();
	Если НЕ тзСпортсменыБезЗаявок.Количество() = 0 Тогда
		
		Для Каждого строкаСпортсмен Из тзСпортсменыБезЗаявок Цикл
			Если строкаСпортсмен.Спортсмен.СтатусСпортсмена <> Перечисления.статусыСпортсменов.СпортсменДругогоСпортивногоУчреждения Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для спортсмена %1 не зарегистрирована заявка для участия в соревнованиях в текущем учебном году.'"),
			строкаСпортсмен.Спортсмен);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	тзСпортсменыБезДопуска = Результат[4].Выгрузить();
	Если НЕ тзСпортсменыБезДопуска.Количество() = 0 Тогда
		
		Для Каждого строкаСпортсмен Из тзСпортсменыБезДопуска Цикл
			Если строкаСпортсмен.Спортсмен.СтатусСпортсмена <> Перечисления.статусыСпортсменов.СпортсменДругогоСпортивногоУчреждения Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'У спортсмена %1 нет допуска для участия в соревнованиях в текущем учебном году.'"),
			строкаСпортсмен.Спортсмен);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	// {Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
	Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Организация).ВозрастныеГруппыОрганизация Тогда
		Если НЕ Соревнование.МеждународныеВозрастныеГруппы.Выгрузить().ВыгрузитьКолонку("МеждународнаяВозрастнаяГруппа").Количество() = 0 Тогда
			тзСпортсменыБезГруппы = Результат[5].Выгрузить();
			Если НЕ тзСпортсменыБезГруппы.Количество() = 0 Тогда
				
				Для Каждого строкаСпортсмен Из тзСпортсменыБезГруппы Цикл
					Если строкаСпортсмен.Спортсмен.СтатусСпортсмена <> Перечисления.статусыСпортсменов.СпортсменДругогоСпортивногоУчреждения Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В соревнование не заявлена возрастная группа %1, спортсмен %2.'"),
					строкаСпортсмен.МеждународнаяВозрастнаяГруппа,
					строкаСпортсмен.Спортсмен);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Отказ = Истина;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Организация).СтрахованиеСпортсменовОрганизация Тогда
		тзСпортсменыБезПолиса = Результат[6].Выгрузить();
		Если НЕ тзСпортсменыБезПолиса.Количество() = 0 Тогда
			// {Рарус adilas #11071 -Ведение страховых полисов спортсмнов 2020.11.19
			// Было Отказ = Истина;
			Для Каждого строкаСпортсмен Из тзСпортсменыБезПолиса Цикл
				Если строкаСпортсмен.Спортсмен.СтатусСпортсмена <> Перечисления.статусыСпортсменов.СпортсменДругогоСпортивногоУчреждения Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'У спортсмена %1 отсутствует или просрочен страховой полис.'"),
				строкаСпортсмен.Спортсмен);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			КонецЦикла;
			// }Рарус adilas #11071 -Ведение страховых полисов спортсмнов 2020.11.19	
		КонецЕсли;
	КонецЕсли;
	// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
	
	// {Рарус adilas #11666 -Тестирование. Пункт №2 2020.12.11
	// Добавить проверку на отчисление
	тзОтчисленныеСпортсмены = Результат[8].Выгрузить();
	Если НЕ тзОтчисленныеСпортсмены.Количество() = 0 Тогда
		Для Каждого строкаСпортсмен Из тзОтчисленныеСпортсмены Цикл
			Если строкаСпортсмен.Спортсмен.СтатусСпортсмена <> Перечисления.статусыСпортсменов.СпортсменДругогоСпортивногоУчреждения Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Спортсмен %1 не обучается в спортивном учреждении (не зачислен или отчислен из учреждения).'"), строкаСпортсмен.Спортсмен);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	// }Рарус adilas #11666 -Тестирование. Пункт №2 2020.12.11
	
КонецПроцедуры
// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.18

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли