
#Область СлужебныйПрограммныйИнтерфейс
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Отказ = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка"      	, ДокументСсылка);
	// {Рарус adilas #10048 -Реквизиты дат для документов 2020.10.09
	Запрос.УстановитьПараметр("Период"      	, ДокументСсылка.ДатаЗачисления);
	// }Рарус adilas #10048 -Реквизиты дат для документов 2020.10.09
	Запрос.УстановитьПараметр("УчебныйГод"      , ДокументСсылка.УчебныйГод);
	Запрос.УстановитьПараметр("Организация" 	, ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("Группа"      	, ДокументСсылка.Группа);
	Запрос.УстановитьПараметр("Тренер"      	, ДокументСсылка.ТренерСборной);
	Запрос.УстановитьПараметр("ВидСпорта"   	, ДокументСсылка.ВидСпорта);
	Запрос.Текст =  "ВЫБРАТЬ
	                |	""СоставГруппы"" КАК ИмяРегистра_,
	                |	&Период КАК Период,
	                |	&Ссылка КАК Ссылка,
	                |	&УчебныйГод КАК УчебныйГод,
	                |	&Организация КАК Организация,
	                |	&Группа КАК Группа,
	                |	&Тренер КАК ТренерСборной,
	                |	&ВидСпорта КАК ВидСпорта,
	                |	ВключениеСпортсменаВГруппуСпортсмены.Спортсмен КАК Спортсмен,
	                |	ВключениеСпортсменаВГруппуСпортсмены.КлючСтроки КАК КлючСтроки
	                |ПОМЕСТИТЬ ВТ_ПодготовленныеДанные
	                |ИЗ
	                |	Документ.ВключениеСпортсменовВГруппу.Спортсмены КАК ВключениеСпортсменаВГруппуСпортсмены
	                |ГДЕ
	                |	ВключениеСпортсменаВГруппуСпортсмены.Ссылка = &Ссылка
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_ПодготовленныеДанные.ИмяРегистра_ КАК ИмяРегистра_,
	                |	ВТ_ПодготовленныеДанные.Период КАК Период,
	                |	ВТ_ПодготовленныеДанные.УчебныйГод КАК УчебныйГод,
	                |	ВТ_ПодготовленныеДанные.Организация КАК Организация,
	                |	ВТ_ПодготовленныеДанные.Группа КАК Группа,
	                |	ВТ_ПодготовленныеДанные.ТренерСборной КАК ТренерСборной,
	                |	ВТ_ПодготовленныеДанные.ВидСпорта КАК ВидСпорта,
	                |	ВТ_ПодготовленныеДанные.Спортсмен КАК Спортсмен,
	                |	ВТ_ПодготовленныеДанные.КлючСтроки КАК КлючСтроки
	                |ИЗ
	                |	ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_ПодготовленныеДанные.ИмяРегистра_ КАК ИмяРегистра_,
	                |	ВТ_ПодготовленныеДанные.Период КАК Период,
	                |	ВТ_ПодготовленныеДанные.УчебныйГод КАК УчебныйГод,
	                |	ВТ_ПодготовленныеДанные.Организация КАК Организация,
	                |	ВТ_ПодготовленныеДанные.Группа КАК Группа,
	                |	ВТ_ПодготовленныеДанные.Спортсмен КАК Спортсмен,
	                |	ВТ_ПодготовленныеДанные.ВидСпорта КАК ВидСпорта,
	                |	СписокЛичныхТренеров.Тренер КАК Тренер
	                |ИЗ
	                |	ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВключениеСпортсменовВГруппу.СписокЛичныхТренеров КАК СписокЛичныхТренеров
	                |		ПО ВТ_ПодготовленныеДанные.КлючСтроки = СписокЛичныхТренеров.КлючСтроки
	                |			И ВТ_ПодготовленныеДанные.Ссылка = СписокЛичныхТренеров.Ссылка
	                |ГДЕ
	                |	НЕ СписокЛичныхТренеров.Ссылка ЕСТЬ NULL";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ТаблицаСоставГруппы          = Пакет[1].Выгрузить();
	ТаблицаЛичныйТренерСпортсмена = Пакет[2].Выгрузить();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаСоставГруппы"          , ТаблицаСоставГруппы);
	ТаблицыДляДвижений.Вставить("ТаблицаЛичныйТренерСпортсмена" , ТаблицаЛичныйТренерСпортсмена);
	
    ДополнительныеСвойства.Вставить("Отказ", Отказ);
	
КонецПроцедуры	

Процедура ВыполнитьКонтрольРезультатовПроведения(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ВключениеСпортсменовВГруппу.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКонтрольПередПроведением(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ВключениеСпортсменовВГруппу.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКонтрольРезультатовОтменыПроведения(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ВключениеСпортсменовВГруппу.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

// + Адильбеков А.Б. 20.05.20 IN-6493 {

#Область ПечатьWord
// Подготавливает данные объекта к выводу на печать.
// 
// Параметры:
//  Согласия - Массив - ссылки на документы, для которых запрашиваются данные для печати;
//  МассивИменМакетов - Массив - имена макетов (Строка), в которые подставляются данные для печати.
//
// Возвращаемое значение:
//  Соответствие - коллекция ссылок на объекты и их данные:
//   * Ключ - ЛюбаяСсылка - ссылка на объект информационной базы;
//   * Значение - Структура - макет и данные:
//    ** Ключ - Строка - имя макета,
//    ** Значение - Структура - данные объекта.
//
Функция ПолучитьДанныеПечати(знач МассивДокументов, знач МассивИменМакетов) Экспорт
	
	// Создание функции подготовки данных для печати.
	ДанныеПоВсемОбъектам = Новый Соответствие;
	
	Для Каждого ОбъектСсылка Из МассивДокументов Цикл
		ДанныеОбъектаПоМакетам = Новый Соответствие;
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл
			ДанныеОбъектаПоМакетам.Вставить(ИмяМакета, ПолучитьДанныеОбъекта(ОбъектСсылка,ИмяМакета));
		КонецЦикла;
		ДанныеПоВсемОбъектам.Вставить(ОбъектСсылка, ДанныеОбъектаПоМакетам);
	КонецЦикла;
	
	ОписаниеОбластей = Новый Соответствие;
	ДвоичныеДанныеМакетов = Новый Соответствие;
	ТипыМакетов = Новый Соответствие;
	                                                             
	Для Каждого ИмяМакета Из МассивИменМакетов Цикл
		Если ИмяМакета = "ПФ_DOC_ПриказВключение" Тогда
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, Документы.ВключениеСпортсменовВГруппу.ПолучитьМакет("ПФ_DOC_ПриказВключение"));
			ТипыМакетов.Вставить(ИмяМакета, "DOC");
		ИначеЕсли ИмяМакета = "ПФ_DOC_СлужебнаяЗаписка" Тогда
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, Документы.ВключениеСпортсменовВГруппу.ПолучитьМакет("ПФ_DOC_СлужебнаяЗаписка"));
			ТипыМакетов.Вставить(ИмяМакета, "DOC");	
		КонецЕсли;
		ОписаниеОбластей.Вставить(ИмяМакета, ПолучитьОписаниеОбластейМакетаОфисногоДокумента(ИмяМакета));
	КонецЦикла;

	
	Возврат Новый Структура("Данные, Макеты",
											ДанныеПоВсемОбъектам,
											Новый Структура("ОписаниеОбластей, ТипыМакетов, ДвоичныеДанныеМакетов",
											ОписаниеОбластей,
											ТипыМакетов,
											ДвоичныеДанныеМакетов));


КонецФункции

Функция ПолучитьОписаниеОбластейМакетаОфисногоДокумента(ИмяМакета)
	
	ОписаниеОбластей = Новый Структура;
	
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьШапка"        				       , "Общая");            // Описание областей в вордовском документе
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьСписокСпортсмены"        	       , "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьШапкаТаблицы"     				   , "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьСтрокаТаблицыСпортсмены"       	   , "СтрокаТаблицы"); 
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьПодвал"     				       , "Общая");
	
	Возврат ОписаниеОбластей;
	
КонецФункции

Функция ПолучитьДанныеОбъекта(ОбъектыПечати,ИмяМакета) Экспорт
	Если ИмяМакета = "ПФ_DOC_ПриказВключение" Тогда
		Возврат ПолучитьДанныеОбъектаПриказ(ОбъектыПечати);
	ИначеЕсли ИмяМакета = "ПФ_DOC_СлужебнаяЗаписка" Тогда
		Возврат ПолучитьДанныеОбъектаСлужебнаяЗаписка(ОбъектыПечати);		
	КонецЕсли;
КонецФункции

Функция ПолучитьДанныеОбъектаПриказ(ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВключениеСпортсменовВГруппу.Ссылка КАК Ссылка,
		|	ВключениеСпортсменовВГруппу.Группа КАК Группа,
		|	ВключениеСпортсменовВГруппу.ТренерСборной КАК ТренерСборной
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ВключениеСпортсменовВГруппу КАК ВключениеСпортсменовВГруппу
		|ГДЕ
		|	ВключениеСпортсменовВГруппу.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВключениеСпортсменовВГруппуСпортсмены.Спортсмен КАК Спортсмен,
		|	ВТ_Данные.Группа КАК Группа,
		|	ВТ_Данные.ТренерСборной КАК ТренерСборной,
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ФизическиеЛица.ДатаРождения КАК ДатаРождения
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВключениеСпортсменовВГруппу.Спортсмены КАК ВключениеСпортсменовВГруппуСпортсмены
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|			ПО ВключениеСпортсменовВГруппуСпортсмены.Спортсмен.ФизическоеЛицо = ФизическиеЛица.Ссылка
		|		ПО ВТ_Данные.Ссылка = ВключениеСпортсменовВГруппуСпортсмены.Ссылка
		|ИТОГИ ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("СписокДокументов",ОбъектыПечати);
	
	МассивДокументов = Новый Массив;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСсылка
		    СтруктураДокумента = Новый Структура;
			
			СтруктураШапка = Новый Структура;

			МассивСтрокСпортсмены = Новый Массив;
			НомерСтрокиСпр = 1;
			
			ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спортсмен) Тогда
					СтруктураШапкаТаблицы = Новый Структура;
					СтруктураШапкаТаблицы.Вставить("Группа",ВыборкаДетальныеЗаписи.Группа);
			 		СтруктураШапкаТаблицы.Вставить("ТренерСборной",ВыборкаДетальныеЗаписи.ТренерСборной);
					// Таблица спортсмены
					СтруктураСтрокаСпортсмены = Новый Структура("НомерСтроки,Спортсмен,ДатаРождения,Основание");				
					ЗаполнитьЗначенияСвойств(СтруктураСтрокаСпортсмены,ВыборкаДетальныеЗаписи);
					СтруктураСтрокаСпортсмены.ДатаРождения 	= Формат(ВыборкаДетальныеЗаписи.ДатаРождения, "ДЛФ=Д");
					СтруктураСтрокаСпортсмены.НомерСтроки	= НомерСтрокиСпр;
					НомерСтрокиСпр 							= НомерСтрокиСпр +1;
					// Фамилия и Имя
					ЧастиИмени 								= СтрРазделить(ВыборкаДетальныеЗаписи.Спортсмен, " ", Ложь);
					Фамилия 								= ЧастиИмени[0];
					Имя 									= ЧастиИмени[1];
					СтруктураСтрокаСпортсмены.Спортсмен 	= Фамилия + " " + Имя;
					МассивСтрокСпортсмены.Добавить(СтруктураСтрокаСпортсмены);
				Иначе
					ОбщегоНазначения.СообщитьПользователю("Состав группы пустой!");
				КонецЕсли;
			КонецЦикла;
			
			// Подвал
			СтруктураПодвал = Новый Структура;
			СтруктураПодвал.Вставить("Комментарий",ВыборкаСсылка.Ссылка.Комментарий);
			СтруктураПодвал.Вставить("Ответственный",ВыборкаСсылка.Ссылка.Ответственный);
			
			// Заполение Областей документа Ворд
			СтруктураДокумента.Вставить("ОбластьШапка", СтруктураШапка);
			СтруктураДокумента.Вставить("ОбластьШапкаТаблицы", СтруктураШапкаТаблицы);
			СтруктураДокумента.Вставить("ОбластьСтрокаТаблицыСпортсмены", МассивСтрокСпортсмены);
			СтруктураДокумента.Вставить("ОбластьПодвал",СтруктураПодвал);
					
			МассивДокументов.Добавить(СтруктураДокумента);
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивДокументов
	
	
КонецФункции
// Служебная записка
Функция ПолучитьДанныеОбъектаСлужебнаяЗаписка(ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВключениеСпортсменовВГруппу.Ссылка КАК Ссылка,
		|	ВключениеСпортсменовВГруппу.Группа КАК Группа,
		|	ВключениеСпортсменовВГруппу.ТренерСборной КАК ТренерСборной,
		|	ВключениеСпортсменовВГруппу.Организация КАК Организация,
		|	ВключениеСпортсменовВГруппу.Организация.Директор КАК Директор
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ВключениеСпортсменовВГруппу КАК ВключениеСпортсменовВГруппу
		|ГДЕ
		|	ВключениеСпортсменовВГруппу.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВключениеСпортсменовВГруппуСпортсмены.Ссылка КАК Ссылка,
		|	ВключениеСпортсменовВГруппуСпортсмены.Спортсмен КАК Спортсмен,
		|	ВключениеСпортсменовВГруппуСпортсмены.Спортсмен.ФизическоеЛицо.ДатаРождения КАК ДатаРождения
		|ПОМЕСТИТЬ ВТ_Спортсмены
		|ИЗ
		|	Документ.ВключениеСпортсменовВГруппу.Спортсмены КАК ВключениеСпортсменовВГруппуСпортсмены
		|ГДЕ
		|	ВключениеСпортсменовВГруппуСпортсмены.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ФизическиеЛицаКонтактнаяИнформация.Представление) КАК Адрес,
		|	ВТ_Спортсмены.Спортсмен КАК Спортсмен
		|ПОМЕСТИТЬ ВТ_Адрес
		|ИЗ
		|	ВТ_Спортсмены КАК ВТ_Спортсмены
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|		ПО ВТ_Спортсмены.Спортсмен.ФизическоеЛицо.Ссылка = ФизическиеЛицаКонтактнаяИнформация.Ссылка
		|ГДЕ
		|	ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(перечисление.типыконтактнойинформации.Адрес)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Спортсмены.Спортсмен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ВТ_Данные.Группа КАК Группа,
		|	ВТ_Данные.ТренерСборной КАК ТренерСборной,
		|	ВТ_Данные.Организация КАК Организация,
		|	ВТ_Данные.Директор КАК Директор,
		|	ВТ_Спортсмены.Спортсмен КАК Спортсмен,
		|	ВТ_Спортсмены.ДатаРождения КАК ДатаРождения,
		|	ВТ_Адрес.Адрес КАК Адрес
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные,
		|	ВТ_Спортсмены КАК ВТ_Спортсмены
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Адрес КАК ВТ_Адрес
		|		ПО ВТ_Спортсмены.Спортсмен = ВТ_Адрес.Спортсмен
		|ИТОГИ ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("СписокДокументов",ОбъектыПечати);
	
	МассивДокументов = Новый Массив;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСсылка
		    СтруктураДокумента = Новый Структура;
			СтруктураШапка = Новый Структура;
			// Фамилия и инициалы
			Директор = ВыборкаСсылка.Ссылка.Организация.Директор;
			    			 			
			СтрокаФИО = Директор;  
			// Получаем результат склонения
			Директор = СклонениеПредставленийОбъектов.ПросклонятьФИО(Строка(СтрокаФИО), 3); 
			//Директор = Объект.Просклонять(Строка(СтрокаФИО), Падеж, 0);
			СтруктураШапка.Вставить("Директор",ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Директор));
			// Список спортсменов строкой
			СтруктураСписок = Новый Структура;
			СписокСтрокой = "";
			СтруктураСписок.Вставить("Группа",ВыборкаСсылка.Ссылка.Группа);
			//МассивШапка = Новый Массив;	
			СтруктураШапкаТаблицы = Новый Структура;
			СтруктураШапкаТаблицы.Вставить("ТренерСборной",ВыборкаСсылка.Ссылка.ТренерСборной);
			МассивШапкаТаблицы = Новый Массив;
			
			МассивСтрокСпортсмены = Новый Массив;
			НомерСтрокиСпр = 1;
			
			ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
			
			Сч = ВыборкаДетальныеЗаписи.Количество();
			
			Пока Сч > 0 Цикл
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спортсмен) Тогда
						// Таблица спортсмены
						СтруктураСтрокаСпортсмены 				= Новый Структура("НомерСтроки,Спортсмен,ДатаРождения,Адрес,Основание");
						ЗаполнитьЗначенияСвойств(СтруктураСтрокаСпортсмены,ВыборкаДетальныеЗаписи);
						СтруктураСтрокаСпортсмены.ДатаРождения 	= Формат(ВыборкаДетальныеЗаписи.ДатаРождения, "ДЛФ=Д");
						СтруктураСтрокаСпортсмены.НомерСтроки 	= НомерСтрокиСпр;
						НомерСтрокиСпр 							= НомерСтрокиСпр +1;
						// Фамилия и Имя
						ЧастиИмени 								= СтрРазделить(ВыборкаДетальныеЗаписи.Спортсмен, " ", Ложь);
						Фамилия 								= ЧастиИмени[0];
						Имя 									= ЧастиИмени[1];
						СтруктураСтрокаСпортсмены.Спортсмен 	= Фамилия + " " + Имя;
						МассивСтрокСпортсмены.Добавить(СтруктураСтрокаСпортсмены);
						
						Если Сч <> 1 Тогда
							СтрокаФИ = Фамилия + " " + Имя;
							// Получаем результат склонения
							СтрокаФИ = СклонениеПредставленийОбъектов.ПросклонятьФИО(Строка(СтрокаФИ), 4);
							СписокСтрокой = СписокСтрокой + СокрП(СтрокаФИ) + ", ";
							Сч = Сч - 1;
						Иначе
							СтрокаФИ = Фамилия + " " + Имя;
							// Задаем требуемый падеж
							Падеж = 4;  
							// Получаем результат склонения
							СтрокаФИ = СклонениеПредставленийОбъектов.ПросклонятьФИО(Строка(СтрокаФИ), 4);
							СписокСтрокой = СписокСтрокой + СокрП(СтрокаФИ);
							Сч = Сч - 1;
						КонецЕсли;
					Иначе
						ОбщегоНазначения.СообщитьПользователю("Состав группы пустой!");
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			СтруктураСписок.Вставить("СписокСпортсмены",СписокСтрокой);
			СтруктураШапкаТаблицы.Вставить("МассивСтрокСпортсмены",МассивСтрокСпортсмены);
			//МассивШапка.Добавить(СтруктураШапка);
			МассивШапкаТаблицы.Добавить(СтруктураШапкаТаблицы);
			// Подвал
			СтруктураПодвал = Новый Структура;
			// Заполение Областей документа Ворд
			СтруктураДокумента.Вставить("ОбластьШапка", СтруктураШапка);
			СтруктураДокумента.Вставить("ОбластьСписокСпортсмены", СтруктураСписок);
			СтруктураДокумента.Вставить("ОбластьШапкаТаблицы", МассивШапкаТаблицы);
			СтруктураДокумента.Вставить("ОбластьСтрокаТаблицыСпортсмены", МассивСтрокСпортсмены);
			СтруктураДокумента.Вставить("ОбластьПодвал",СтруктураПодвал);
					
			МассивДокументов.Добавить(СтруктураДокумента);
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивДокументов
	
	
КонецФункции

#КонецОбласти

#Область Печать
// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт 
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,"ПФ_MXL_ПриказВключение") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
																	"ПФ_MXL_ПриказВключение", // Идентфикатор
																	"Зачисление в группу", // Название (представление) 
								  СформироватьПечатнуюФормуПриказ(МассивОбъектов)); // Функция которая получает макет и его заполняет
								  
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,"ПФ_MXL_СлужебнаяЗаписка") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
																	"ПФ_MXL_СлужебнаяЗаписка", // Идентфикатор
																	"Служебная записка", // Название (представление) 
								  СформироватьПечатнуюФормуСлужебнаяЗаписка(МассивОбъектов)); // Функция которая получает макет и его заполняет
								  
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,"ПриказВключениеТабДок") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
																	"ПриказВключениеТабДок", // Идентфикатор
																	"Зачисление в группу", // Название (представление) 
								  СформироватьПечатнуюФормуПриказВключениеТабДок(МассивОбъектов)); // Функция которая получает макет и его заполняет
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуПриказ(МассивОбъектовДляПечати) Экспорт  // Функция которая получает макет и заполняет его 
	
	Если ТипЗнч(МассивОбъектовДляПечати) = Тип("Массив") Тогда
		МассивОбъектов = МассивОбъектовДляПечати;	
	Иначе	
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(МассивОбъектовДляПечати);	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВключениеСпортсменовВГруппу.Ссылка КАК Ссылка,
		|	ВключениеСпортсменовВГруппу.Группа КАК Группа,
		|	ВключениеСпортсменовВГруппу.ТренерСборной КАК ТренерСборной
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ВключениеСпортсменовВГруппу КАК ВключениеСпортсменовВГруппу
		|ГДЕ
		|	ВключениеСпортсменовВГруппу.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВключениеСпортсменовВГруппуСпортсмены.Спортсмен КАК Спортсмен,
		|	ВТ_Данные.Группа КАК Группа,
		|	ВТ_Данные.ТренерСборной КАК ТренерСборной,
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ФизическиеЛица.ДатаРождения КАК ДатаРождения
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВключениеСпортсменовВГруппу.Спортсмены КАК ВключениеСпортсменовВГруппуСпортсмены
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|			ПО ВключениеСпортсменовВГруппуСпортсмены.Спортсмен.ФизическоеЛицо = ФизическиеЛица.Ссылка
		|		ПО ВТ_Данные.Ссылка = ВключениеСпортсменовВГруппуСпортсмены.Ссылка
		|ИТОГИ ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ПутьКМакету = "Документ.ВключениеСпортсменовВГруппу.ПФ_MXL_ПриказВключение";
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету); // Получаем макет
	
	ТабДок = Новый ТабличныйДокумент;  // Создаем новый ТабДок
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСсылка
			ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка"); // Получаем области из макета
			ТабДок.Вывести(ОбластьШапка);
			
			// Область шапка
			ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы"); // Получаем области из макета
			ОбластьШапкаТаблицы.Параметры.ТренерСборной 				= ВыборкаСсылка.Ссылка.ТренерСборной;
			ОбластьШапкаТаблицы.Параметры.Группа 						= ВыборкаСсылка.Ссылка.Группа;
			ТабДок.Вывести(ОбластьШапкаТаблицы);
			
			НомерСтрокиСпр = 1;
			ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спортсмен) Тогда
					// Таблица спортсмены
					ОбластьСтрокаТаблицыСпортсмены = Макет.ПолучитьОбласть("ОбластьСтрокаТаблицыСпортсмены");
					ОбластьСтрокаТаблицыСпортсмены.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
					ОбластьСтрокаТаблицыСпортсмены.Параметры.НомерСтроки 	= НомерСтрокиСпр;
					НомерСтрокиСпр 											= НомерСтрокиСпр +1;
					// Фамилия и Имя
					ЧастиИмени 												= СтрРазделить(ВыборкаДетальныеЗаписи.Спортсмен, " ", Ложь);
					Фамилия 												= ЧастиИмени[0];
					Имя 													= ЧастиИмени[1];
					ОбластьСтрокаТаблицыСпортсмены.Параметры.Спортсмен 		= Фамилия + " " + Имя;
					ОбластьСтрокаТаблицыСпортсмены.Параметры.ДатаРождения 	= Формат(ВыборкаДетальныеЗаписи.ДатаРождения,"ДЛФ=Д");
					ТабДок.Вывести(ОбластьСтрокаТаблицыСпортсмены);
				Иначе
					ОбщегоНазначения.СообщитьПользователю("Состав группы пустой!");
				КонецЕсли;
			КонецЦикла;
			// Подвал
			ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
			ТабДок.Вывести(ОбластьПодвал);
			
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	КонецЕсли;
	
	ТабДок.КлючПараметровПечати	= ПутьКМакету;
	ТабДок.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб 			= Истина;
	
	Возврат ТабДок;
	
	
КонецФункции	

Функция СформироватьПечатнуюФормуСлужебнаяЗаписка(МассивОбъектовДляПечати) Экспорт  // Функция которая получает макет и заполняет его 
	
	Если ТипЗнч(МассивОбъектовДляПечати) = Тип("Массив") Тогда
		МассивОбъектов = МассивОбъектовДляПечати;	
	Иначе	
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(МассивОбъектовДляПечати);	
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВключениеСпортсменовВГруппу.Ссылка КАК Ссылка,
		|	ВключениеСпортсменовВГруппу.Группа КАК Группа,
		|	ВключениеСпортсменовВГруппу.ТренерСборной КАК ТренерСборной,
		|	ВключениеСпортсменовВГруппу.Организация КАК Организация,
		|	ВключениеСпортсменовВГруппу.Организация.Директор КАК Директор
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ВключениеСпортсменовВГруппу КАК ВключениеСпортсменовВГруппу
		|ГДЕ
		|	ВключениеСпортсменовВГруппу.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВключениеСпортсменовВГруппуСпортсмены.Ссылка КАК Ссылка,
		|	ВключениеСпортсменовВГруппуСпортсмены.Спортсмен КАК Спортсмен,
		|	ВключениеСпортсменовВГруппуСпортсмены.Спортсмен.ФизическоеЛицо.ДатаРождения КАК ДатаРождения
		|ПОМЕСТИТЬ ВТ_Спортсмены
		|ИЗ
		|	Документ.ВключениеСпортсменовВГруппу.Спортсмены КАК ВключениеСпортсменовВГруппуСпортсмены
		|ГДЕ
		|	ВключениеСпортсменовВГруппуСпортсмены.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ФизическиеЛицаКонтактнаяИнформация.Представление) КАК Адрес,
		|	ВТ_Спортсмены.Спортсмен КАК Спортсмен
		|ПОМЕСТИТЬ ВТ_Адрес
		|ИЗ
		|	ВТ_Спортсмены КАК ВТ_Спортсмены
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|		ПО ВТ_Спортсмены.Спортсмен.ФизическоеЛицо.Ссылка = ФизическиеЛицаКонтактнаяИнформация.Ссылка
		|ГДЕ
		|	ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(перечисление.типыконтактнойинформации.Адрес)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Спортсмены.Спортсмен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ВТ_Данные.Группа КАК Группа,
		|	ВТ_Данные.ТренерСборной КАК ТренерСборной,
		|	ВТ_Данные.Организация КАК Организация,
		|	ВТ_Данные.Директор КАК Директор,
		|	ВТ_Спортсмены.Спортсмен КАК Спортсмен,
		|	ВТ_Спортсмены.ДатаРождения КАК ДатаРождения,
		|	ВТ_Адрес.Адрес КАК Адрес
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные,
		|	ВТ_Спортсмены КАК ВТ_Спортсмены
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Адрес КАК ВТ_Адрес
		|		ПО ВТ_Спортсмены.Спортсмен = ВТ_Адрес.Спортсмен
		|ИТОГИ ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ПутьКМакету = "Документ.ВключениеСпортсменовВГруппу.ПФ_MXL_СлужебнаяЗаписка";
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету); // Получаем макет
	
	ТабДок = Новый ТабличныйДокумент;  // Создаем новый ТабДок
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСсылка
		    // Область шапка
			ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка"); // Получаем области из макета
			Директор = ВыборкаСсылка.Ссылка.Организация.Директор;    
			Попытка
				ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСклоненияФИО", "NameDecl" , ТипВнешнейКомпоненты.Native); 
				Объект = Новый("AddIn.NameDecl.CNameDecl");   
			Исключение
				ОбщегоНазначения.СообщитьПользователю("Не удалось подключить внешнюю компоненту по причине: " + ОписаниеОшибки());      
			КонецПопытки;
			
			СтрокаФИО = Директор;  
			// Получаем результат склонения
			Директор = СклонениеПредставленийОбъектов.ПросклонятьФИО(Строка(СтрокаФИО), 3);
			ОбластьШапка.Параметры.Директор 							= ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Директор);
			// Список спортсменов строкой
			СписокСтрокой = "";
			ОбластьСписокСпортсмены = Макет.ПолучитьОбласть("ОбластьСписокСпортсмены");
			ОбластьСписокСпортсмены.Параметры.Группа 					= ВыборкаСсылка.Ссылка.Группа;
			
			ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы");
			МассивШапкаТаблицы = Новый Массив;
			ОбластьШапкаТаблицы.Параметры.ТренерСборной 				= ВыборкаСсылка.Ссылка.ТренерСборной;
			МассивШапкаТаблицы.Добавить(ОбластьШапкаТаблицы);
			
			НомерСтрокиСпр = 1;
			ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать(); 
			Сч = ВыборкаДетальныеЗаписи.Количество();
			
			Пока Сч > 0 Цикл
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спортсмен) Тогда
						// Таблица спортсмены
						ОбластьСтрокаТаблицыСпортсмены 							= Макет.ПолучитьОбласть("ОбластьСтрокаТаблицыСпортсмены");
						ОбластьСтрокаТаблицыСпортсмены.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
						ОбластьСтрокаТаблицыСпортсмены.Параметры.НомерСтроки 	= НомерСтрокиСпр;
						НомерСтрокиСпр 											= НомерСтрокиСпр +1;
						// Фамилия и Имя
						ЧастиИмени = СтрРазделить(ВыборкаДетальныеЗаписи.Спортсмен, " ", Ложь);
						Фамилия = ЧастиИмени[0];
						Имя = ЧастиИмени[1];
						ОбластьСтрокаТаблицыСпортсмены.Параметры.Спортсмен      = Фамилия + " " + Имя;
						ОбластьСтрокаТаблицыСпортсмены.Параметры.ДатаРождения 	= Формат(ВыборкаДетальныеЗаписи.ДатаРождения,"ДЛФ=Д");
						
						Если Сч <> 1 Тогда
							СтрокаФИ = Фамилия + " " + Имя;  
							// Получаем результат склонения
							СтрокаФИ = СклонениеПредставленийОбъектов.ПросклонятьФИО(Строка(СтрокаФИ), 4);
							СписокСтрокой = СписокСтрокой + СокрП(СтрокаФИ) + ", ";
							Сч = Сч - 1;
						Иначе
							СтрокаФИ = Фамилия + " " + Имя;  
							// Получаем результат склонения
							СтрокаФИ = СклонениеПредставленийОбъектов.ПросклонятьФИО(Строка(СтрокаФИ), 4);
							СписокСтрокой = СписокСтрокой + СокрП(СтрокаФИ);
							Сч = Сч - 1;
						КонецЕсли;
						МассивШапкаТаблицы.Добавить(ОбластьСтрокаТаблицыСпортсмены);
					Иначе
						ОбщегоНазначения.СообщитьПользователю("Состав группы пустой!");
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			ТабДок.Вывести(ОбластьШапка);
			ОбластьСписокСпортсмены.Параметры.СписокСпортсмены 			= СписокСтрокой;		
			ТабДок.Вывести(ОбластьСписокСпортсмены);
			
			Для каждого Строка Из МассивШапкаТаблицы Цикл
				ТабДок.Вывести(Строка);		
			КонецЦикла;
			// Подвал
			ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
			ТабДок.Вывести(ОбластьПодвал);
			
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	КонецЕсли;
	
	ТабДок.КлючПараметровПечати	= ПутьКМакету;
	ТабДок.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб 			= Истина;
	
	Возврат ТабДок;
	
КонецФункции
// {Рарус dotere #17261 -Заполнение печатной формы 2021.07.19
Функция СформироватьПечатнуюФормуПриказВключениеТабДок(МассивОбъектовДляПечати) Экспорт
	   Если ТипЗнч(МассивОбъектовДляПечати) = Тип("Массив") Тогда
		МассивОбъектов = МассивОбъектовДляПечати;	
	Иначе	
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(МассивОбъектовДляПечати);	
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВключениеСпортсменовВГруппу.Организация.ПолноеНаименование КАК ОрганизацияПолноеНаименование,
		|	ВключениеСпортсменовВГруппу.Организация.Директор КАК ОрганизацияДиректор,
		|	ВключениеСпортсменовВГруппу.ВидСпорта КАК ВидСпорта,
		|	ВключениеСпортсменовВГруппу.ДатаЗачисления КАК ДатаЗачисления,
		|	ВключениеСпортсменовВГруппу.ТренерСборной КАК ТренерСборной,
		|	ВключениеСпортсменовВГруппу.Ссылка КАК Ссылка,
		|	ВключениеСпортсменовВГруппу.Группа КАК Группа
		|ПОМЕСТИТЬ ВТ_ДокументВключенияВГруппу
		|ИЗ
		|	Документ.ВключениеСпортсменовВГруппу КАК ВключениеСпортсменовВГруппу
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВключениеСпортсменовВГруппуСпортсмены.Спортсмен КАК Спортсмен,
		|	ВТ_ДокументВключенияВГруппу.ОрганизацияПолноеНаименование КАК ОрганизацияПолноеНаименование,
		|	ВТ_ДокументВключенияВГруппу.ОрганизацияДиректор КАК ОрганизацияДиректор,
		|	ВТ_ДокументВключенияВГруппу.ВидСпорта КАК ВидСпорта,
		|	ВТ_ДокументВключенияВГруппу.ДатаЗачисления КАК ДатаЗачисления,
		|	ВТ_ДокументВключенияВГруппу.ТренерСборной КАК ТренерСборной,
		|	ВТ_ДокументВключенияВГруппу.Ссылка КАК Ссылка,
		|	ВТ_ДокументВключенияВГруппу.Группа КАК Группа
		|ПОМЕСТИТЬ ВТ_Спортсмены
		|ИЗ
		|	ВТ_ДокументВключенияВГруппу КАК ВТ_ДокументВключенияВГруппу
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВключениеСпортсменовВГруппу.Спортсмены КАК ВключениеСпортсменовВГруппуСпортсмены
		|		ПО ВТ_ДокументВключенияВГруппу.Ссылка = ВключениеСпортсменовВГруппуСпортсмены.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПодтвержденныеРазрядыСпортсменовСрезПоследних.Организация КАК Организация,
		|	ПодтвержденныеРазрядыСпортсменовСрезПоследних.Спортсмен КАК Спортсмен,
		|	ПодтвержденныеРазрядыСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта,
		|	ПодтвержденныеРазрядыСпортсменовСрезПоследних.Разряд КАК Разряд
		|ПОМЕСТИТЬ ВТ_Разряды
		|ИЗ
		|	РегистрСведений.ПодтвержденныеРазрядыСпортсменов.СрезПоследних КАК ПодтвержденныеРазрядыСпортсменовСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_Спортсмены.Спортсмен КАК Спортсмен,
		|	ВТ_Спортсмены.ОрганизацияПолноеНаименование КАК ОрганизацияПолноеНаименование,
		|	ВТ_Спортсмены.ОрганизацияДиректор КАК ОрганизацияДиректор,
		|	ВТ_Спортсмены.ВидСпорта КАК ВидСпорта,
		|	ВТ_Спортсмены.ДатаЗачисления КАК ДатаЗачисления,
		|	ВТ_Спортсмены.ТренерСборной КАК ТренерСборной,
		|	ВТ_Спортсмены.Ссылка КАК Ссылка,
		|	ВТ_Разряды.Разряд КАК Разряд,
		|	ВТ_Спортсмены.Группа КАК Группа
		|ИЗ
		|	ВТ_Спортсмены КАК ВТ_Спортсмены
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Разряды КАК ВТ_Разряды
		|		ПО ВТ_Спортсмены.Спортсмен = ВТ_Разряды.Спортсмен
		|ИТОГИ ПО
		|	Ссылка";
	
		
	ПутьКМакету = "Документ.ВключениеСпортсменовВГруппу.ПриказВключениеТабДок";
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ОбластьСпортсмен 	= Макет.ПолучитьОбласть("ОбластьСпортсмен");
	ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
	
	ТабДок = Новый ТабличныйДокумент;
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСсылка.Следующий() Цикл
			
			ОбластьШапка.Параметры.ПолноеНаименование 	= ВРег(ВыборкаСсылка.Ссылка.Организация.ПолноеНаименование);
			ОбластьШапка.Параметры.ДатаДокумента = Формат(ТекущаяДатаСеанса(), "ДЛФ=D");
			ОбластьШапка.Параметры.ДатаЗачисления = Формат(ВыборкаСсылка.Ссылка.ДатаЗачисления,  "ДФ='dd MMMM yyyy'; ДЛФ=DD");
			ОбластьШапка.Параметры.ВидСпорта = ВыборкаСсылка.Ссылка.ВидСпорта;
			ОбластьШапка.Параметры.Группа = ВыборкаСсылка.Ссылка.Группа;
			ТабДок.Вывести(ОбластьШапка);
			ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
			НомерСтрокиСпр = 1;			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спортсмен) Тогда
							
							ОбластьСпортсмен.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
							ОбластьСпортсмен.Параметры.Номер 	= Строка(НомерСтрокиСпр) + ".";
							ЧастиИмени 												= СтрРазделить(ВыборкаДетальныеЗаписи.Спортсмен, " ", Ложь);
							Фамилия 												= ЧастиИмени[0];
							Имя 													= ЧастиИмени[1];
							ОбластьСпортсмен.Параметры.Спортсмен 		= Фамилия + " " + Имя;
							ОбластьСпортсмен.Параметры.ГодРождения = ВыборкаДетальныеЗаписи.Спортсмен.ФизическоеЛицо.ГодРождения;
							ОбластьСпортсмен.Параметры.Разряд = ВыборкаДетальныеЗаписи.Разряд;
							НомерСтрокиСпр = НомерСтрокиСпр + 1;
							
							ТабДок.Вывести(ОбластьСпортсмен);
				КонецЕсли;

			КонецЦикла;
			ОбластьПодвал.Параметры.Тренер = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаСсылка.Ссылка.ТренерСборной.ФизическоеЛицо);
			ОбластьПодвал.Параметры.Директор = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаСсылка.Ссылка.Организация.Директор);
			ТабДок.Вывести(ОбластьПодвал);
		КонецЦикла
	КонецЕсли;
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
	
	ТабДок.КлючПараметровПечати	= ПутьКМакету;
	ТабДок.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб 			= Истина;
	
	Возврат ТабДок;


КонецФункции
// }Рарус dotere #17261 -Заполнение печатной формы 2021.07.19

#КонецОбласти

#КонецОбласти

// - Адильбеков А.Б. 20.05.20 IN-6493 }