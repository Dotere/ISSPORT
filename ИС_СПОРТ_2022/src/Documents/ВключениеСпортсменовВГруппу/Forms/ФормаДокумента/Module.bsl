#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// {Рарус adilas #23059 -РС Руководитель. Карточка спортсмена.Карточка тренера. 2021.12.13
	// {Рарус dotere #21842 -В методите поле ответственный недоступно 2020.11.06
	Если РольДоступна("ПолныеПрава") Тогда
		 Элементы.Ответственный.Доступность = Истина;
	Иначе 	 
		 Элементы.Ответственный.Доступность = Ложь;
	КонецЕсли;
	// }Рарус dotere #21842 -В методите поле ответственный недоступно 2020.11.06
	// }Рарус adilas #23059 -РС Руководитель. Карточка спортсмена.Карточка тренера. 2021.12.13
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	
	// {Рарус adilas #10700 -Вид спорта подставлять по текущему этапу спортсмена 2020.11.05
	Если Объект.Ссылка.Пустая() Тогда
		УчетСпортсменовСервер.ЗаполнитьНастройкиПоУмолчанию(Объект);
		УправлениеУчебнымГодомСсылка = УчетСпортсменовСервер.ПолучитьДокументТекущегоУчебногоГода();
	    Объект.УчебныйГод = УправлениеУчебнымГодомСсылка.УчебныйГод;
	Иначе
		УчетСпортсменовСервер.ЗаполнитьНастройкиПоУмолчанию(Объект);
		УчетСпортсменовСервер.ЗаполнитьДокументУчебныйГод(ЭтотОбъект, Объект.УчебныйГод, Объект.Организация);
	КонецЕсли;
	// }Рарус adilas #10700 -Вид спорта подставлять по текущему этапу спортсмена 2020.11.05
	
	//Тренер = Параметры.Тренер;
	//Соревнование = Параметры.Соревнование;	
	
	Если Параметры.Свойство("массивСпортсменов") Тогда
		Для Каждого ЗначениеСпортсмен Из Параметры.массивСпортсменов Цикл
			строкаСпортсмен = Объект.Спортсмены.Добавить();
			строкаСпортсмен.Спортсмен  = ЗначениеСпортсмен;
			строкаСпортсмен.КлючСтроки = СокрЛП(ЗначениеСпортсмен.УникальныйИдентификатор());
		КонецЦикла;
	ИначеЕсли Параметры.Свойство("Спортсмен") Тогда
		СтрокаСпортсмен = Объект.Спортсмены.Добавить();
		СтрокаСпортсмен.Спортсмен = Параметры.Спортсмен;
	КонецЕсли;
	
	// {Рарус adilas #13392 -Номер документа 2021.02.12
	Если Пользователи.РолиДоступны("АдминистраторСистемы, ПолныеПрава") Тогда
		Элементы.Номер.Доступность = Истина;
		Элементы.Номер.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	// }Рарус adilas #13392 -Номер документа 2021.02.12

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)		
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Объект.Проведен Тогда
		Оповестить("ВключениеСпортсменовВГруппу", Новый Структура("ДокументСсылка", Объект.Ссылка));
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовШапки

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)	
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодСоздание(Элемент, СтандартнаяОбработка)
	
	УчетСпортсменовКлиент.УчебныйГодСоздание(ЭтаФорма, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодОткрытие(Элемент, СтандартнаяОбработка)
	
	УчетСпортсменовКлиент.УчебныйГодОткрытие(УправлениеУчебнымГодомСсылка,СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УчетСпортсменовКлиент.УчебныйГодНачалоВыбора(ЭтотОбъект,СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличныхЧастей

&НаКлиенте
Процедура СпортсменыСпортсменНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	
	Если Объект.ДатаПеревода = Дата(1, 1, 1) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Укажите дату перевода!'");
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.Поле = "ДатаПеревода";
		Сообщение.Сообщить();
		Возврат;	
	ИначеЕсли Не ЗначениеЗаполнено(Объект.Организация) Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Укажите спортивное учреждение!'");
	    Сообщение.ПутьКДанным = "Объект";
		Сообщение.Поле = "Организация";
		Сообщение.Сообщить();
		Возврат;
	Иначе
		ПараметрыФормы.Вставить("ДатаСреза", УчетСпортсменовВызовСервера.ТекущаяДатаНаСервере());
	    ПараметрыФормы.Вставить("Организация", Объект.Организация);
	КонецЕсли;

	ПараметрыФормы.Вставить("ТолькоВыбор", Истина);
	ОбработчикВыбора = Новый ОписаниеОповещения("СпортсменНачалоВыбораЗавершение", ЭтотОбъект);
		
	ОткрытьФорму("Справочник.Спортсмены.Форма.ФормаВыбораСоставУчащихся", ПараметрыФормы, ЭтаФорма, , , , ОбработчикВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура СпортсменыПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
	    Возврат;
	КонецЕсли;
	Если ТекДанные.КлючСтроки = "" Тогда
		ТекДанные.КлючСтроки = СокрЛП(Новый УникальныйИдентификатор());
	КонецЕсли;
	Если ТекущийКлючСтроки <> ТекДанные.КлючСтроки Тогда
		ТекущийКлючСтроки = ТекДанные.КлючСтроки;
		Элементы.СписокЛичныхТренеров.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСтроки",ТекущийКлючСтроки);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СпортсменыПередУдалением(Элемент, Отказ)
	
	массивСтрок = Объект.СписокЛичныхТренеров.НайтиСтроки(Новый Структура("КлючСтроки",ТекущийКлючСтроки));
	Для Каждого строкаЛичныйТренер Из массивСтрок Цикл
		Объект.СписокЛичныхТренеров.Удалить(строкаЛичныйТренер);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЛичныхТренеровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ ЗначениеЗаполнено(ТекущийКлючСтроки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выберите спортсмена, для которого необходимо указать тренера!",,,"Спортсмены");
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЛичныхТренеровПриАктивизацииСтроки(Элемент)
	
	ТекДанные            = Элемент.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанные.КлючСтроки = "" Тогда
		ТекДанные.КлючСтроки = ТекущийКлючСтроки;
		ТекДанные.Тренер     = Тренер;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// {Рарус adilas #-7400 -Команда подбор спортменов, открыть форму выбора справочника 2020.07.09
&НаКлиенте
Процедура ПодборСпортсменов(Команда)
	// Вставить содержимое обработчика.
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПараметрыФормы", Истина);
	ПараметрыФормы.Вставить("Организация", Объект.Организация);
	ПараметрыФормы.Вставить("ДатаСреза", Объект.Дата);
	ПараметрыФормы.Вставить("Тренер", Объект.ТренерСборной);
	ПараметрыФормы.Вставить("Группа", Объект.Группа);
	ПараметрыФормы.Вставить("УчебныйГод", Объект.УчебныйГод);
	ПараметрыФормы.Вставить("ВидСпорта", Объект.ВидСпорта);
	ОткрытьФорму("Справочник.Спортсмены.Форма.ФормаВыбораСпортсменаПоУчреждению", ПараметрыФормы);
	
КонецПроцедуры
// }Рарус adilas #-7400 -Команда подбор спортменов, открыть форму выбора справочника 2020.07.09

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УчебныйГодСозданиеЗавершение(Результат, ДопПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
	   Объект.УчебныйГод = Результат.УчебныйГодСсылка;
	   УправлениеУчебнымГодомСсылка = Результат.УчебныйГодОбъект;
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодНачалоВыбораЗавершение(Результат, ДопПараметры) Экспорт
	
	УправлениеУчебнымГодомСсылка = Результат;
    ПолучитьУчебныйГодСсылка();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьУчебныйГодСсылка()
	Объект.УчебныйГод = УправлениеУчебнымГодомСсылка.УчебныйГод;
КонецПроцедуры	

// {Рарус adilas #-7400 -Команда подбор спортменов, открыть форму выбора справочника 2020.07.09
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПодборСпискаСпортсменов" Тогда
		Для Каждого ЗначениеВыбора Из Параметр.СписокСпортсменов Цикл
			строкаСпортсмен           			    = Объект.Спортсмены.Добавить();
			строкаСпортсмен.Спортсмен  				= ЗначениеВыбора.Значение;
			строкаСпортсмен.КлючСтроки 				= СокрЛП(строкаСпортсмен.Спортсмен.УникальныйИдентификатор());
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры
// }Рарус adilas #-7400 -Команда подбор спортменов, открыть форму выбора справочника 2020.07.09

#КонецОбласти