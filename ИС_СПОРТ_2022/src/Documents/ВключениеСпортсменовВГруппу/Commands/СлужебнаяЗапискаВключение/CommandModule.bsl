// + Адильбеков А.Б. 14.06.20 IN-6902 {

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	//Вставить содержимое обработчика.
	//ПараметрыФормы = Новый Структура("", );
	//ОткрытьФорму("Документ.ВключениеСпортсменовВКоманду.ФормаСписка", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно, ПараметрыВыполненияКоманды.НавигационнаяСсылка);
	#Если Не ВебКлиент Тогда
		Печать("Документ.ВключениеСпортсменовВГруппу", "ПФ_DOC_СлужебнаяЗаписка",  ПараметрКоманды, "Служебная записка Word");
	#Иначе
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати
		(
		"Документ.ВключениеСпортсменовВГруппу",
		"ПФ_MXL_СлужебнаяЗаписка",
		ПараметрКоманды,
		Неопределено,
		Неопределено
		);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(ИмяМенеджераПечати, ИмяМакета, ДанныеПечати, НаименованиеМакета)
	
	Если ДанныеПечати.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;   
		
	МакетИДанныеОбъекта = УправлениеПечатьюВызовСервера.МакетыИДанныеОбъектовДляПечати(ИмяМенеджераПечати, ИмяМакета, ДанныеПечати);
	
	Вывести(ДанныеПечати, МакетИДанныеОбъекта, ИмяМакета, МакетИДанныеОбъекта.ЛокальныйКаталогФайловПечати, НаименованиеМакета);
	
КонецПроцедуры

&НаКлиенте
Процедура Вывести(ДанныеПечати, МакетИДанныеОбъекта, ИмяМакета, ЛокальныйКаталогФайловПечати, НаименованиеМакета)
	
	ТипМакета				= МакетИДанныеОбъекта.Макеты.ТипыМакетов[ИмяМакета];
	ДвоичныеДанныеМакетов	= МакетИДанныеОбъекта.Макеты.ДвоичныеДанныеМакетов;
	Области					= МакетИДанныеОбъекта.Макеты.ОписаниеОбластей;
		
	Макет = УправлениеПечатьюКлиент.ИнициализироватьМакетОфисногоДокумента(ДвоичныеДанныеМакетов[ИмяМакета], ТипМакета, ИмяМакета);
	Если Макет = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытьОкноПечатнойФормы = Ложь;
	
	Для Каждого ОбъектДанных Из ДанныеПечати Цикл
		
		ДанныеОбъектаМассив     = МакетИДанныеОбъекта.Данные[ОбъектДанных][ИмяМакета];
		
		Для Каждого ДанныеОбъекта Из  ДанныеОбъектаМассив Цикл
			
			Попытка
			
				ПечатнаяФорма = УправлениеПечатьюКлиент.ИнициализироватьПечатнуюФорму(ТипМакета, Макет.НастройкиСтраницыМакета);
				Если ПечатнаяФорма = Неопределено Тогда
					УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
					Возврат;                                                             
				КонецЕсли;
				
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Области[ИмяМакета]["ОбластьШапка"]);
				УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область,ДанныеОбъекта.ОбластьШапка, Ложь);
				
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Области[ИмяМакета]["ОбластьСписокСпортсмены"]);
				УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта.ОбластьСписокСпортсмены, Ложь);
			
				Для Каждого СтрокаШапкаТаблицы Из ДанныеОбъекта.ОбластьШапкаТаблицы Цикл
					Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Области[ИмяМакета]["ОбластьШапкаТаблицы"]);
					УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, СтрокаШапкаТаблицы, Ложь);
					Для каждого СтрокаСпортсмены Из СтрокаШапкаТаблицы.МассивСтрокСпортсмены Цикл
						Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Области[ИмяМакета]["ОбластьСтрокаТаблицыСпортсмены"]);
						УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, СтрокаСпортсмены, Ложь);
					КонецЦикла; 			
				КонецЦикла;
												
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Области[ИмяМакета]["ОбластьПодвал"]);
				УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта.ОбластьПодвал, Ложь);	
				
				УправлениеПечатьюКлиент.ПоказатьДокумент(ПечатнаяФорма);
				
			Исключение
				ОбщегоНазначенияКлиент.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗакрытьОкноПечатнойФормы = Истина;
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЦикла;
	
	УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма, ЗакрытьОкноПечатнойФормы);
	УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
	

КонецПроцедуры

// - Адильбеков А.Б. 14.06.20 IN-6902 }