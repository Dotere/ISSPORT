// {Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

// {Рарус adilas #-7879 -Регистр сведений "УчастникиСоревнованийОФПСдачаНормативов" 2020.07.08
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
         Возврат;
	КонецЕсли; 
		  
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);	
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	УчетСпортсменовСервер.ЗаполнитьРеквизит(ЭтотОбъект, "Ответственный", ПараметрыСеанса.ТекущийПользователь);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ТипСоревнования = Перечисления.ТипыСдачиНормативов.Соревнование Тогда
	   ВыполнитьПроверкуПередПроведением(Отказ);
	КонецЕсли;   
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	ПроведениеСервер.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ, "УчастникиСоревнованийОФПСдачаНормативов");

	Движения.Записать();

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Движения.Записать();

	ПроведениеСервер.ВыполнитьКонтрольРезультатовОтменыПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьПроверкуПередПроведением(Отказ)
	
	ТаблицаДокумента = СоставУчастников.Выгрузить();
	ТаблицаДокумента.Свернуть("Спортсмен");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСпортсменов"     , ТаблицаДокумента);
	Запрос.УстановитьПараметр("ДатаДокумент"           , ДатаПроведения);
	Запрос.УстановитьПараметр("ВидСпорта"              , ВидСпорта);
	Запрос.УстановитьПараметр("Организация"            , Организация);
	
	Текст = "";
	// {Рарус adilas #- -Sonar 2021.06.29
	УчетСпортсменовВызовСервера.ВвестиСтруктуруВоВременнуюТаблицу(
	   Текст,
	   Новый Структура("Спортсмен"),
	   "ВТ_ТаблицаСпортсменов",
	   "ТаблицаСпортсменов");
	   
	Запрос.Текст =  Текст + "
	                |;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	РегистрацияДопусков.Спортсмен КАК Спортсмен
					|ПОМЕСТИТЬ ВТ_СпортсменыСДопуском
					|ИЗ
					|	РегистрСведений.РегистрацияДопусковКСпортивнымСоревнованиям КАК РегистрацияДопусков
					|ГДЕ
					|	РегистрацияДопусков.Спортсмен В
					|				(ВЫБРАТЬ
					|					ВТ_ТаблицаСпортсменов.Спортсмен
					|				ИЗ
					|					ВТ_ТаблицаСпортсменов)
					|			И РегистрацияДопусков.ДействуетДо >= &ДатаДокумент
					|			И РегистрацияДопусков.Организация = &Организация
					|			И РегистрацияДопусков.ВидСпорта = &ВидСпорта
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	РегистрацияСтраховыхПолисовСпортсменов.Спортсмен КАК Спортсмен
					|ПОМЕСТИТЬ ВТ_СпортменыСПолисом
					|ИЗ
					|	РегистрСведений.РегистрацияСтраховыхПолисовСпортсменов КАК РегистрацияСтраховыхПолисовСпортсменов
					|ГДЕ
	                |	РегистрацияСтраховыхПолисовСпортсменов.ДатаНачала <= &ДатаДокумент
	                |	И РегистрацияСтраховыхПолисовСпортсменов.ДатаОкончания >= &ДатаДокумент
	                |	И РегистрацияСтраховыхПолисовСпортсменов.Спортсмен В
	                |			(ВЫБРАТЬ
	                |				ВТ_ТаблицаСпортсменов.Спортсмен
	                |			ИЗ
	                |				ВТ_ТаблицаСпортсменов)
	                |	И РегистрацияСтраховыхПолисовСпортсменов.ВидСпорта = &ВидСпорта
	                |	И РегистрацияСтраховыхПолисовСпортсменов.Организация = &Организация
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_ТаблицаСпортсменов.Спортсмен КАК Спортсмен
	                |ИЗ
	                |	ВТ_ТаблицаСпортсменов КАК ВТ_ТаблицаСпортсменов
	                |ГДЕ
	                |	НЕ ВТ_ТаблицаСпортсменов.Спортсмен В
	                |				(ВЫБРАТЬ
	                |					ВТ_СпортсменыСДопуском.Спортсмен
	                |				ИЗ
	                |					ВТ_СпортсменыСДопуском)
	                |;
	                |
					|////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_ТаблицаСпортсменов.Спортсмен КАК Спортсмен
	                |ИЗ
	                |	ВТ_ТаблицаСпортсменов КАК ВТ_ТаблицаСпортсменов
	                |ГДЕ
	                |	НЕ ВТ_ТаблицаСпортсменов.Спортсмен В
	                |				(ВЫБРАТЬ
	                |					ВТ_СпортменыСПолисом.Спортсмен
	                |				ИЗ
	                |					ВТ_СпортменыСПолисом)";
										
	
	Результат = Запрос.ВыполнитьПакет();
	
	тзСпортсменыБезДопуска = Результат[3].Выгрузить();
	Если НЕ тзСпортсменыБезДопуска.Количество() = 0 Тогда
		Отказ = Истина;
		Для Каждого строкаСпортсмен Из тзСпортсменыБезДопуска Цикл
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'У спортсмена %1 нет допуска для участия в соревнованиях в текущем учебном году.'"),
			строкаСпортсмен.Спортсмен);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;	
	КонецЕсли;
		
	Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Организация).СтрахованиеСпортсменовОрганизация Тогда
		тзСпортсменыБезПолиса = Результат[4].Выгрузить();
		Если НЕ тзСпортсменыБезПолиса.Количество() = 0 Тогда
			Для Каждого строкаСпортсмен Из тзСпортсменыБезПолиса Цикл
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'У спортсмена %1 отсутствует или просрочен страховой полис.'"),
				строкаСпортсмен.Спортсмен);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
// }Рарус adilas #-7879 -Регистр сведений "УчастникиСоревнованийОФПСдачаНормативов" 2020.07.08

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли