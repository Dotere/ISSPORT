#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	// {Рарус adilas #10010 -Переделать документы для указания нескольких спортсменов 2020.10.07
	// Замена на ТЧ
	Отказ = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка"        						 , ДокументСсылка);
	Запрос.УстановитьПараметр("Организация"   						 , ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("ДатаПодтверждающегоДокумента"         , ДокументСсылка.ДатаПодтверждающегоДокумента);
	Запрос.УстановитьПараметр("НомерПодтверждающегоДокумента"        , ДокументСсылка.НомерПодтверждающегоДокумента);
	Запрос.УстановитьПараметр("ВидСпорта"     						 , ДокументСсылка.ВидСпорта);
	Запрос.Текст =  "ВЫБРАТЬ
	                |	""ПодтвержденныеРазрядыСпортсменов"" КАК ИмяРегистра_,
	                |	&Организация КАК Организация,
	                |	&ВидСпорта КАК ВидСпорта,
	                |	&ДатаПодтверждающегоДокумента КАК ДатаПодтверждающегоДокумента,
	                |	&НомерПодтверждающегоДокумента КАК НомерПодтверждающегоДокумента,
	                |	ПодтверждениеРазрядаСпортсменаСпортсмены.Спортсмен КАК Спортсмен,
	                |	ПодтверждениеРазрядаСпортсменаСпортсмены.Разряд КАК Разряд,
					// {Рарус dotere #22179 -Дата подтвеждения записывается в регистр как дата присвоения, дата следующего потдтвеждения как дата подтвеждения 2021.11.12
					|	ПодтверждениеРазрядаСпортсменаСпортсмены.ДатаПодтверждения КАК ДатаПрисвоения,
	                |	ПодтверждениеРазрядаСпортсменаСпортсмены.ДатаПодтверждения КАК Период,
	                |	ПодтверждениеРазрядаСпортсменаСпортсмены.ДатаСледующегоПодтверждения КАК ДатаПодтверждения
					// }Рарус dotere #22179 -Дата подтвеждения записывается в регистр как дата присвоения, дата следующего потдтвеждения как дата подтвеждения 2021.11.12
	                |ИЗ
	                |	Документ.ПодтверждениеРазрядаСпортсмена.Спортсмены КАК ПодтверждениеРазрядаСпортсменаСпортсмены
	                |ГДЕ
	                |	ПодтверждениеРазрядаСпортсменаСпортсмены.Ссылка = &Ссылка";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ПодтвержденныеРазрядыСпортсменов           = Пакет[0].Выгрузить();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаПодтвержденныеРазрядыСпортсменов", ПодтвержденныеРазрядыСпортсменов);
	
    ДополнительныеСвойства.Вставить("Отказ", Отказ);
	
	// }Рарус adilas #10010 -Переделать документы для указания нескольких спортсменов 2020.10.07
	
КонецПроцедуры	

Процедура ВыполнитьКонтрольРезультатовПроведения(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ПрисвоениеРазряда.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКонтрольПередПроведением(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ПрисвоениеРазряда.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКонтрольРезультатовОтменыПроведения(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ПрисвоениеРазряда.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

// {Рарус adilas #16632 -Печатная форма Приказа на подтверждение разряда 2021.06.09
#Область ПечатьWord

// Подготавливает данные объекта к выводу на печать.
// 
// Параметры:
//  Согласия - Массив - ссылки на документы, для которых запрашиваются данные для печати;
//  МассивИменМакетов - Массив - имена макетов (Строка), в которые подставляются данные для печати.
//
// Возвращаемое значение:
//  Соответствие - коллекция ссылок на объекты и их данные:
//   * Ключ - ЛюбаяСсылка - ссылка на объект информационной базы;
//   * Значение - Структура - макет и данные:
//    ** Ключ - Строка - имя макета,
//    ** Значение - Структура - данные объекта.
//
Функция ПолучитьДанныеПечати(Знач МассивДокументов, Знач МассивИменМакетов) Экспорт
	
	// Создание функции подготовки данных для печати.
	ДанныеПоВсемОбъектам = Новый Соответствие;
	
	Для Каждого ОбъектСсылка Из МассивДокументов Цикл
		ДанныеОбъектаПоМакетам = Новый Соответствие;
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл
			ДанныеОбъектаПоМакетам.Вставить(ИмяМакета, ПолучитьДанныеОбъекта(ОбъектСсылка,ИмяМакета));
		КонецЦикла;
		ДанныеПоВсемОбъектам.Вставить(ОбъектСсылка, ДанныеОбъектаПоМакетам);
	КонецЦикла;
	
	ОписаниеОбластей = Новый Соответствие;
	ДвоичныеДанныеМакетов = Новый Соответствие;
	ТипыМакетов = Новый Соответствие;
	                                                             
	Для Каждого ИмяМакета Из МассивИменМакетов Цикл
		Если ИмяМакета = "ПФ_DOC_ПриказОПодтвержденииРазрядов" Тогда
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, Документы.ПодтверждениеРазрядаСпортсмена.ПолучитьМакет("ПФ_DOC_ПриказОПодтвержденииРазрядов"));
			ТипыМакетов.Вставить(ИмяМакета, "DOC");
		КонецЕсли;
		ОписаниеОбластей.Вставить(ИмяМакета, ПолучитьОписаниеОбластейМакетаОфисногоДокумента(ИмяМакета));
	КонецЦикла;

	Возврат Новый Структура("Данные, Макеты",
											ДанныеПоВсемОбъектам,
											Новый Структура("ОписаниеОбластей, ТипыМакетов, ДвоичныеДанныеМакетов",
											ОписаниеОбластей,
											ТипыМакетов,
											ДвоичныеДанныеМакетов));
											
КонецФункции

Функция ПолучитьОписаниеОбластейМакетаОфисногоДокумента(ИмяМакета)
	
	ОписаниеОбластей = Новый Структура;
	
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьШапка"        				       , "Общая"); // Описание областей в вордовском документе
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьСоревнование"        			   , "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьШапкаТаблицы"        			   , "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьСтрокаТаблицыСпортсмены"       	   , "СтрокаТаблицы"); 
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьПодвал"     				       , "Общая");
	
	Возврат ОписаниеОбластей;
	
КонецФункции

Функция ПолучитьДанныеОбъекта(ОбъектыПечати, ИмяМакета) Экспорт
	Если ИмяМакета = "ПФ_DOC_ПриказОПодтвержденииРазрядов" Тогда
		Возврат ПолучитьДанныеОбъектаПриказ(ОбъектыПечати);
	КонецЕсли;
КонецФункции

Функция ПолучитьДанныеОбъектаПриказ(ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПодтверждениеРазрядаСпортсмена.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ПодтверждениеРазрядаСпортсмена КАК ПодтверждениеРазрядаСпортсмена
		|ГДЕ
		|	ПодтверждениеРазрядаСпортсмена.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Спортсмен КАК Спортсмен,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование КАК Соревнование,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Дисциплина КАК Дисциплина,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Результат КАК Результат,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Разряд КАК Разряд,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование.МестоПроведения КАК МестоПроведения,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование.ДатаНачалаСоревнования КАК ДатаНачалаСоревнования,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование.ДатаОкончанияСоревнования КАК ДатаОкончанияСоревнования,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование.Соревнование.Ранг КАК РангСоревнования
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодтверждениеРазрядаСпортсмена.Спортсмены КАК ПодтверждениеРазрядаСпортсменаСпортсмены
		|		ПО ВТ_Данные.Ссылка = ПодтверждениеРазрядаСпортсменаСпортсмены.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Разряд.Порядок
		|ИТОГИ ПО
		|	Ссылка,
		|	Соревнование,
		|	Разряд";
	
	Запрос.УстановитьПараметр("СписокДокументов", ОбъектыПечати);
	
	МассивДокументов = Новый Массив;
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			
			СтруктураДокумента = Новый Структура;
			
			СтруктураШапка = Новый Структура;
			СтруктураШапка.Вставить("ПолноеНаименование", ВРег(ВыборкаСсылка.Ссылка.Организация.ПолноеНаименование));
			СтруктураШапка.Вставить("НомерПодтверждающегоДокумента", ВыборкаСсылка.Ссылка.НомерПодтверждающегоДокумента);
			СтруктураШапка.Вставить("ДатаПриказа", Формат(ВыборкаСсылка.Ссылка.ДатаПодтверждающегоДокумента, "ДЛФ=D"));
			СтруктураДокумента.Вставить("ОбластьШапка", СтруктураШапка);
			
			МассивСоревнований = Новый Массив;
			
			ВыборкаСоревнование = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСоревнование.Следующий() Цикл
				
				СтруктураСоревнование = Новый Структура;
				СтруктураСоревнование.Вставить("Организация", ВыборкаСоревнование.Ссылка.Организация);
				СтруктураСоревнование.Вставить("Соревнование", ВыборкаСоревнование.Соревнование);
				СтруктураСоревнование.Вставить("РангСоревнования", СклонениеПредставленийОбъектов.ПросклонятьПредставление(ВыборкаСоревнование.РангСоревнования, 6));
				СтруктураСоревнование.Вставить("МестоПроведения", ВыборкаСоревнование.МестоПроведения);
					
				Если ВыборкаСоревнование.ДатаНачалаСоревнования <> ВыборкаСоревнование.ДатаОкончанияСоревнования Тогда	
					ПериодПроведенияСоревнования = Формат(ВыборкаСоревнование.ДатаНачалаСоревнования, "ДЛФ=DD") + " - " + Формат(ВыборкаСоревнование.ДатаОкончанияСоревнования, "ДЛФ=DD");
					СтруктураСоревнование.Вставить("ПериодПроведенияСоревнования", ПериодПроведенияСоревнования);
				Иначе
					СтруктураСоревнование.Вставить("ПериодПроведенияСоревнования", Формат(ВыборкаСоревнование.ДатаНачалаСоревнования, "ДЛФ=DD"));
				КонецЕсли;
				
				ВидСпорта = СклонениеПредставленийОбъектов.ПросклонятьФИО(Строка(ВыборкаСсылка.Ссылка.ВидСпорта), 1);
				СтруктураСоревнование.Вставить("ВидСпорта", НРег(ВидСпорта));

				СтруктураОбластиСоревнование = Новый Структура;
				СтруктураОбластиСоревнование.Вставить("ОбластьСоревнование", СтруктураСоревнование);
				
				МассивСоревнований.Добавить(СтруктураОбластиСоревнование);
				
				МассивРазрядов = Новый Массив;
				
				ВыборкаРазряд = ВыборкаСоревнование.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаРазряд.Следующий() Цикл
					
					СтруктураШапкаТаблицы = Новый Структура;
					СтруктураШапкаТаблицы.Вставить("Разряд", ВыборкаРазряд.Разряд.ПолноеНаименование);
					СтруктураОбластиШапкаТаблицы = Новый Структура;
					СтруктураОбластиШапкаТаблицы.Вставить("ОбластьШапкаТаблицы", СтруктураШапкаТаблицы);
					МассивРазрядов.Добавить(СтруктураОбластиШапкаТаблицы);
		
					МассивСтрокСпортсмены = Новый Массив;
					
					ВыборкаДетальныеЗаписи = ВыборкаРазряд.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						
						Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спортсмен) Тогда
							
							СтруктураСтрокаСпортсмены = Новый Структура("Спортсмен, Дисциплина, Результат");
							ЗаполнитьЗначенияСвойств(СтруктураСтрокаСпортсмены, ВыборкаДетальныеЗаписи);
							// Фамилия и Имя
							ЧастиИмени 								= СтрРазделить(ВыборкаДетальныеЗаписи.Спортсмен, " ", Ложь);
							Фамилия 								= ЧастиИмени[0];
							Имя 									= ЧастиИмени[1];
							СтруктураСтрокаСпортсмены.Спортсмен 	= Фамилия + " " + Имя;
							МассивСтрокСпортсмены.Добавить(СтруктураСтрокаСпортсмены);	
						Иначе
							ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Добавьте спортсменов которым необходимо подтвердить разряд!'"));
						КонецЕсли;	
					КонецЦикла;
					
					МассивРазрядов.Добавить(МассивСтрокСпортсмены);
					
				КонецЦикла;
				
				МассивСоревнований.Добавить(МассивРазрядов);
			КонецЦикла;
			// Подвал
			СтруктураПодвал = Новый Структура;
			СтруктураПодвал.Вставить("Директор", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаСсылка.Ссылка.Организация.Директор));
			
			СтруктураДокумента.Вставить("МассивСоревнований", МассивСоревнований);
			СтруктураДокумента.Вставить("ОбластьПодвал", СтруктураПодвал);
			
			МассивДокументов.Добавить(СтруктураДокумента);

		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивДокументов
	
КонецФункции	

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт 
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПриказОПодтвержденииРазрядов") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
																	"ПФ_MXL_ПриказОПодтвержденииРазрядов", // Идентфикатор
																	"Приказ о подтверждении разрядов", // Название (представление) 
								  СформироватьПечатнуюФормуПриказ(МассивОбъектов)); // Функция которая получает макет и его заполняет
		
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуПриказ(МассивОбъектовДляПечати) Экспорт // Функция которая получает макет и заполняет его 
	
	Если ТипЗнч(МассивОбъектовДляПечати) = Тип("Массив") Тогда	
		МассивОбъектов = МассивОбъектовДляПечати;	
	Иначе	
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(МассивОбъектовДляПечати);	
	КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПодтверждениеРазрядаСпортсмена.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ПодтверждениеРазрядаСпортсмена КАК ПодтверждениеРазрядаСпортсмена
		|ГДЕ
		|	ПодтверждениеРазрядаСпортсмена.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Спортсмен КАК Спортсмен,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование КАК Соревнование,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Дисциплина КАК Дисциплина,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Результат КАК Результат,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Разряд КАК Разряд,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование.ДатаНачалаСоревнования КАК ДатаНачалаСоревнования,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование.МестоПроведения КАК МестоПроведения,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование.ДатаОкончанияСоревнования КАК ДатаОкончанияСоревнования,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование.Соревнование.Ранг КАК РангСоревнования
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодтверждениеРазрядаСпортсмена.Спортсмены КАК ПодтверждениеРазрядаСпортсменаСпортсмены
		|		ПО ВТ_Данные.Ссылка = ПодтверждениеРазрядаСпортсменаСпортсмены.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Соревнование,
		|	ПодтверждениеРазрядаСпортсменаСпортсмены.Разряд.Порядок
		|ИТОГИ ПО
		|	Ссылка,
		|	Соревнование,
		|	Разряд";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ПутьКМакету = "Документ.ПодтверждениеРазрядаСпортсмена.ПФ_MXL_ПриказОПодтвержденииРазрядов";
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету); // Получаем макет
	
	ТабДок = Новый ТабличныйДокумент;  // Создаем новый ТабДок
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаСсылка.Следующий() Цикл
			
			ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка"); // Получаем области из макета
			ОбластьШапка.Параметры.ПолноеНаименование 				= ВРег(ВыборкаСсылка.Ссылка.Организация.ПолноеНаименование);
			ОбластьШапка.Параметры.НомерПодтверждающегоДокумента 	= ВыборкаСсылка.Ссылка.НомерПодтверждающегоДокумента;
			ОбластьШапка.Параметры.ДатаПриказа 						= Формат(ВыборкаСсылка.Ссылка.ДатаПодтверждающегоДокумента, "ДЛФ=D");
			
			ТабДок.Вывести(ОбластьШапка);
	
			ВыборкаСоревнование = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСоревнование.Следующий() Цикл
				
				ОбластьСоревнование = Макет.ПолучитьОбласть("ОбластьСоревнование");
				ОбластьСоревнование.Параметры.Организация 		= ВыборкаСоревнование.Ссылка.Организация;
				ОбластьСоревнование.Параметры.Соревнование 		= ВыборкаСоревнование.Соревнование;
		       	ОбластьСоревнование.Параметры.РангСоревнования  = СклонениеПредставленийОбъектов.ПросклонятьПредставление(ВыборкаСоревнование.РангСоревнования, 6);
				ОбластьСоревнование.Параметры.МестоПроведения 	= ВыборкаСоревнование.МестоПроведения;
				
				Если ВыборкаСоревнование.ДатаНачалаСоревнования <> ВыборкаСоревнование.ДатаОкончанияСоревнования Тогда	
					ПериодПроведенияСоревнования = Формат(ВыборкаСоревнование.ДатаНачалаСоревнования, "ДЛФ=DD") + " - " + Формат(ВыборкаСоревнование.ДатаОкончанияСоревнования, "ДЛФ=DD");
					ОбластьСоревнование.Параметры.ПериодПроведенияСоревнования = ПериодПроведенияСоревнования;
				Иначе
					ОбластьСоревнование.Параметры.ПериодПроведенияСоревнования = Формат(ВыборкаСоревнование.ДатаНачалаСоревнования, "ДЛФ=DD");
				КонецЕсли;	
				
				ВидСпорта = СклонениеПредставленийОбъектов.ПросклонятьФИО(Строка(ВыборкаСсылка.Ссылка.ВидСпорта), 1); 
				ОбластьСоревнование.Параметры.ВидСпорта 	= НРег(ВидСпорта);
		
				ТабДок.Вывести(ОбластьСоревнование);
				
				ВыборкаРазряд = ВыборкаСоревнование.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаРазряд.Следующий() Цикл
					
					ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы");
					ОбластьШапкаТаблицы.Параметры.Разряд = ВыборкаРазряд.Разряд.ПолноеНаименование;
					ТабДок.Вывести(ОбластьШапкаТаблицы);
			
					ВыборкаДетальныеЗаписи = ВыборкаРазряд.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						
						Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спортсмен) Тогда
							// Таблица спортсмены
							ОбластьСтрокаТаблицыСпортсмены 							= Макет.ПолучитьОбласть("ОбластьСтрокаТаблицыСпортсмены");
							ОбластьСтрокаТаблицыСпортсмены.Параметры.Заполнить(ВыборкаДетальныеЗаписи);								
							// Фамилия и Имя
							ЧастиИмени 												= СтрРазделить(ВыборкаДетальныеЗаписи.Спортсмен, " ", Ложь);
							Фамилия 												= ЧастиИмени[0];
							Имя 													= ЧастиИмени[1];
							ОбластьСтрокаТаблицыСпортсмены.Параметры.Спортсмен 		= Фамилия + " " + Имя;
							ТабДок.Вывести(ОбластьСтрокаТаблицыСпортсмены);
						Иначе
							ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Добавьте спортсменов которым необходимо присвоить разряд!'"));
						КонецЕсли;	
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
			// Подвал
			ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
			ОбластьПодвал.Параметры.Директор = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаСсылка.Ссылка.Организация.Директор);
			
			ТабДок.Вывести(ОбластьПодвал);	
		КонецЦикла;
	КонецЕсли;
			
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабДок.КлючПараметровПечати	= ПутьКМакету;
	ТабДок.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб 			= Истина;
	
	Возврат ТабДок;
	
КонецФункции	

#КонецОбласти

#КонецОбласти
// }Рарус adilas #16632 -Печатная форма Приказа на подтверждение разряда 2021.06.09