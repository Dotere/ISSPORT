#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// {Рарус adilas #23059 -РС Руководитель. Карточка спортсмена.Карточка тренера. 2021.12.13
	// {Рарус dotere #21842 -В методите поле ответственный недоступно 2020.11.06
	Если РольДоступна("ПолныеПрава") Тогда
		 Элементы.Ответственный.Доступность = Истина;
	Иначе 	 
		 Элементы.Ответственный.Доступность = Ложь;
	КонецЕсли;
	// }Рарус dotere #21842 -В методите поле ответственный недоступно 2020.11.06
	// }Рарус adilas #23059 -РС Руководитель. Карточка спортсмена.Карточка тренера. 2021.12.13
	
	 // {Рарус adilas #-10010 -Переделать документы для указания нескольких спортсменов 2020.10.08 
	Если Параметры.Свойство("Спортсмен") Тогда
		СтрокаСпортсмен = Объект.Спортсмены.Добавить();
		СтрокаСпортсмен.Спортсмен = Параметры.Спортсмен;
	// {Рарус adilas #10751 -Новый документ в карточке спортсмена если не заданы основные значения 2020.11.10
	ИначеЕсли Параметры.Свойство("Отбор") Тогда
		СтрокаСпортсмен = Объект.Спортсмены.Добавить();
		СтрокаСпортсмен.Спортсмен = Параметры.Отбор.Спортсмен;
	КонецЕсли;
	// }Рарус adilas #10751 -Новый документ в карточке спортсмена если не заданы основные значения 2020.11.10
	
	// }Рарус adilas #-10010 -Переделать документы для указания нескольких спортсменов 2020.10.08 
	
	// {Рарус adilas #10700 -Вид спорта подставлять по текущему этапу спортсмена 2020.11.05
	Если Объект.Ссылка.Пустая() Тогда
		УчетСпортсменовСервер.ЗаполнитьНастройкиПоУмолчанию(Объект);
	КонецЕсли;
	// }Рарус adilas #10700 -Вид спорта подставлять по текущему этапу спортсмена 2020.11.05
	
	// {Рарус adilas #13392 -Номер документа 2021.02.12
	Если Пользователи.РолиДоступны("АдминистраторСистемы, ПолныеПрава") Тогда
		Элементы.Номер.Доступность = Истина;
		Элементы.Номер.ТолькоПросмотр = Ложь;
	КонецЕсли;
	// }Рарус adilas #13392 -Номер документа 2021.02.12
	
	// {Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08
	// СтандартныеПодсистемы.КонтактнаяИнформация	
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, МедицинскаяОрганизация, "ГруппаКонтактнаяИнформацияМедицинскаяОрганизация", ПоложениеЗаголовкаЭлементаФормы.Лево);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	Для Каждого ЭлементФормы Из Элементы.ГруппаКонтактнаяИнформацияМедицинскаяОрганизация.ПодчиненныеЭлементы Цикл	
		ЭлементФормы.Доступность = Ложь;		
	КонецЦикла;
	// }Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// {Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08
	ПодключитьОбработчикОжидания("ПроверитьНеобходимостьБлокировкиМедицинскаяОрганизация", 1, Ложь);
	// }Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// {Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08
	// СтандартныеПодсистемы.КонтактнаяИнформация
    Если ЗначениеЗаполнено(ТекущийОбъект.МедицинскаяОрганизация) Тогда
        ЗначениеВРеквизитФормы(ТекущийОбъект.МедицинскаяОрганизация.ПолучитьОбъект(), "МедицинскаяОрганизация");
    КонецЕсли;

    УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, МедицинскаяОрганизация, "ГруппаКонтактнаяИнформацияМедицинскаяОрганизация");
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
	// }Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// {Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ЭтотОбъект.МедицинскаяОрганизация);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	// }Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
    // {Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08
	Если ЗначениеЗаполнено(Объект.МедицинскаяОрганизация) Тогда
	    МедицинскаяОрганизацияОбъект = РеквизитФормыВЗначение("МедицинскаяОрганизация");
	    МедицинскаяОрганизацияОбъект.Записать();
	    ЗначениеВРеквизитФормы(МедицинскаяОрганизацияОбъект, "МедицинскаяОрганизация");
	КонецЕсли;
    // }Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Для Каждого ЭлементФормы Из Элементы.ГруппаКонтактнаяИнформацияМедицинскаяОрганизация.ПодчиненныеЭлементы Цикл	
		ЭлементФормы.Доступность = Ложь;		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ЗаписьМедОрганизации" Тогда
		Прочитать();		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПолученияДопускаПриИзменении(Элемент)
	
	Если Объект.ВидДопуска = ПредопределенноеЗначение("Перечисление.ВидыДопусковКСпортивнойДеятельности.ДопускКТренировочномуПроцессу") Тогда
		
		ЧислоМесяцев = 6;
		Объект.ДействуетДо = НачалоДня(ДобавитьМесяц(Объект.ДатаПолученияДопуска,ЧислоМесяцев)-1);
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСпортсмены

&НаКлиенте
Процедура СпортсменыСпортсменНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	// {Рарус dotere #22109 -Нету поля ДатаДокумента 2021.11.09
	//Если Объект.ДатаДокумента = Дата(1, 1, 1) Тогда
	//	Сообщение = Новый СообщениеПользователю();
	//	Сообщение.Текст = НСтр("ru = 'Укажите дату приказа!'");
	//	Сообщение.ПутьКДанным = "Объект";
	//	Сообщение.Поле = "ДатаДокумента";
	//	Сообщение.Сообщить();
	//	Возврат;
	// }Рарус dotere #22109 -Нету поля ДатаДокумента 2021.11.09
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Укажите спортивное учреждение!'");
	    Сообщение.ПутьКДанным = "Объект";
		Сообщение.Поле = "Организация";
		Сообщение.Сообщить();
		Возврат;
	Иначе
		ПараметрыФормы.Вставить("ДатаСреза", УчетСпортсменовВызовСервера.ТекущаяДатаНаСервере());
	    ПараметрыФормы.Вставить("Организация", Объект.Организация);
	КонецЕсли;
	// {Рарус dotere #22109 -Ключ строки 2021.11.09
	ТекущиеДанные = Элементы.Спортсмены.ТекущиеДанные;
	ПараметрыОписания = Новый Структура;
	ПараметрыОписания.Вставить("КлючСпортсмен",ТекущиеДанные.НомерСтроки-1);
    // }Рарус dotere #22109 -Ключ строки 2021.11.09
	ПараметрыФормы.Вставить("ТолькоВыбор", Истина);
	ОбработчикВыбора = Новый ОписаниеОповещения("СпортсменНачалоВыбораЗавершение", ЭтотОбъект,ПараметрыОписания);
		
	ОткрытьФорму("Справочник.Спортсмены.Форма.ФормаВыбораСоставУчащихся", ПараметрыФормы, ЭтаФорма, , , , ОбработчикВыбора);
	
КонецПроцедуры

// {Рарус dotere #22109 -Добавление спортсмена в табличную часть 2021.11.09
&НаКлиенте
Процедура СпортсменНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт

	ОповещениеЗакрытияНаСервере(Результат, ДополнительныеПараметры);	
	
КонецПроцедуры

&НаСервере
Процедура ОповещениеЗакрытияНаСервере(Результат, ДополнительныеПараметры) Экспорт
	Строка = Объект.Спортсмены.НайтиПоИдентификатору(ДополнительныеПараметры.КлючСпортсмен);
	Строка.Спортсмен = Результат.Спортсмен;
КонецПроцедуры
// }Рарус dotere #22109 -Добавление спортсмена в табличную часть 2021.11.09


// {Рарус adilas #10010 -Переделать документы для указания нескольких спортсменов 2020.10.08
//
&НаКлиенте
Процедура СпортсменыДатаПолученияДопускаПриИзменении(Элемент)
		ТекущиеДанные = Элементы.Спортсмены.ТекущиеДанные;
		ЧислоМесяцев = 6;
		ТекущиеДанные.ДействуетДо = НачалоДня(ДобавитьМесяц(ТекущиеДанные.ДатаПолученияДопуска,ЧислоМесяцев) -1);	
КонецПроцедуры
// }Рарус adilas #10010 -Переделать документы для указания нескольких спортсменов 2020.10.08

#КонецОбласти

#Область ОбработчикиКомандФормы

// {Рарус adilas #10240 -Кнопка заполнения даты 2020.10.15
//
&НаКлиенте
Процедура ЗаполнитьДатой(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеВводаДаты", ЭтотОбъект);
    ПоказатьВводДаты(Оповещение, , "Введите дату получения допуска");
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаДаты(Дата, Параметры) Экспорт
	Если Не Дата = Неопределено Тогда
			Для Каждого Строка Из Объект.Спортсмены Цикл
				Строка.ДатаПолученияДопуска = Дата;
				ЧислоМесяцев = 6;
				Строка.ДействуетДо = НачалоДня(ДобавитьМесяц(Строка.ДатаПолученияДопуска,ЧислоМесяцев) -1);
			КонецЦикла;
    КонецЕсли;
КонецПроцедуры
// }Рарус adilas #10240 -Кнопка заполнения даты 2020.10.15

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

// {Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08
&НаКлиенте
Процедура ПроверитьНеобходимостьБлокировкиФизическогоЛица()
	
	Если Модифицированность Тогда
		
		Попытка
			
			ЗаблокироватьМедицинскаяОрганизацияПриРедактированииНаСервере(МедицинскаяОрганизация.Ссылка, ЭтотОбъект.УникальныйИдентификатор);
			
			ОтключитьОбработчикОжидания("ПроверитьНеобходимостьБлокировкиМедицинскаяОрганизация");
			
		Исключение
			
			ВызватьИсключение НСтр("ru = 'Данные контактого лица не могут быть записаны, т.к. личные данные медицинской организации недоступны для изменения.
			
			|Возможно, эти данные медицинской организации редактируются другим пользователем.'");
			
			Прочитать();
			
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНеобходимостьБлокировкиМедицинскаяОрганизация()
	Если Модифицированность И НЕ МедицинскаяОрганизация.Ссылка.Пустая() Тогда
		Если ЗаблокироватьМедицинскаяОрганизацияПриРедактированииНаСервере(МедицинскаяОрганизация.Ссылка, ЭтотОбъект.УникальныйИдентификатор) Тогда
			ОтключитьОбработчикОжидания("ПроверитьНеобходимостьБлокировкиМедицинскаяОрганизация");
		Иначе
			Прочитать();
			ВызватьИсключение НСтр("ru = 'Данные контактного лица не могут быть записаны, т.к. личные данные медицинской организации не доступны для изменения.
			|Возможно, эти данные медицинской организации редактируются другим пользователем.'");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МедицинскаяОрганизацияПриИзменении(Элемент)	
	ИзменитьДанныеМедицинскаяОрганизацияНаСервере();
	Для Каждого ЭлементФормы Из Элементы.ГруппаКонтактнаяИнформацияМедицинскаяОрганизация.ПодчиненныеЭлементы Цикл	
		ЭлементФормы.Доступность = Ложь;		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ИзменитьДанныеМедицинскаяОрганизацияНаСервере()
	
	Если МедицинскаяОрганизация.Ссылка.Пустая() Тогда
		ПрочитатьКонтактнуюИнформациюМедицинскаяОрганизация();
		Возврат;
	КонецЕсли;
	
	Если ЗаблокироватьМедицинскаяОрганизацияПриРедактированииНаСервере(Объект.МедицинскаяОрганизация, ЭтотОбъект.УникальныйИдентификатор) Тогда
		РазблокироватьМедицинскаяОрганизацияПриРедактированииНаСервере(МедицинскаяОрганизация.Ссылка, ЭтотОбъект.УникальныйИдентификатор);
		ПрочитатьКонтактнуюИнформациюМедицинскаяОрганизация();
	Иначе
		Объект.МедицинскаяОрганизация = МедицинскаяОрганизация.Ссылка;
		ВызватьИсключение НСтр("ru = 'Данные контактного лица не могут быть записаны, т.к. личные данные медицинской организации не доступны для изменения.
		|Возможно, эти данные медицинской организации редактируются другим пользователем.'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаблокироватьМедицинскаяОрганизацияПриРедактированииНаСервере(МедицинскаяОрганизация, ФормаУникальныйИдентификатор)
	
	Попытка
		ЗаблокироватьДанныеДляРедактирования(МедицинскаяОрганизация, МедицинскаяОрганизация.ВерсияДанных, ФормаУникальныйИдентификатор);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция РазблокироватьМедицинскаяОрганизацияПриРедактированииНаСервере(МедицинскаяОрганизацияСсылка, ФормаУникальныйИдентификатор)
	
	Попытка
		РазблокироватьДанныеДляРедактирования(МедицинскаяОрганизацияСсылка, ФормаУникальныйИдентификатор);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ПрочитатьКонтактнуюИнформациюМедицинскаяОрганизация()
	
	ЗначениеВРеквизитФормы(Объект.МедицинскаяОрганизация.ПолучитьОбъект(), "МедицинскаяОрганизация");
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, МедицинскаяОрганизация.Ссылка, "ГруппаКонтактнаяИнформацияМедицинскаяОрганизация");
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры
// }Рарус adilas #22689 -Мед учреждение в допуске 2021.12.08

#Область КонтактнаяИнформацияМедицинскиеОрганизации

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
        УправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьОчистку(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьОбработкуНавигационнойСсылки(ЭтотОбъект, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
    ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры

&НаСервере
Процедура ОбновитьКонтактнуюИнформацию(Результат)
    УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат) Экспорт	
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);		
КонецПроцедуры
// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти

#КонецОбласти