
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// {Рарус adilas #23059 -РС Руководитель. Карточка спортсмена.Карточка тренера. 2021.12.13
	// {Рарус dotere #21842 -В методите поле ответственный недоступно 2020.11.06
	Если РольДоступна("ПолныеПрава") Тогда
		 Элементы.Ответственный.Доступность = Истина;
	Иначе 	 
		 Элементы.Ответственный.Доступность = Ложь;
	КонецЕсли;
	// }Рарус dotere #21842 -В методите поле ответственный недоступно 2020.11.06
	// }Рарус adilas #23059 -РС Руководитель. Карточка спортсмена.Карточка тренера. 2021.12.13
	
	// {Рарус dotere #16299 -Получение параметров 2021.05.14
	Если Параметры.Свойство("Cоревнование") Тогда
		Объект.Соревнование = Параметры.Cоревнование;
		Объект.Организация = Параметры.Организация;
		Объект.ВидСпорта = Параметры.ВидСпорта;
		Объект.УчебныйГод = Параметры.УчебныйГод;
	КонецЕсли;
	// }Рарус dotere #16299 -Получение параметров 2021.05.14
	
	Если ЗначениеЗаполнено(Объект.Соревнование) Тогда
		ЗаполнитьДанныеПоСоревнованиюНаСервере();	
	КонецЕсли;
	
	ПроводитьБезПроверкиНаВозраст = НЕ Объект.Ссылка.Пустая();
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		ЗаполнитьДополнительныеДанныеНаФорме(,Ложь);
		УчетСпортсменовСервер.ЗаполнитьДокументУчебныйГод(ЭтотОбъект, Объект.УчебныйГод, Объект.Организация);
	Иначе	
		УчетСпортсменовСервер.ЗаполнитьНастройкиПоУмолчанию(Объект);
		УправлениеУчебнымГодомСсылка = УчетСпортсменовСервер.ПолучитьДокументТекущегоУчебногоГода();
	    Объект.УчебныйГод = УправлениеУчебнымГодомСсылка.УчебныйГод;
	КонецЕсли;
	
	Если Параметры.Свойство("БлокироватьОсновныеРеквизиты") Тогда
		Элементы.Тренер.РежимВыбораИзСписка = Ложь;
		ЗаполнитьЗначенияСвойств(Объект,Параметры);
		УчетСпортсменовСервер.ЗаполнитьНастройкиПоУмолчанию(Объект);
		Для Каждого строкаСпортсменОтбор Из Параметры.СписокСпортсменов Цикл
			строкаСпортсменОбъект           = Объект.СоставУчастников.Добавить();
			ЗаполнитьЗначенияСвойств(строкаСпортсменОбъект,строкаСпортсменОтбор); 
		КонецЦикла;	
		ЗаполнитьДанныеПоСоревнованиюНаСервере();
		ЗаполнитьДополнительныеДанныеНаФорме(,Ложь);
	КонецЕсли;
	
	// {Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	Если НЕ УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).СтрахованиеСпортсменовОрганизация Тогда
		Элементы.СоставУчастниковСтраховойПолис.Видимость 					= Ложь;
		Элементы.СоставУчастниковСтраховойПолисКонтекстноеМеню.Видимость 	= Ложь;
	КонецЕсли;
	
	Если НЕ УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).ВозрастныеГруппыОрганизация Тогда
		Элементы.СоставУчастниковЗаполнитьПоВозрастнымГруппам.Видимость = Ложь;
		Элементы.СоставУчастниковВозрастнаяГруппа.Видимость 		= Ложь;
	КонецЕсли;
	// }Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	
	// {Рарус adilas #13392 -Номер документа 2021.02.12
	Если Пользователи.РолиДоступны("АдминистраторСистемы, ПолныеПрава") Тогда
		Элементы.Номер.Доступность = Истина;
		Элементы.Номер.ТолькоПросмотр = Ложь;
	КонецЕсли;
	// }Рарус adilas #13392 -Номер документа 2021.02.12
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.ЗаявкаНаПроведениеСоревнования.Форма.ФормаЗаполненияПоГруппам" Тогда
		МассивСтрокДляЗаполнения = Новый Массив;
		Для Каждого ВыбранныйУчастник Из ВыбранноеЗначение Цикл
			строкиТабличнойЧасти = Объект.СоставУчастников.НайтиСтроки(Новый Структура("Спортсмен",ВыбранныйУчастник));
			Если НЕ строкиТабличнойЧасти.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;	
			строкаУчастник = Объект.СоставУчастников.Добавить();
			строкаУчастник.Спортсмен = ВыбранныйУчастник;
			МассивСтрокДляЗаполнения.Добавить(строкаУчастник.НомерСтроки-1);
			Модифицированность = Истина;
		КонецЦикла;
		Если Модифицированность Тогда
			
			Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).ВозрастныеГруппыОрганизация Тогда
		    	ЗаполнитьДополнительныеДанныеНаФорме(,Истина,МассивСтрокДляЗаполнения);
			Иначе
				ЗаполнитьДополнительныеДанныеНаФорме(,Ложь,МассивСтрокДляЗаполнения);
			КонецЕсли;
			
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	 	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
КонецПроцедуры

// {Рарус dotere #14234 -Проверка спортсмена из другого спорт учереждения 2021.04.28
&НаСервере
Функция ПроверкаСпортсменаИзДругогоУчереждения(Ссылка)
	
	Спортсмен = Ссылка.ПолучитьОбъект();
	Если Спортсмен.СтатусСпортсмена = Перечисления.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли
	
КонецФункции

// }Рарус dotere #14234 -Проверка спортсмена из другого спорт учереждения 2021.04.28

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// {Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
	Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).ВозрастныеГруппыОрганизация Тогда
		
		Если Модифицированность Тогда
			ПроводитьБезПроверкиНаВозраст = Ложь;
		КонецЕсли;
		
		Если НЕ ПроверитьЗаполнение()Тогда
			Возврат;
		КонецЕсли;
	
		Для Каждого строкаСоставУчастников Из Объект.СоставУчастников Цикл
			Если Не ПроверкаСпортсменаИзДругогоУчереждения(строкаСоставУчастников.Спортсмен) Тогда
				Если НЕ ЗначениеЗаполнено(строкаСоставУчастников.МеждународнаяВозрастнаяГруппа) Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'У спортсмена %1 не указана возрастная группа'"),
						строкаСоставУчастников.Спортсмен);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.СоставУчастников[" + СокрЛП((строкаСоставУчастников.НомерСтроки-1)) +"].Спортсмен");	
				    Отказ = Истина;
				КонецЕсли;
			КонецЕсли
		КонецЦикла;
	
	
	
		Если Отказ Тогда
			Возврат;
		КонецЕсли;	
		
		Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение И НЕ ПроводитьБезПроверкиНаВозраст Тогда
			
			МассивСпортсменовНеВключенныхВГруппу = Новый Массив;
			ПроверитьСоответствиеВозрастныхГруппСпортсменов(МассивСпортсменовНеВключенныхВГруппу,Отказ);
			
			Если Отказ Тогда
				Возврат;
			КонецЕсли;
			
			Если НЕ МассивСпортсменовНеВключенныхВГруппу.Количество()= 0 Тогда
				
				Оповещение = Новый ОписаниеОповещения("ПередЗаписьюЗавершение",
				ЭтотОбъект);
				
				СтрокаИзМассива = "";
				Для Индекс = 0 По МассивСпортсменовНеВключенныхВГруппу.Количество()-1 Цикл
					СтрокаИзМассива = СтрокаИзМассива + МассивСпортсменовНеВключенныхВГруппу[Индекс] + ?(Индекс = МассивСпортсменовНеВключенныхВГруппу.Количество()-1, "",",");
				КонецЦикла;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1 %2 младше возрастного порога указанной группы.
					|Продолжить проведение?'"),
					?(МассивСпортсменовНеВключенныхВГруппу.Количество() = 1, "Спортсмен", "Спортсмены"),
			        СтрокаИзМассива);
				
				ПоказатьВопрос(Оповещение,
				ТекстСообщения,
				РежимДиалогаВопрос.ДаНет,
				0);
				
				Отказ = Истина;
				
				Возврат;
				
			КонецЕсли;	
			
		КонецЕсли;
	
	КонецЕсли;
	
	// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПроводитьБезПроверкиНаВозраст = Истина;
	ЗаполнитьДополнительныеДанныеНаФорме(,Ложь);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийШапкиФормы

&НаКлиенте
Процедура УчебныйГодПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ Объект.СоставУчастников.Количество() = 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("УчебныйГодПриИзмененииЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Очистить табличную часть?",
		РежимДиалогаВопрос.ДаНет,
		0);
		
		Возврат;
		
	Иначе
		
		УчетСпортсменовКлиент.УчебныйГодНачалоВыбора(ЭтотОбъект,СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоревнованиеПриИзменении(Элемент)	
	
	ЗаполнитьДанныеПоСоревнованиюНаСервере();
		
КонецПроцедуры

&НаКлиенте
Процедура СоревнованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ Объект.СоставУчастников.Количество() = 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("СоревнованиеПриИзмененииЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Табличная часть будет очищена.
		|Продолжить?",
		РежимДиалогаВопрос.ДаНет,
		0);
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ Объект.СоставУчастников.Количество() = 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ОрганизацияНачалоВыбораЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Табличная часть будет очищена.
		|Продолжить?",
		РежимДиалогаВопрос.ДаНет,
		0);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ТренерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ Объект.СоставУчастников.Количество() = 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ТренерНачалоВыбораЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Табличная часть будет очищена.
		|Продолжить?",
		РежимДиалогаВопрос.ДаНет,
		0);
				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодОткрытие(Элемент, СтандартнаяОбработка)
	УчетСпортсменовКлиент.УчебныйГодОткрытие(УправлениеУчебнымГодомСсылка,СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодСоздание(Элемент, СтандартнаяОбработка)
	УчетСпортсменовКлиент.УчебныйГодСоздание(ЭтаФорма, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧасти

&НаКлиенте
Процедура СоставУчастниковСпортсменПриИзменении(Элемент)

	ТекДанные = Элементы.СоставУчастников.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Спортсмен) Тогда
		
		// {Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
		Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).ВозрастныеГруппыОрганизация Тогда
			ЗаполнитьДополнительныеДанныеНаФорме(ТекДанные.НомерСтроки-1);
		Иначе
			ЗаполнитьДополнительныеДанныеНаФорме(ТекДанные.НомерСтроки-1, Ложь);
		КонецЕсли;
		// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
		
	КонецЕсли;	
	
КонецПроцедуры

// {Рарус adilas #18823 -Спортивные дисциплины 2021.07.29
&НаКлиенте
Процедура СоставУчастниковДисциплинаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СпортивнаяДисциплинаПоРееструОткрыть();
	
КонецПроцедуры
// }Рарус adilas #18823 -Спортивные дисциплины 2021.07.29

&НаКлиенте
Процедура СоставУчастниковДопускОткрытие(Элемент, СтандартнаяОбработка)
	
	ТекДанные = Элементы.СоставУчастников.ТекущиеДанные;
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("СоставУчастниковДопускОткрытиеОтвет",
	ЭтотОбъект,
	Новый Структура("НомерСтроки,Спортсмен,ДопускРегистратор", ТекДанные.НомерСтроки, ТекДанные.Спортсмен,ТекДанные.ДопускРегистратор));
	
	СписокГрупп = Новый СписокЗначений;
	Если ЗначениеЗаполнено(ТекДанные.ДопускРегистратор) Тогда 
		СписокГрупп.Добавить(КодВозвратаДиалога.Да,     "Открыть документ");
	КонецЕсли;
	СписокГрупп.Добавить(КодВозвратаДиалога.Нет,    "Создать документ");
	СписокГрупп.Добавить(КодВозвратаДиалога.Отмена, "Отмена");
	
	ПоказатьВопрос(Оповещение,
	"Выбирите действие",
	СписокГрупп,
	0, 
	?(ЗначениеЗаполнено(ТекДанные.ДопускРегистратор),КодВозвратаДиалога.Да, КодВозвратаДиалога.Нет),
	);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставУчастниковСтраховойПолисОткрытие(Элемент, СтандартнаяОбработка)
	
	Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).СтрахованиеСпортсменовОрганизация Тогда
		ТекДанные = Элементы.СоставУчастников.ТекущиеДанные;
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("СоставУчастниковСтаховойПолисОткрытиеОтвет",
		ЭтотОбъект,
		Новый Структура("НомерСтроки,Спортсмен,СтраховойПолисРегистратор", ТекДанные.НомерСтроки, ТекДанные.Спортсмен,ТекДанные.СтраховойПолисРегистратор));
		
		СписокГрупп = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ТекДанные.СтраховойПолисРегистратор) Тогда 
			СписокГрупп.Добавить(КодВозвратаДиалога.Да,     "Открыть документ");
		КонецЕсли;
		СписокГрупп.Добавить(КодВозвратаДиалога.Нет,    "Создать документ");
		СписокГрупп.Добавить(КодВозвратаДиалога.Отмена, "Отмена");
		
		ПоказатьВопрос(Оповещение,
		"Выбирите действие",
		СписокГрупп,
		0, 
		?(ЗначениеЗаполнено(ТекДанные.СтраховойПолисРегистратор),КодВозвратаДиалога.Да, КодВозвратаДиалога.Нет),
		);	
	КонецЕсли;
	
	 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ЗаполнитьПоГруппам(Команда)
	
	Если НЕ ЭтотОбъект.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	// {Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
	Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).ВозрастныеГруппыОрганизация Тогда
		
		массивВозможныйВозрастныхГрупп = ПолучитьМассивВозрастныхГрупп();
	
		СтруктураПараметров = Новый Структура("УчебныйГод, Организация, ТекущаяДата, Тренер, ВидСпорта,СписокВозрастныхГрупп",
	    Объект.УчебныйГод, Объект.Организация, Объект.Дата, Объект.Тренер, Объект.ВидСпорта,ПолучитьМассивВозрастныхГрупп());
	Иначе
		СтруктураПараметров = Новый Структура("УчебныйГод, Организация, ТекущаяДата, Тренер, ВидСпорта",
	    Объект.УчебныйГод, Объект.Организация, Объект.Дата, Объект.Тренер, Объект.ВидСпорта,);
	КонецЕсли;
	
	// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
	
	массивВозможныйВозрастныхГрупп = ПолучитьМассивВозрастныхГрупп();
	
	СтруктураПараметров = Новый Структура("УчебныйГод, Организация, ТекущаяДата, Тренер, ВидСпорта,СписокВозрастныхГрупп",
	    Объект.УчебныйГод, Объект.Организация, Объект.Дата, Объект.Тренер, Объект.ВидСпорта,ПолучитьМассивВозрастныхГрупп());
		
	ОткрытьФорму("Документ.ЗаявкаНаПроведениеСоревнования.Форма.ФормаЗаполненияПоГруппам",Новый Структура("СтруктураПараметров",СтруктураПараметров),ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоВозрастнымГруппам(Команда)
	
	Если НЕ ЭтотОбъект.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;	
	
	Если НЕ Объект.СоставУчастников.Количество() = 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьПоВозрастнымГруппамЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Табличная часть будет очищена.
		|Продолжить?",
		РежимДиалогаВопрос.ДаНет,
		0);
		
	Иначе
		
		ЗаполнитьПоВозрастнымГруппамПродолжить();
		
	КонецЕсли;	
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиЗавершенияОповещения

&НаКлиенте
Процедура ТренерНачалоВыбораЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.СоставУчастников.Очистить();
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияНачалоВыбораЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.СоставУчастников.Очистить();
		ОткрытьФорму("Справочник.Организации.ФормаВыбора",,Элементы.Организация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоревнованиеПриИзмененииЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.СоставУчастников.Очистить();
		ОткрытьФорму("Справочник.Соревнование.ФормаВыбора",,Элементы.Соревнование);
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьПоВозрастнымГруппамЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоВозрастнымГруппамПродолжить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПроводитьБезПроверкиНаВозраст = Истина;
		Модифицированность = Ложь;
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработкаТабличныхЧастей

&НаКлиенте
Процедура СоставУчастниковДопускОткрытиеОтвет(Результат, ДопПараметры) Экспорт
	
	ДопускРегистратор = ДопПараметры.ДопускРегистратор;
	Спортсмен         = ДопПараметры.Спортсмен;
	НомерСтроки       = ДопПараметры.НомерСтроки;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоказатьЗначение(,ДопускРегистратор);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Оповещение = Новый ОписаниеОповещения("СоставУчастниковОткрытиеОтветЗавершение",ЭтотОбъект, Новый Структура("НомерСтроки",НомерСтроки));
		ОткрытьФорму("Документ.ДопускиУчастниковКСпортивнымСоревнованиям.Форма.ФормаДокумента", Новый Структура("Спортсмен",Спортсмен),,,,,Оповещение);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоставУчастниковОткрытиеОтветЗавершение(Результат, ДопПараметры) Экспорт
	
    ЗаполнитьДополнительныеДанныеНаФорме(ДопПараметры.НомерСтроки-1,Ложь);	
	
КонецПроцедуры	

&НаКлиенте
Процедура СоставУчастниковСтаховойПолисОткрытиеОтвет(Результат, ДопПараметры) Экспорт
	
	Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).СтрахованиеСпортсменовОрганизация Тогда
		СтраховойПолисРегистратор = ДопПараметры.СтраховойПолисРегистратор;
		Спортсмен                 = ДопПараметры.Спортсмен;
		НомерСтроки               = ДопПараметры.НомерСтроки;
		
		Если Результат = КодВозвратаДиалога.Да Тогда
			ПоказатьЗначение(,СтраховойПолисРегистратор);
		ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
			Оповещение = Новый ОписаниеОповещения("СоставУчастниковОткрытиеОтветЗавершение",ЭтотОбъект, Новый Структура("НомерСтроки",НомерСтроки));
			ОткрытьФорму("Документ.СтраховойПолисСпортсмена.Форма.ФормаДокумента", Новый Структура("Спортсмен",Спортсмен),,,,,Оповещение);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаУчебногоГода

&НаКлиенте
Процедура УчебныйГодСозданиеЗавершение(Результат, ДопПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
	   Объект.УчебныйГод = Результат.УчебныйГодСсылка;
	   УправлениеУчебнымГодомСсылка = Результат.УчебныйГодОбъект;
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодНачалоВыбораЗавершение(Результат, ДопПараметры) Экспорт
	
	УправлениеУчебнымГодомСсылка = Результат;
    ПолучитьУчебныйГодСсылка();
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодПриИзмененииЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.СоставУчастников.Очистить();
		УчетСпортсменовКлиент.УчебныйГодНачалоВыбора(ЭтотОбъект,Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьУчебныйГодСсылка()
	Объект.УчебныйГод = УправлениеУчебнымГодомСсылка.УчебныйГод;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ЗаполнениеВозрастныхГрупп

&НаСервере
Процедура ЗаполнитьПоВозрастнымГруппамПродолжить()
	
	Объект.СоставУчастников.Очистить();
	Объект.СоставУчастников.Загрузить(РеквизитФормыВЗначение("Объект").ЗаполнитьПоВозрастнымГруппам());
	
	Модифицированность = Истина;
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьМассивВозрастныхГрупп()
	Возврат Объект.Соревнование.МеждународныеВозрастныеГруппы.ВыгрузитьКолонку("МеждународнаяВозрастнаяГруппа");
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеПоСоревнованиюНаСервере()
	
	// {Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
	Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).ВозрастныеГруппыОрганизация Тогда
		
		Для Каждого СтрокаВозрастнаяГруппа Из Объект.Соревнование.МеждународныеВозрастныеГруппы Цикл
			Элементы.СоставУчастниковВозрастнаяГруппа.СписокВыбора.Добавить(строкаВозрастнаяГруппа.МеждународнаяВозрастнаяГруппа, строкаВозрастнаяГруппа.МеждународнаяВозрастнаяГруппа);
		КонецЦикла;
	КонецЕсли;
	// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаполнитьДополнительныеДанныеНаФорме(НомерСтроки = Неопределено, ЗаполнятьВозрастнуюГруппу = Истина, МассивСтрокДляЗаполнения = Неопределено)
	
	СтруктураПараметровЗапроса = Новый Структура("СоставУчастников, УчебныйГод, ДатаНачалаСоревнования, ВидСпорта, Организация", 
	     ПроведениеСоревнованийФормыСервер.ПроиндексироватьТаблицуДокумента(Объект,"СоставУчастников"), Объект.УчебныйГод, Объект.Дата, Объект.ВидСпорта, Объект.Организация);
		 
	Выборка = ПроведениеСоревнованийСлужебныйСервер.ЗаполнитьДополнительныеДанныеНаФорме(СтруктураПараметровЗапроса,НомерСтроки);
	
	ПроверятьНаСтроки = ?(МассивСтрокДляЗаполнения = Неопределено, Ложь, Истина);
		
	Пока Выборка.Следующий() Цикл
		
		Если ПроверятьНаСтроки Тогда
			Если МассивСтрокДляЗаполнения.Найти(Выборка.Индекс) = Неопределено Тогда
				Продолжить;
			КонецЕсли;	
		КонецЕсли;
		
			строкаОбъект = Объект.СоставУчастников[Выборка.Индекс];
			ЗаполнитьЗначенияСвойств(строкаОбъект,Выборка,,?(ЗаполнятьВозрастнуюГруппу,"","МеждународнаяВозрастнаяГруппа"));
			// {Рарус dotere #16607 -Проверка на спортсмена из другого учереждения 2021.07.23
		Если Выборка.Спортсмен.СтатусСпортсмена <> Перечисления.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения Тогда
				Если Выборка.Допуск = "ДОПУЩЕН" Тогда
				строкаОбъект.Допуск = Выборка.Допуск + " (действует до " + Формат(Выборка.ДействуетДо,"ДЛФ=Д") + ")";
			ИначеЕсли Выборка.Допуск = "НЕ ДОПУЩЕН" И Выборка.ДействуетДо <= Объект.Дата И Выборка.ДействуетДо <> Дата(1,1,1) Тогда
				строкаОбъект.Допуск = "ПРОСРОЧЕН" + " (действует до " + Формат(Выборка.ДействуетДо,"ДЛФ=Д") + ")";
			КонецЕсли;
			
			Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).СтрахованиеСпортсменовОрганизация Тогда
				    // {Рарус dotere #22112 -Выводит только страховую компанию и номер полиса 2021.11.10
				Если Выборка.НомерСтраховогоПолиса = "без №-" Тогда
					НомерПолиса = "не указан";
				Иначе
					НомерПолиса = СокрЛП(Выборка.НомерСтраховогоПолиса);
				КонецЕсли;
				Если Выборка.СтраховойПолисРегистратор = Документы.СтраховойПолисСпортсмена.ПустаяСсылка() Тогда
					строкаОбъект.СтраховойПолис = "НЕ ВВЕДЕН";
				ИначеЕсли Выборка.ДатаОкончания <= Объект.Дата Тогда
					строкаОбъект.СтраховойПолис ="ПРОСРОЧЕН " + СокрЛП(Выборка.СтраховаяКомпания) + "; № " + НомерПолиса;
				Иначе
					строкаОбъект.СтраховойПолис = СокрЛП(Выборка.СтраховаяКомпания) + "; № " + НомерПолиса;   
					// }Рарус dotere #22112 -Выводит только страховую компанию и номер полиса 2021.11.10
				КонецЕсли;
			КонецЕсли;
		Иначе
			строкаОбъект.Допуск = "";
		КонецЕсли;
		// }Рарус dotere #16607 -Проверка на спортсмена из другого учереждения 2021.07.23
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ПроверитьСоответствиеВозрастныхГруппСпортсменов(МассивСпортсменовНеВключенныхВГруппу,Отказ)
	
	// {Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
	Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).ВозрастныеГруппыОрганизация Тогда
		ПроведениеСоревнованийСлужебныйСервер.ПроверитьСоответствиеВозрастныхГруппСпортсменов(
		   Новый Структура("Дата, УчебныйГод, Организация, ВидСпорта, СоставУчастниковДокумента", Объект.Дата, Объект.УчебныйГод, Объект.Организация, Объект.ВидСпорта, Объект.СоставУчастников.Выгрузить()),
		   МассивСпортсменовНеВключенныхВГруппу,
		   Отказ);
	КонецЕсли;	   
		   
	// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
	
КонецПроцедуры

// {Рарус adilas #18823 -Спортивные дисциплины 2021.07.29
&НаКлиенте
Процедура СпортивнаяДисциплинаПоРееструОткрыть()

	ПараметрыФормыВыбора = Новый Структура;
	
	ПараметрыФормыВыбора.Вставить("РежимВыбора", Истина);
	ПараметрыФормыВыбора.Вставить("Владелец", Объект.ВидСпорта);
	
	Обработчик = Новый ОписаниеОповещения(
		"ПослеВыбораДисциплины", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.СпортивныеДисциплины.ФормаВыбора", ПараметрыФормыВыбора, , , , , Обработчик);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораДисциплины(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат <> Неопределено Тогда
		ТекущиеДанные = Элементы.СоставУчастников.ТекущиеДанные;
		ТекущиеДанные.Дисциплина = Результат;
	КонецЕсли;
	
КонецПроцедуры
// }Рарус adilas #18823 -Спортивные дисциплины 2021.07.29

#КонецОбласти