// {Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	Если ОбменДанными.Загрузка Тогда
    	Возврат;
	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	// {Рарус adilas #18193 -Не заполняется поле "Ответственный" в документах 2021.07.07
	УчетСпортсменовСервер.ЗаполнитьРеквизит(ЭтотОбъект, "Ответственный", ПараметрыСеанса.ТекущийПользователь);
	// }Рарус adilas #18193 -Не заполняется поле "Ответственный" в документах 2021.07.07
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
    
    ПараметрыОписанияКраткогоСостава = СформироватьПараметрыПостроенияСтроки();
    СтрокаОписаниКраткогоСостава = УчетСпортсменовСервер.СформироватьСтрокуПоМассиву(ПараметрыОписанияКраткогоСостава);
    
    УчетСпортсменовСервер.ЗаполнитьРеквизит(ЭтотОбъект, "КраткийСоставСпортсмены", СтрокаОписаниКраткогоСостава);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//{ Lobash Рарус IN-9625
	ВыполнитьПроверкуПередПроведением(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	//} Lobash Рарус IN-9625
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	ПроведениеСервер.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ, "ЭтапыСпортивнойПодготовкиСпортсменов");
	
	Движения.Записать();

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Движения.Записать();

	ПроведениеСервер.ВыполнитьКонтрольРезультатовОтменыПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//{ Lobash Рарус IN-9625
Процедура ВыполнитьПроверкуПередПроведением(Отказ)
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидСпорта", ВидСпорта);
	   
	Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	ЗачислениеСпортсменовНаЭтапСпортсмены.Спортсмен КАК Спортсмен,
	                |	ЗачислениеСпортсменовНаЭтапСпортсмены.Ссылка.Организация КАК Организация,
	                |	ЗачислениеСпортсменовНаЭтапСпортсмены.Ссылка.ВидСпорта КАК ВидСпорта,
	                |	ЗачислениеСпортсменовНаЭтапСпортсмены.Ссылка.Этап КАК Этап,
	                |	ЗачислениеСпортсменовНаЭтапСпортсмены.Ссылка.ДатаЗачисления КАК ДатаЗачисления,
	                |	ЗачислениеСпортсменовНаЭтапСпортсмены.Спортсмен.ФизическоеЛицо.ДатаРождения КАК ДатаРождения
	                |ПОМЕСТИТЬ ВТ_Предв
	                |ИЗ
	                |	Документ.ЗачислениеСпортсменовНаЭтап.Спортсмены КАК ЗачислениеСпортсменовНаЭтапСпортсмены
	                |ГДЕ
	                |	ЗачислениеСпортсменовНаЭтапСпортсмены.Ссылка = &Ссылка
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	ВТ_Предв.Спортсмен КАК Спортсмен,
	                |	ВТ_Предв.Организация КАК Организация,
	                |	ВТ_Предв.ВидСпорта КАК ВидСпорта,
	                |	ВТ_Предв.Этап КАК Этап,
	                |	НастройкиЭтаповПоОрганизациямСрезПоследних.МинимальныйВозраст КАК МинимальныйВозраст,
	                |	ВТ_Предв.Спортсмен.ФизическоеЛицо.ГодРождения КАК СпортсменФизическоеЛицоГодРождения,
	                |	ГОД(ВТ_Предв.ДатаЗачисления) - ГОД(ВТ_Предв.ДатаРождения) КАК Возраст,
	                |	ВЫБОР
	                |		КОГДА ГОД(ВТ_Предв.ДатаЗачисления) - ГОД(ВТ_Предв.ДатаРождения) < НастройкиЭтаповПоОрганизациямСрезПоследних.МинимальныйВозраст
	                |			ТОГДА ЛОЖЬ
	                |		ИНАЧЕ ИСТИНА
	                |	КОНЕЦ КАК Проходит
	                |ПОМЕСТИТЬ ВТ_ЭтапМинВозраст
	                |ИЗ
	                |	ВТ_Предв КАК ВТ_Предв
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиЭтаповПоОрганизациям.СрезПоследних КАК НастройкиЭтаповПоОрганизациямСрезПоследних
	                |		ПО ВТ_Предв.Организация = НастройкиЭтаповПоОрганизациямСрезПоследних.Организация
	                |			И ВТ_Предв.ВидСпорта = НастройкиЭтаповПоОрганизациямСрезПоследних.ВидСпорта
	                |			И ВТ_Предв.Этап = НастройкиЭтаповПоОрганизациямСрезПоследних.Этап
	                |			И ВТ_Предв.Спортсмен.ФизическоеЛицо.Пол = НастройкиЭтаповПоОрганизациямСрезПоследних.Пол
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	ВТ_ЭтапМинВозраст.Спортсмен КАК Спортсмен,
	                |	ВТ_ЭтапМинВозраст.Этап КАК Этап,
	                |	ВТ_ЭтапМинВозраст.МинимальныйВозраст КАК МинимальныйВозраст
	                |ИЗ
	                |	ВТ_ЭтапМинВозраст КАК ВТ_ЭтапМинВозраст
	                |ГДЕ
	                |	ВТ_ЭтапМинВозраст.Проходит = ЛОЖЬ
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен,
	                |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта,
	                |	ВТ_Предв.Спортсмен КАК СпортсменЗачисленияНаЭтап,
	                |	ВТ_Предв.ВидСпорта КАК ВидСпортаЗачисленияНаЭтап,
	                |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения КАК ДатаОкончанияОбучения
	                |ИЗ
	                |	ВТ_Предв КАК ВТ_Предв
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
	                |		ПО ВТ_Предв.Спортсмен = СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен
	                |			И ВТ_Предв.ВидСпорта = СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен
	                |ИЗ
	                |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Предв КАК ВТ_Предв
	                |		ПО СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен = ВТ_Предв.Спортсмен";
	
	Результат = Запрос.ВыполнитьПакет();
	
	тзСпортсменыНеПодходящиеПоВозрасту = Результат[2].Выгрузить();
	Если НЕ тзСпортсменыНеПодходящиеПоВозрасту.Количество() = 0 Тогда
		Отказ = Истина;
		Для Каждого строкаСпортсмен Из тзСпортсменыНеПодходящиеПоВозрасту Цикл
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Спортсмен %1 не проходит по возрасту. Минимальный возраст этапа - %2'"),
				строкаСпортсмен.Спортсмен, строкаСпортсмен.МинимальныйВозраст);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;	
	КонецЕсли;
	// {Рарус dotere #20586 -Проверка спортсмена на зачисление в спорт учереждение 2021.09.21
	ЗачисленныйСпортсмен = Результат[3].Выгрузить();
	СтруктураПоиска = Новый Структура("Спортсмен");
	Для Каждого ЗачисляемыйСпортсмен из ЗачисленныйСпортсмен Цикл
			ВидыСпортаСпортсмена = Результат[4].Выбрать();
			СтруктураПоиска.Спортсмен = ЗачисляемыйСпортсмен.СпортсменЗачисленияНаЭтап;
			Если ВидыСпортаСпортсмена.НайтиСледующий(СтруктураПоиска) Тогда
				Если ЗачисляемыйСпортсмен.Спортсмен = null Тогда
					Отказ = Истина;
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Спортсмен %1 не зачислен(а) на вид спорта %2 в спортивном учреждении.'"),
						ЗачисляемыйСпортсмен.СпортсменЗачисленияНаЭтап, ЗачисляемыйСпортсмен.ВидСпортаЗачисленияНаЭтап);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				ИначеЕсли ЗачисляемыйСпортсмен.ДатаОкончанияОбучения <> Дата(1,1,1) Тогда
					Отказ = Истина;
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Спортсмен %1 был отчислен(а) из спортивного учреждения.'"),
						ЗачисляемыйСпортсмен.СпортсменЗачисленияНаЭтап);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			Иначе
				Отказ = Истина;
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Спортсмен %1 не зачислен(а) в спортивное учреждение.'"),
						ЗачисляемыйСпортсмен.СпортсменЗачисленияНаЭтап);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
	КонецЦикла
	// }Рарус dotere #20586 -Проверка спортсмена на зачисление в спорт учереждение 2021.09.21
КонецПроцедуры
//} Lobash Рарус IN-9625	

Функция СформироватьПараметрыПостроенияСтроки()

	   ТЗСпортсменов = Спортсмены.Выгрузить();
       ТЗСпортсменов.Свернуть("Спортсмен");
       ТЗСпортсменов.Сортировать("Спортсмен");
       
       СтруктураПараметров = Новый Структура;
       СтруктураПараметров.Вставить("МассивЗначений",ТЗСпортсменов.ВыгрузитьКолонку("Спортсмен"));
       СтруктураПараметров.Вставить("ОграниченнаяДлина",Истина);
       СтруктураПараметров.Вставить("ДлинаСтроки",1000);

       Возврат СтруктураПараметров;
       
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли