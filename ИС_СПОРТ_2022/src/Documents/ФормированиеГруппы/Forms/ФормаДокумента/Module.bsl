#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// {Рарус adilas #23059 -РС Руководитель. Карточка спортсмена.Карточка тренера. 2021.12.13
	// {Рарус dotere #21842 -В методите поле ответственный недоступно 2020.11.06
	Если РольДоступна("ПолныеПрава") Тогда
		 Элементы.Ответственный.Доступность = Истина;
	Иначе 	 
		 Элементы.Ответственный.Доступность = Ложь;
	КонецЕсли;
	// }Рарус dotere #21842 -В методите поле ответственный недоступно 2020.11.06
	// }Рарус adilas #23059 -РС Руководитель. Карточка спортсмена.Карточка тренера. 2021.12.13
	
	Если Параметры.Свойство("УчебныйГод") Тогда
		Объект.УчебныйГод       = Параметры.УчебныйГод;
		Если НЕ РольДоступна("ПолныеПрава") Тогда
			Элементы.УчебныйГод.ТолькоПросмотр       = Истина;
		КонецЕсли;
	ИначеЕсли Параметры.Свойство("Спортсмен") Тогда
		СтрокаСпортсмен = Объект.Спортсмены.Добавить();
		СтрокаСпортсмен.Спортсмен = Параметры.Спортсмен;	
	КонецЕсли;
	
	// {Рарус adilas #10700 -Вид спорта подставлять по текущему этапу спортсмена 2020.11.05
	Если Объект.Ссылка.Пустая() Тогда
		УчетСпортсменовСервер.ЗаполнитьНастройкиПоУмолчанию(Объект);
		УправлениеУчебнымГодомСсылка = УчетСпортсменовСервер.ПолучитьДокументТекущегоУчебногоГода();
	    Объект.УчебныйГод = УправлениеУчебнымГодомСсылка.УчебныйГод;
	Иначе
		УчетСпортсменовСервер.ЗаполнитьНастройкиПоУмолчанию(Объект);
		УчетСпортсменовСервер.ЗаполнитьДокументУчебныйГод(ЭтотОбъект, Объект.УчебныйГод, Объект.Организация);
	КонецЕсли;
	// }Рарус adilas #10700 -Вид спорта подставлять по текущему этапу спортсмена 2020.11.05
	
	/////////////////////////////////////////////////////////
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьКнопкиПечати(Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).ПолноеИмя(), ЭтотОбъект);
	
	// {Рарус adilas #13392 -Номер документа 2021.02.12
	Если Пользователи.РолиДоступны("АдминистраторСистемы, ПолныеПрава") Тогда
		Элементы.Номер.Доступность = Истина;
		Элементы.Номер.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	// }Рарус adilas #13392 -Номер документа 2021.02.12
	
КонецПроцедуры
	
// Функция получает пользовательские макеты.
//
// Параметры:
//  ПолноеИмяОбъектаМетаданных	 - Строка - Имя объекта метаданных.
// 
// Возвращаемое значение:
//  Массив - Массив структур с макетами. 
//
Функция ПолучитьПользовательскиеМакеты(ПолноеИмяОбъектаМетаданных) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект",ПолноеИмяОбъектаМетаданных);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПользовательскиеМакетыПечати.ИмяМакета КАК ИмяМакета,
	               |	ПользовательскиеМакетыПечати.Объект КАК Объект,
	               |	ПользовательскиеМакетыПечати.CRM_Представление КАК CRM_Представление
	               |ИЗ
	               |	РегистрСведений.ПользовательскиеМакетыПечати КАК ПользовательскиеМакетыПечати
	               |ГДЕ
	               |	ПользовательскиеМакетыПечати.Объект = &Объект";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивСтруктур = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		СтруктураМакета = Новый Структура("ИмяМакета,Объект,CRM_Представление", Выборка.ИмяМакета,Выборка.Объект,Выборка.CRM_Представление);
		МассивСтруктур.Добавить(СтруктураМакета);
	КонецЦикла;
	
	Возврат МассивСтруктур;
	
КонецФункции

// Процедура получает из текущих настроек пользователя имя кнопки печати,
//  которая определяет макет печатной формы по умолчанию.
//  Если не найдено, то берется первый макет в структуре макетов печатных форм,
//  и сохраняется в настройках пользователя.
//
// Параметры:
//  ПолноеИмяОбъектаМетаданных	 - Строка	 - Имя объекта метаданных.
//  Форма						 - УправляемаяФорма	 - форма редактируемого объекта,
//
Процедура УстановитьКнопкиПечати(ПолноеИмяОбъектаМетаданных, Форма) Экспорт
	
	ЭлементПодменюПечати = Форма.Элементы.Найти("ПодменюПечать");
	Если ЭлементПодменюПечати = Неопределено Тогда
		ЭлементПодменюПечати = Форма.Элементы.ФормаАвтоКнопки.Родитель;
	КонецЕсли;
	Форма.Элементы.Переместить(Форма.Элементы.ФормаАвтоКнопки, ЭлементПодменюПечати);
	
	МассивМакетов = ПолучитьПользовательскиеМакеты(ПолноеИмяОбъектаМетаданных);
	
	Для Каждого СтруктураМакета Из МассивМакетов Цикл
		НоваяКомандаФормы = Форма.Команды.Добавить("Печать_"+СокрЛП(СтруктураМакета.ИмяМакета));
		НоваяКомандаФормы.Заголовок                 = СокрЛП(СтруктураМакета.CRM_Представление);
		НоваяКомандаФормы.Действие                  = "Подключаемый_ПечатьВнешнегоМакета";
		
		НовыйПунктМеню =  Форма.Элементы.Вставить("Кнопка_"+СокрЛП(СтруктураМакета.ИмяМакета), Тип("КнопкаФормы"), Форма.Элементы.ФормаАвтоКнопки);
		НовыйПунктМеню.ИмяКоманды			= "Печать_"+СокрЛП(СтруктураМакета.ИмяМакета);
		НовыйПунктМеню.Заголовок			= СокрЛП(СтруктураМакета.CRM_Представление);
	КонецЦикла;
	
КонецПроцедуры // УстановитьКнопкиПечати()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	/////////////////////////////////////////////////////////////
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	/////////////////////////////////////////////////////////////////////////////////////
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
			
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
		
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ЗначениеЗаполнено(Объект.УчебныйГод) И ЭтоНовый Тогда
		Оповестить("ДополнитьТаблицуГрупп",Новый Структура("ДокументКоманда",Объект.Ссылка));
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПодборСпискаСпортсменов" Тогда
		Для Каждого ЗначениеВыбора Из Параметр.СписокСпортсменов Цикл
			строкаСпортсмен            = Объект.Спортсмены.Добавить();
			строкаСпортсмен.Спортсмен  = ЗначениеВыбора.Значение;
			строкаСпортсмен.КлючСтроки = СокрЛП(строкаСпортсмен.Спортсмен.УникальныйИдентификатор());
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовШапки

&НаКлиенте
Процедура ОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.СписокЛичныхТренеров.Количество()>0 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ОрганизацияНачалоВыбораЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Табличные части в документе будут очищены. 
		|Продолжить?",
		РежимДиалогаВопрос.ДаНет,
		0);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УчетСпортсменовКлиент.УчебныйГодНачалоВыбора(ЭтотОбъект,СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодОткрытие(Элемент, СтандартнаяОбработка)
	УчетСпортсменовКлиент.УчебныйГодОткрытие(УправлениеУчебнымГодомСсылка,СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодСоздание(Элемент, СтандартнаяОбработка)
	УчетСпортсменовКлиент.УчебныйГодСоздание(ЭтаФорма, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандНаФорме

&НаКлиенте
Процедура ПодобратьСпортсменов(Команда)
	
	ПараметрыФормы = Новый Структура("ТолькоПодбор, Организация, ДатаСреза, Тренер, УчебныйГод, ВидСпорта", 
	   Истина, Объект.Организация, Объект.Дата, Объект.ТренерСборной, Объект.УчебныйГод, Объект.ВидСпорта);
	ОткрытьФорму("Справочник.Спортсмены.Форма.ФормаВыбораСпортсменаПоУчреждению", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличныхЧастей

&НаКлиенте
Процедура СписокЛичныхТренеровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекДанныеОбъектСпортсмен = Элементы.Спортсмены.ТекущиеДанные;
	Если ТекДанныеОбъектСпортсмен = Неопределено Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не задана текущая строка!
		|Выберете строку в табличной части 'Список спортсменов'!",,"Спортсмены","Объект.Спортсмены");
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура СпортсменыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
КонецПроцедуры

&НаКлиенте
Процедура СпортсменыПередУдалением(Элемент, Отказ)
	
	ТекДанныеОбъектСпортсмен        = Элементы.Спортсмены.ТекущиеДанные;
	ОчиститьСтрокиСписокЛичныхТренеров(ТекДанныеОбъектСпортсмен.КлючСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура СпортсменыСпортсменПриИзменении(Элемент)
	
	ТекДанныеОбъектСпортсмен            = Элементы.Спортсмены.ТекущиеДанные;
	ТекДанныеОбъектСпортсмен.КлючСтроки = СокрЛП(ТекДанныеОбъектСпортсмен.Спортсмен.УникальныйИдентификатор());
		   
КонецПроцедуры

&НаКлиенте
Процедура СписокЛичныхТренеровФизическоеЛицоПриИзменении(Элемент)
	
	ТекДанныеОбъектСпортсмен         = Элементы.Спортсмены.ТекущиеДанные;
	ТекДанныеЛичныйТренер            = Элементы.СписокЛичныхТренеров.ТекущиеДанные;
	ТекДанныеЛичныйТренер.КлючСтроки = ТекДанныеОбъектСпортсмен.КлючСтроки;	
	
КонецПроцедуры

&НаКлиенте
Процедура СпортсменыПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.Спортсмены.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.Спортсмен <> ТекущаяСтрокаСпортсмен Тогда
		УстановитьОтборНаТабличуюЧастьСписокЛичныхТренеров(ТекДанные.КлючСтроки);
		УстановитьТекущуюСтрокуТаблицыСпортсмены(ТекДанные.Спортсмен);
	КонецЕсли;
	/////////////////////////////////////////////////////////////
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЛичныхТренеровПослеУдаления(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура СпортсменыПослеУдаления(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура СпортсменыСпортсменНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЭтотОбъект.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("ТолькоВыбор, Организация, ДатаСреза, Тренер, УчебныйГод, ВидСпорта", 
	    Истина, Объект.Организация, Объект.Дата, Объект.ТренерСборной, Объект.УчебныйГод, Объект.ВидСпорта);
	Оповещение = Новый ОписаниеОповещения("ВыбратьСпортсменаЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.Спортсмены.Форма.ФормаВыбораСпортсменаПоУчреждению", ПараметрыФормы,,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СпортсменыСпортсменАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	//{Рарус lobash IN-9222 08.09.20
	//СтандартнаяОбработка = Ложь;
	//Возврат;
	//}Рарус lobash IN-9222 08.09.20
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОрганизацияНачалоВыбораЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Объект.СписокЛичныхТренеров.Очистить();
		Объект.Спортсмены.Очистить();
		Элементы.ТренерСборной.СписокВыбора.Очистить();
		Объект.ТренерСборной = "";
		
		ОткрытьФорму("Справочник.Организации.ФормаВыбора",,Элементы.Организация);
		
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьТекущуюСтрокуТаблицыСпортсмены(Спортсмен)
	
	ТекущаяСтрокаСпортсмен = Спортсмен;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборНаТабличуюЧастьСписокЛичныхТренеров(КлючСтроки)
	
	Элементы.СписокЛичныхТренеров.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСтроки",КлючСтроки);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьСтрокиСписокЛичныхТренеров(КлючСтроки)
	
	массивСтрокСписокЛичныхТренеров = Объект.СписокЛичныхТренеров.НайтиСтроки(Новый Структура("КлючСтроки",КлючСтроки));
	Для Каждого СтрокаЛичныйТренер Из массивСтрокСписокЛичныхТренеров Цикл
		Объект.СписокЛичныхТренеров.Удалить(СтрокаЛичныйТренер);
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеДанныхПоСтрокеСпортсмена(КлючСтроки)
	массивСтрокСписокЛичныхТренеров = Объект.СписокЛичныхТренеров.НайтиСтроки(Новый Структура("КлючСтроки", КлючСтроки));
	Возврат ?(массивСтрокСписокЛичныхТренеров.Количество() = 0, Ложь, Истина);
КонецФункции		

&НаСервере
Процедура ЗаполнитьДанныеПоИсключеннымСпортсменам()
	
	тзИсключенныхСпортсменов = РеквизитФормыВЗначение("Объект").ПолучитьДанныеПоИсключеннымИзГруппыСпортсменам();
	Для Каждого строкаИсключенных Из тзИсключенныхСпортсменов Цикл
		Объект.Спортсмены[строкаИсключенных.НомерСтроки-1].ИсключенИзГруппы = "исключен " + Формат(строкаИсключенных.ДатаИсключенияИзГруппы,"ДЛФ=Д");
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ВыбратьСпортсменаЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТекДанные            = Элементы.Спортсмены.ТекущиеДанные;
	ТекДанные.Спортсмен  = Результат.Спортсмен;
	ТекДанные.КлючСтроки = СокрЛП(ТекДанные.Спортсмен.УникальныйИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодСозданиеЗавершение(Результат, ДопПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
	   Объект.УчебныйГод = Результат.УчебныйГодСсылка;
	   УправлениеУчебнымГодомСсылка = Результат.УчебныйГодОбъект;
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодНачалоВыбораЗавершение(Результат, ДопПараметры) Экспорт
	
	УправлениеУчебнымГодомСсылка = Результат;
    ПолучитьУчебныйГодСсылка();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьУчебныйГодСсылка()
	Объект.УчебныйГод = УправлениеУчебнымГодомСсылка.УчебныйГод;
КонецПроцедуры	

/////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// {Рарус adilas #11479 -Механизм шаблонов 2020.12.27 2020.12.27

&НаКлиенте
Процедура Подключаемый_ПечатьВнешнегоМакета(Команда)
	
	ИмяМакета = СтрЗаменить(Команда.Имя, "Печать_", "");
	
	ОбъектыНазначения = Новый СписокЗначений;
	ОбъектыНазначения.Добавить(Объект.Ссылка);
	
	УправлениеПечатьюКлиент.ПечатьВнешнегоМакета(ИмяМакета, ОбъектыНазначения);	
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	
	
КонецПроцедуры

// }Рарус adilas #11479 -Механизм шаблонов 2020.12.27 2020.12.27

#КонецОбласти
