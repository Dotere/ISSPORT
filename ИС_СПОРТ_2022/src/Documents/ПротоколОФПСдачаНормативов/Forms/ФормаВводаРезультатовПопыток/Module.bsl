#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьВидимостьДоступность(Параметры.ТипРезультата);
	ТипРезультата = Параметры.ТипРезультата;
	
	Для Индекс = 0 По Параметры.МассивПопыток.Количество()-1 Цикл
		строкаПопытка = таблицаПопыток.Добавить();
		ЗаполнитьЗначенияСвойств(строкаПопытка,Параметры.МассивПопыток[Индекс]);
		строкаПопытка.НомерПопытки = Индекс + 1;
		строкаПопытка.РезультатБулево = ?(Параметры.МассивПопыток[Индекс].РезультатБулево, "Выполнил", "Не выполнил");
	КонецЦикла;
	
	ЗаполнитьНастройкиПоПараметрамСФормы(Параметры);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПересчитатьРезультатЧислоВСтроку();	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыНаФорме

&НаКлиенте
Процедура таблицаПопытокРезультатСтрокаПриИзменении(Элемент)
	
	текДанные = Элементы.таблицаПопыток.ТекущиеДанные;
	Если текДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	УчетСпортсменовОбщегоНазначенияКлиентСервер.ПроверитьРезультатСтроковыйПриИзменении(текДанные.РезультатСтрока, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура таблицаПопытокПриИзменении(Элемент)
	
	ТекДанные = Элементы.таблицаПопыток.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекДанные.НомерПопытки = таблицаПопыток.Количество();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ВнестиРезультаты(Команда)
	
	массивПопыток = Новый Массив;
	Для Каждого строкаПопытка Из таблицаПопыток Цикл
		Если Пересчитывать Тогда
			строкаПопытка.РезультатЧисло = УчетСпортсменовОбщегоНазначенияКлиентСервер.ПересчитатьВремяИзСтрокиВМиллесекунды(строкаПопытка.РезультатСтрока);
		КонецЕсли;	
		структураПопытка = Новый Структура("НомерПопытки, РезультатЧисло, РезультатСтрока, РезультатБулево, Состояние, УчитыватьВПодсчетеРезультата");
		ЗаполнитьЗначенияСвойств(структураПопытка, строкаПопытка,,"РезультатБулево");
		структураПопытка.РезультатБулево = ?(строкаПопытка.РезультатБулево = "Выполнил", Истина, Ложь);
		структураПопытка.УчитыватьВПодсчетеРезультата = ПолучитьСостояниеНаСервере(структураПопытка.Состояние);
		массивПопыток.Добавить(структураПопытка);
	КонецЦикла;
	
	ЭтаФорма.Закрыть(Новый Структура("Попытки, ТипПодсчетаРезультата",массивПопыток, ТипПодсчетаРезультата));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьСостояниеНаСервере(Состояние)
	Возврат Состояние.УчитыватьВПодсчетеРезультата 
КонецФункции	
	
&НаСервере
Процедура УстановитьВидимостьДоступность(ТипРезультата)
	
	Пересчитывать = ТипРезультата = Перечисления.ТипыРезультатов.Время;; 
	Элементы.таблицаПопытокРезультатЧисло.Видимость  = ТипРезультата = Перечисления.ТипыРезультатов.Число;
	Элементы.таблицаПопытокРезультатБулево.Видимость = ТипРезультата = Перечисления.ТипыРезультатов.Булево;
	Элементы.таблицаПопытокРезультатСтрока.Видимость = Пересчитывать;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьРезультатЧислоВСтроку()
	
	Если Пересчитывать Тогда
		Для Каждого строкаПопытка Из таблицаПопыток Цикл
			строкаПопытка.РезультатСтрока = УчетСпортсменовОбщегоНазначенияКлиентСервер.ПересчитатьВремяВМиллесекундахВСтроку(строкаПопытка.РезультатЧисло);
		КонецЦикла;
	Иначе
		Возврат
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьНастройкиПоПараметрамСФормы(Параметры)
	
	Пол = Параметры.Пол;
	МеждународнаяВозрастнаяГруппа = Параметры.МеждународнаяВозрастнаяГруппа;
	ПолПредставление = ?(Параметры.Пол = Перечисления.ПолФизическогоЛица.Женский, "М",?(Параметры.Пол = Перечисления.ПолФизическогоЛица.Мужской,"М","Неопределен"));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пол", Параметры.Пол);
	Запрос.УстановитьПараметр("Норматив", Параметры.Норматив);
	Запрос.УстановитьПараметр("МеждународнаяВозрастнаяГруппа", Параметры.МеждународнаяВозрастнаяГруппа);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОценкиПрохожденияНормативов.КоличествоПопыток КАК КоличествоПопыток,
	               |	ОценкиПрохожденияНормативов.ТипПодсчетаРезультата КАК ТипПодсчетаРезультата
	               |ИЗ
	               |	РегистрСведений.ОценкиПрохожденияНормативов КАК ОценкиПрохожденияНормативов
	               |ГДЕ
	               |	ОценкиПрохожденияНормативов.Пол = &Пол
	               |	И ОценкиПрохожденияНормативов.Норматив = &Норматив
	               |	И ОценкиПрохожденияНормативов.МеждународнаяВозрастнаяГруппа = &МеждународнаяВозрастнаяГруппа";
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,Выборка);
		Если таблицаПопыток.Количество() = 0 Тогда
			Для Индекс = 1 По Выборка.КоличествоПопыток Цикл
				строкаПопытка = таблицаПопыток.Добавить();
				строкаПопытка.НомерПопытки = Индекс;
				Если ТипРезультата = Перечисления.ТипыРезультатов.Булево Тогда
					строкаПопытка.РезультатБулево   = "Не выполнил";
				ИначеЕсли ТипРезультата = Перечисления.ТипыРезультатов.Время Тогда
					строкаПопытка.РезультатСтрока   = УчетСпортсменовОбщегоНазначенияКлиентСервер.ПересчитатьВремяВМиллесекундахВСтроку(0);
				Иначе
					строкаПопытка.РезультатЧисло    = 0;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипПодсчетаРезультата) Тогда
		ТипПодсчетаРезультата = Перечисления.ТипПодсчетаРезультата.МинимальноеЗначение;
	КонецЕсли;
	
	Если КоличествоПопыток = 0 Тогда
		КоличествоПопыток = 1;
	КонецЕсли;
	
	Если таблицаПопыток.Количество() = 0 Тогда
		строкаПопытка = таблицаПопыток.Добавить();
		строкаПопытка.НомерПопытки = 1;
		Если ТипРезультата = Перечисления.ТипыРезультатов.Булево Тогда
			строкаПопытка.РезультатБулево   = "Не выполнил";
		ИначеЕсли ТипРезультата = Перечисления.ТипыРезультатов.Время Тогда
			строкаПопытка.РезультатСтрока   = УчетСпортсменовОбщегоНазначенияКлиентСервер.ПересчитатьВремяВМиллесекундахВСтроку(0);
		Иначе
			строкаПопытка.РезультатЧисло    = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти