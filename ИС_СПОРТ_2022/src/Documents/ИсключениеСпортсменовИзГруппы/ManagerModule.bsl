
#Область СлужебныйПрограммныйИнтерфейс
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Отказ = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка"     , ДокументСсылка);
	Запрос.УстановитьПараметр("Период"     , ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("УчебныйГод" , ДокументСсылка.УчебныйГод);
	Запрос.УстановитьПараметр("Организация", ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("Группа"    , ДокументСсылка.Группа);
	Запрос.УстановитьПараметр("ВидСпорта"  , ДокументСсылка.ВидСпорта);
	Запрос.УстановитьПараметр("Основание"  , ДокументСсылка.Основание);
	Запрос.УстановитьПараметр("Тренер"     , ДокументСсылка.ТренерСборной);
	Запрос.Текст =  "ВЫБРАТЬ
	                |	""СоставГруппы"" КАК ИмяРегистра_,
	                |	&Период КАК Период,
	                |	&УчебныйГод КАК УчебныйГод,
					|   &Тренер КАК ТренерСборной,
	                |	&Организация КАК Организация,
	                |	&ВидСпорта КАК ВидСпорта,
					|	&Основание КАК Основание,
	                |	ИсключениеСпортсменовИзГруппы.Спортсмен КАК Спортсмен,
	                |	&Группа КАК Группа,
	                |	ИсключениеСпортсменовИзГруппы.ДатаИсключенияИзГруппы КАК ДатаИсключенияИзГруппы
	                |ИЗ
	                |	Документ.ИсключениеСпортсменовИзГруппы.Спортсмены КАК ИсключениеСпортсменовИзГруппы
	                |ГДЕ
	                |	ИсключениеСпортсменовИзГруппы.Ссылка = &Ссылка";
	
	ТаблицаСоставГруппы = Запрос.Выполнить().Выгрузить();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаСоставГруппы" , ТаблицаСоставГруппы);
	
    ДополнительныеСвойства.Вставить("Отказ", Отказ);
	
КонецПроцедуры	

Процедура ВыполнитьКонтрольРезультатовПроведения(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ИсключениеСпортсменовИзГруппы.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКонтрольПередПроведением(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ИсключениеСпортсменовИзГруппы.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКонтрольРезультатовОтменыПроведения(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ИсключениеСпортсменовИзГруппы.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

// + Адильбеков А.Б. 18.06.20 IN-6902 {
#Область ПечатьWord
// Подготавливает данные объекта к выводу на печать.
// 
// Параметры:
//  Согласия - Массив - ссылки на документы, для которых запрашиваются данные для печати;
//  МассивИменМакетов - Массив - имена макетов (Строка), в которые подставляются данные для печати.
//
// Возвращаемое значение:
//  Соответствие - коллекция ссылок на объекты и их данные:
//   * Ключ - ЛюбаяСсылка - ссылка на объект информационной базы;
//   * Значение - Структура - макет и данные:
//    ** Ключ - Строка - имя макета,
//    ** Значение - Структура - данные объекта.
//
Функция ПолучитьДанныеПечати(знач МассивДокументов, знач МассивИменМакетов) Экспорт
	
	// Создание функции подготовки данных для печати.
	ДанныеПоВсемОбъектам = Новый Соответствие;
	
	Для Каждого ОбъектСсылка Из МассивДокументов Цикл
		ДанныеОбъектаПоМакетам = Новый Соответствие;
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл
			ДанныеОбъектаПоМакетам.Вставить(ИмяМакета, ПолучитьДанныеОбъекта(ОбъектСсылка,ИмяМакета));
		КонецЦикла;
		ДанныеПоВсемОбъектам.Вставить(ОбъектСсылка, ДанныеОбъектаПоМакетам);
	КонецЦикла;
	
	ОписаниеОбластей = Новый Соответствие;
	ДвоичныеДанныеМакетов = Новый Соответствие;
	ТипыМакетов = Новый Соответствие;
	                                                             
	Для Каждого ИмяМакета Из МассивИменМакетов Цикл
		Если ИмяМакета = "ПФ_DOC_ИсключениеИзКоманды" Тогда
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, Документы.ИсключениеСпортсменовИзГруппы.ПолучитьМакет("ПФ_DOC_ИсключениеИзКоманды"));
			ТипыМакетов.Вставить(ИмяМакета, "DOC");
		ИначеЕсли ИмяМакета = "ПФ_DOC_СлужебнаяЗаписка" Тогда
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, Документы.ИсключениеСпортсменовИзГруппы.ПолучитьМакет("ПФ_DOC_СлужебнаяЗаписка"));
			ТипыМакетов.Вставить(ИмяМакета, "DOC");
		КонецЕсли;
		ОписаниеОбластей.Вставить(ИмяМакета, ПолучитьОписаниеОбластейМакетаОфисногоДокумента(ИмяМакета));
	КонецЦикла;

	
	Возврат Новый Структура("Данные, Макеты",
											ДанныеПоВсемОбъектам,
											Новый Структура("ОписаниеОбластей, ТипыМакетов, ДвоичныеДанныеМакетов",
											ОписаниеОбластей,
											ТипыМакетов,
											ДвоичныеДанныеМакетов));


КонецФункции

Функция ПолучитьОписаниеОбластейМакетаОфисногоДокумента(ИмяМакета)
	
	ОписаниеОбластей = Новый Структура;
	
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьШапка"        				       , "Общая");            // Описание областей в вордовском документе
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьСписокСпортсмены"        	       , "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьШапкаТаблицы"        	       	   , "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьСтрокаТаблицыСпортсмены"       	   , "СтрокаТаблицы"); 
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбластьПодвал"     				       , "Общая");
	
	Возврат ОписаниеОбластей;
	
КонецФункции

Функция ПолучитьДанныеОбъекта(ОбъектыПечати,ИмяМакета) Экспорт
	Если ИмяМакета = "ПФ_DOC_ИсключениеИзКоманды" Тогда
		Возврат ПолучитьДанныеОбъектаПриказ(ОбъектыПечати);
	ИначеЕсли ИмяМакета = "ПФ_DOC_СлужебнаяЗаписка" Тогда
		Возврат ПолучитьДанныеОбъектаСлужебнаяЗаписка(ОбъектыПечати);		
	КонецЕсли;
КонецФункции

Функция ПолучитьДанныеОбъектаПриказ(ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсключениеСпортсменовИзГруппы.Ссылка КАК Ссылка,
		|	ИсключениеСпортсменовИзГруппы.Группа КАК Группа,
		|	ИсключениеСпортсменовИзГруппы.ТренерСборной КАК ТренерСборной,
		|	ИсключениеСпортсменовИзГруппы.Основание КАК Основание
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ИсключениеСпортсменовИзГруппы КАК ИсключениеСпортсменовИзГруппы
		|ГДЕ
		|	ИсключениеСпортсменовИзГруппы.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсключениеСпортсменовИзГруппыСпортсмены.Спортсмен КАК Спортсмен,
		|	ИсключениеСпортсменовИзГруппыСпортсмены.ДатаИсключенияИзГруппы КАК ДатаИсключенияИзГруппы,
		|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
		|	ВТ_Данные.Группа КАК Группа,
		|	ВТ_Данные.ТренерСборной КАК ТренерСборной,
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ВТ_Данные.Основание КАК Основание
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИсключениеСпортсменовИзГруппы.Спортсмены КАК ИсключениеСпортсменовИзГруппыСпортсмены
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|			ПО ИсключениеСпортсменовИзГруппыСпортсмены.Спортсмен.ФизическоеЛицо = ФизическиеЛица.Ссылка
		|		ПО ВТ_Данные.Ссылка = ИсключениеСпортсменовИзГруппыСпортсмены.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаИсключенияИзГруппы
		|ИТОГИ ПО
		|	Ссылка,
		|	ДатаИсключенияИзГруппы";
	
	Запрос.УстановитьПараметр("СписокДокументов",ОбъектыПечати);
	
	МассивДокументов = Новый Массив;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСсылка
		    СтруктураДокумента = Новый Структура;
			
			СтруктураШапка = Новый Структура;
			МассивШапкаСпортсмены = Новый Массив;
			ВыборкаДатаИсключенияИзГруппы = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаДатаИсключенияИзГруппы.Следующий() Цикл
				СтруктураШапкаТаблицы = Новый Структура;
				СтруктураШапкаТаблицы.Вставить("Группа",ВыборкаДатаИсключенияИзГруппы.Ссылка.Группа);
				СтруктураШапкаТаблицы.Вставить("ТренерСборной",ВыборкаДатаИсключенияИзГруппы.Ссылка.ТренерСборной);
				СтруктураШапкаТаблицы.Вставить("ДатаИсключенияИзГруппы",Формат(ВыборкаДатаИсключенияИзГруппы.ДатаИсключенияИзГруппы, "ДЛФ=Д"));
				
				МассивШапкаСпортсмены.Добавить(СтруктураШапкаТаблицы);
				МассивСтрокСпортсмены = Новый Массив;
				НомерСтрокиСпр = 1;
				
				ВыборкаДетальныеЗаписи = ВыборкаДатаИсключенияИзГруппы.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спортсмен) Тогда
						// Таблица спортсмены
						СтруктураСтрокаСпортсмены = Новый Структура("НомерСтроки,Спортсмен,ДатаРождения,Основание");				
						ЗаполнитьЗначенияСвойств(СтруктураСтрокаСпортсмены,ВыборкаДетальныеЗаписи);
						СтруктураСтрокаСпортсмены.ДатаРождения 	= Формат(ВыборкаДетальныеЗаписи.ДатаРождения, "ДЛФ=Д");
						СтруктураСтрокаСпортсмены.НомерСтроки 	= НомерСтрокиСпр;
						НомерСтрокиСпр 							= НомерСтрокиСпр +1;
						// Фамилия и Имя
						ЧастиИмени 								= СтрРазделить(ВыборкаДетальныеЗаписи.Спортсмен, " ", Ложь);
						Фамилия 								= ЧастиИмени[0];
						Имя 									= ЧастиИмени[1];
						СтруктураСтрокаСпортсмены.Спортсмен 	= Фамилия + " " + Имя;
						МассивСтрокСпортсмены.Добавить(СтруктураСтрокаСпортсмены);
					Иначе
						ОбщегоНазначения.СообщитьПользователю("Состав группы пустой!");
					КонецЕсли;
				КонецЦикла;
				СтруктураШапкаТаблицы.Вставить("МассивСтрокСпортсмены", МассивСтрокСпортсмены);
			КонецЦикла;
			
			// Подвал
			СтруктураПодвал = Новый Структура;
			СтруктураПодвал.Вставить("Комментарий",ВыборкаСсылка.Ссылка.Комментарий);
			СтруктураПодвал.Вставить("Ответственный",ВыборкаСсылка.Ссылка.Ответственный);
			// Заполение Областей документа Ворд
			СтруктураДокумента.Вставить("ОбластьШапка", СтруктураШапка);
			СтруктураДокумента.Вставить("ОбластьШапкаТаблицы", МассивШапкаСпортсмены);
			СтруктураДокумента.Вставить("ОбластьСтрокаТаблицыСпортсмены", МассивСтрокСпортсмены);
			СтруктураДокумента.Вставить("ОбластьПодвал",СтруктураПодвал);
					
			МассивДокументов.Добавить(СтруктураДокумента);
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивДокументов
	
	
КонецФункции	
// Печать Служебной записки
Функция ПолучитьДанныеОбъектаСлужебнаяЗаписка(ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсключениеСпортсменовИзГруппы.Ссылка КАК Ссылка,
		|	ИсключениеСпортсменовИзГруппы.Группа КАК Группа,
		|	ИсключениеСпортсменовИзГруппы.Организация КАК Организация,
		|	ИсключениеСпортсменовИзГруппы.ТренерСборной КАК ТренерСборной,
		|	ИсключениеСпортсменовИзГруппы.Организация.Директор КАК Директор
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ИсключениеСпортсменовИзГруппы КАК ИсключениеСпортсменовИзГруппы
		|ГДЕ
		|	ИсключениеСпортсменовИзГруппы.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсключениеСпортсменовИзГруппыСпортсмены.Ссылка КАК Ссылка,
		|	ИсключениеСпортсменовИзГруппыСпортсмены.Спортсмен КАК Спортсмен,
		|	ИсключениеСпортсменовИзГруппыСпортсмены.Спортсмен.ФизическоеЛицо.ДатаРождения КАК ДатаРождения
		|ПОМЕСТИТЬ ВТ_Спортсмены
		|ИЗ
		|	Документ.ИсключениеСпортсменовИзГруппы.Спортсмены КАК ИсключениеСпортсменовИзГруппыСпортсмены
		|ГДЕ
		|	ИсключениеСпортсменовИзГруппыСпортсмены.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ФизическиеЛицаКонтактнаяИнформация.Представление) КАК Адрес,
		|	ВТ_Спортсмены.Спортсмен КАК Спортсмен
		|ПОМЕСТИТЬ ВТ_Адрес
		|ИЗ
		|	ВТ_Спортсмены КАК ВТ_Спортсмены
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|		ПО ВТ_Спортсмены.Спортсмен.ФизическоеЛицо = ФизическиеЛицаКонтактнаяИнформация.Ссылка
		|ГДЕ
		|	ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(перечисление.типыконтактнойинформации.Адрес)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Спортсмены.Спортсмен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ВТ_Данные.Группа КАК Группа,
		|	ВТ_Данные.Организация КАК Организация,
		|	ВТ_Данные.ТренерСборной КАК ТренерСборной,
		|	ВТ_Данные.Директор КАК Директор,
		|	ВТ_Спортсмены.Спортсмен КАК Спортсмен,
		|	ВТ_Спортсмены.ДатаРождения КАК ДатаРождения,
		|	ВТ_Адрес.Адрес КАК Адрес
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные,
		|	ВТ_Спортсмены КАК ВТ_Спортсмены
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Адрес КАК ВТ_Адрес
		|		ПО ВТ_Спортсмены.Спортсмен = ВТ_Адрес.Спортсмен
		|ИТОГИ ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("СписокДокументов",ОбъектыПечати);
	
	МассивДокументов = Новый Массив;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСсылка
		    СтруктураДокумента = Новый Структура;
			СтруктураШапка = Новый Структура;
			// Фамилия и инициалы
			Директор = ВыборкаСсылка.Ссылка.Организация.Директор;
			    
			Попытка
				ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСклоненияФИО", "NameDecl" , ТипВнешнейКомпоненты.Native); 
				Объект = Новый("AddIn.NameDecl.CNameDecl");  
			Исключение
				Сообщить("Не удалось подключить внешнюю компоненту по причине: " + ОписаниеОшибки());  
			КонецПопытки;
			 			
			СтрокаФИО = Директор;
			// Задаем требуемый падеж
			Падеж = 3;  
			// Получаем результат склонения
			Директор = Объект.Просклонять(Строка(СтрокаФИО), Падеж, 0);
			СтруктураШапка.Вставить("Директор",ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Директор));
			// Список спортсменов строкой
			СтруктураСписок = Новый Структура;
			СписокСтрокой = "";
			СтруктураСписок.Вставить("Группа",ВыборкаСсылка.Ссылка.Группа);
			//МассивШапка = Новый Массив;	
			СтруктураШапкаТаблицы = Новый Структура;
			СтруктураШапкаТаблицы.Вставить("ТренерСборной",ВыборкаСсылка.Ссылка.ТренерСборной);
			МассивШапкаТаблицы = Новый Массив;
			
			МассивСтрокСпортсмены = Новый Массив;
			НомерСтрокиСпр = 1;
			
			ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
			
			Сч = ВыборкаДетальныеЗаписи.Количество();
			
			Пока Сч > 0 Цикл
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спортсмен) Тогда
						// Таблица спортсмены
						СтруктураСтрокаСпортсмены 				= Новый Структура("НомерСтроки,Спортсмен,ДатаРождения,Адрес,Основание");
						ЗаполнитьЗначенияСвойств(СтруктураСтрокаСпортсмены,ВыборкаДетальныеЗаписи);
						СтруктураСтрокаСпортсмены.ДатаРождения 	= Формат(ВыборкаДетальныеЗаписи.ДатаРождения, "ДЛФ=Д");
						СтруктураСтрокаСпортсмены.НомерСтроки 	= НомерСтрокиСпр;
						НомерСтрокиСпр 							= НомерСтрокиСпр +1;
						// Фамилия и Имя
						ЧастиИмени 								= СтрРазделить(ВыборкаДетальныеЗаписи.Спортсмен, " ", Ложь);
						Фамилия 								= ЧастиИмени[0];
						Имя 									= ЧастиИмени[1];
						СтруктураСтрокаСпортсмены.Спортсмен 	= Фамилия + " " + Имя;
						МассивСтрокСпортсмены.Добавить(СтруктураСтрокаСпортсмены);
						
						Если Сч <> 1 Тогда
							СтрокаФИ = Фамилия + " " + Имя;
							// Задаем требуемый падеж
							Падеж = 4;  
							// Получаем результат склонения
							СтрокаФИ = Объект.Просклонять(Строка(СтрокаФИ), Падеж, 0);
							СписокСтрокой = СписокСтрокой + СокрП(СтрокаФИ) + ", ";
							Сч = Сч - 1;
						Иначе
							СтрокаФИ = Фамилия + " " + Имя;
							// Задаем требуемый падеж
							Падеж = 4;  
							// Получаем результат склонения
							СтрокаФИ = Объект.Просклонять(Строка(СтрокаФИ), Падеж, 0);
							СписокСтрокой = СписокСтрокой + СокрП(СтрокаФИ);
							Сч = Сч - 1;
						КонецЕсли;
					Иначе
						ОбщегоНазначения.СообщитьПользователю("Состав группы пустой!");
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			СтруктураСписок.Вставить("СписокСпортсмены",СписокСтрокой);
			СтруктураШапкаТаблицы.Вставить("МассивСтрокСпортсмены",МассивСтрокСпортсмены);
			//МассивШапка.Добавить(СтруктураШапка);
			МассивШапкаТаблицы.Добавить(СтруктураШапкаТаблицы);
			// Подвал
			СтруктураПодвал = Новый Структура;
			// Заполение Областей документа Ворд
			СтруктураДокумента.Вставить("ОбластьШапка", СтруктураШапка);
			СтруктураДокумента.Вставить("ОбластьСписокСпортсмены", СтруктураСписок);
			СтруктураДокумента.Вставить("ОбластьШапкаТаблицы", МассивШапкаТаблицы);
			СтруктураДокумента.Вставить("ОбластьСтрокаТаблицыСпортсмены", МассивСтрокСпортсмены);
			СтруктураДокумента.Вставить("ОбластьПодвал",СтруктураПодвал);
					
			МассивДокументов.Добавить(СтруктураДокумента);
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивДокументов
	
КонецФункции

#КонецОбласти

#Область Печать
// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт 
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,"ПФ_MXL_ИсключениеИзКоманды") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
																	"ПФ_MXL_ИсключениеИзКоманды", // Идентфикатор
																	"Отчисление из группы", // Название (представление) 
								  СформироватьПечатнуюФормуПриказ(МассивОбъектов)); // Функция которая получает макет и его заполняет
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,"ПФ_MXL_СлужебнаяЗаписка") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
																	"ПФ_MXL_СлужебнаяЗаписка", // Идентфикатор
																	"Служебная записка", // Название (представление) 
								  СформироватьПечатнуюФормуСлужебнаяЗаписка(МассивОбъектов)); // Функция которая получает макет и его заполняет
		
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуПриказ(МассивОбъектовДляПечати) Экспорт  // Функция которая получает макет и заполняет его 
	
	Если ТипЗнч(МассивОбъектовДляПечати) = Тип("Массив") Тогда
		МассивОбъектов = МассивОбъектовДляПечати;
	Иначе
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(МассивОбъектовДляПечати);	
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсключениеСпортсменовИзГруппы.Ссылка КАК Ссылка,
		|	ИсключениеСпортсменовИзГруппы.Группа КАК Группа,
		|	ИсключениеСпортсменовИзГруппы.ТренерСборной КАК ТренерСборной,
		|	ИсключениеСпортсменовИзГруппы.Основание КАК Основание
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ИсключениеСпортсменовИзГруппы КАК ИсключениеСпортсменовИзГруппы
		|ГДЕ
		|	ИсключениеСпортсменовИзГруппы.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсключениеСпортсменовИзГруппыСпортсмены.Спортсмен КАК Спортсмен,
		|	ИсключениеСпортсменовИзГруппыСпортсмены.ДатаИсключенияИзГруппы КАК ДатаИсключенияИзГруппы,
		|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
		|	ВТ_Данные.Группа КАК Группа,
		|	ВТ_Данные.ТренерСборной КАК ТренерСборной,
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ВТ_Данные.Основание КАК Основание
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИсключениеСпортсменовИзГруппы.Спортсмены КАК ИсключениеСпортсменовИзГруппыСпортсмены
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|			ПО ИсключениеСпортсменовИзГруппыСпортсмены.Спортсмен.ФизическоеЛицо = ФизическиеЛица.Ссылка
		|		ПО ВТ_Данные.Ссылка = ИсключениеСпортсменовИзГруппыСпортсмены.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаИсключенияИзГруппы
		|ИТОГИ ПО
		|	Ссылка,
		|	ДатаИсключенияИзГруппы";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ПутьКМакету = "Документ.ИсключениеСпортсменовИзГруппы.ПФ_MXL_ИсключениеИзКоманды";
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету); // Получаем макет
	
	ТабДок = Новый ТабличныйДокумент;  // Создаем новый ТабДок
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСсылка
			// Область шапка
			ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка"); // Получаем области из макета
			ТабДок.Вывести(ОбластьШапка);
			
			НомерСтрокиСпр = 1;
			ВыборкаДатаИсключенияИзГруппы = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДатаИсключенияИзГруппы.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДатаИсключенияИзКоманды
				// Шапка перед таблицей
				ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы");
				ОбластьШапкаТаблицы.Параметры.ТренерСборной 				= ВыборкаДатаИсключенияИзГруппы.Ссылка.ТренерСборной;
				ОбластьШапкаТаблицы.Параметры.Группа 						= ВыборкаДатаИсключенияИзГруппы.Ссылка.Группа;
				ОбластьШапкаТаблицы.Параметры.ДатаИсключенияИзГруппы 		= Формат(ВыборкаДатаИсключенияИзГруппы.ДатаИсключенияИзКоманды,"ДЛФ=Д");
				ТабДок.Вывести(ОбластьШапкаТаблицы);
				
				//// Шапка таблицы спортсмены
				//ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы");
				//ТабДок.Вывести(ОбластьШапкаТаблицы);
				
				ВыборкаДетальныеЗаписи = ВыборкаДатаИсключенияИзГруппы.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спортсмен) Тогда
						// Таблица спортсмены
						ОбластьСтрокаТаблицыСпортсмены = Макет.ПолучитьОбласть("ОбластьСтрокаТаблицыСпортсмены");
						ОбластьСтрокаТаблицыСпортсмены.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
						ОбластьСтрокаТаблицыСпортсмены.Параметры.НомерСтроки 	= НомерСтрокиСпр;
						НомерСтрокиСпр 											= НомерСтрокиСпр +1;
						// Фамилия и Имя
						ЧастиИмени 												= СтрРазделить(ВыборкаДетальныеЗаписи.Спортсмен, " ", Ложь);
						Фамилия 												= ЧастиИмени[0];
						Имя 													= ЧастиИмени[1];
						ОбластьСтрокаТаблицыСпортсмены.Параметры.Спортсмен 		= Фамилия + " " + Имя;
						ОбластьСтрокаТаблицыСпортсмены.Параметры.ДатаРождения 	= Формат(ВыборкаДетальныеЗаписи.ДатаРождения,"ДЛФ=Д");
						ТабДок.Вывести(ОбластьСтрокаТаблицыСпортсмены);
					Иначе
						ОбщегоНазначения.СообщитьПользователю("Состав группы пустой!");
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			// Подвал
			ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
			ТабДок.Вывести(ОбластьПодвал);
			
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	КонецЕсли;
	
	ТабДок.КлючПараметровПечати	= ПутьКМакету;
	ТабДок.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб 			= Истина;
	
	Возврат ТабДок;
	
	
КонецФункции	

Функция СформироватьПечатнуюФормуСлужебнаяЗаписка(МассивОбъектовДляПечати) Экспорт  // Функция которая получает макет и заполняет его 
	
	Если ТипЗнч(МассивОбъектовДляПечати) = Тип("Массив") Тогда
		МассивОбъектов = МассивОбъектовДляПечати;	
	Иначе	
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(МассивОбъектовДляПечати);	
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсключениеСпортсменовИзГруппы.Ссылка КАК Ссылка,
		|	ИсключениеСпортсменовИзГруппы.Группа КАК Группа,
		|	ИсключениеСпортсменовИзГруппы.Организация КАК Организация,
		|	ИсключениеСпортсменовИзГруппы.ТренерСборной КАК ТренерСборной,
		|	ИсключениеСпортсменовИзГруппы.Организация.Директор КАК Директор
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ИсключениеСпортсменовИзГруппы КАК ИсключениеСпортсменовИзГруппы
		|ГДЕ
		|	ИсключениеСпортсменовИзГруппы.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсключениеСпортсменовИзГруппыСпортсмены.Ссылка КАК Ссылка,
		|	ИсключениеСпортсменовИзГруппыСпортсмены.Спортсмен КАК Спортсмен,
		|	ИсключениеСпортсменовИзГруппыСпортсмены.Спортсмен.ФизическоеЛицо.ДатаРождения КАК ДатаРождения
		|ПОМЕСТИТЬ ВТ_Спортсмены
		|ИЗ
		|	Документ.ИсключениеСпортсменовИзГруппы.Спортсмены КАК ИсключениеСпортсменовИзГруппыСпортсмены
		|ГДЕ
		|	ИсключениеСпортсменовИзГруппыСпортсмены.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ФизическиеЛицаКонтактнаяИнформация.Представление) КАК Адрес,
		|	ВТ_Спортсмены.Спортсмен КАК Спортсмен
		|ПОМЕСТИТЬ ВТ_Адрес
		|ИЗ
		|	ВТ_Спортсмены КАК ВТ_Спортсмены
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|		ПО ВТ_Спортсмены.Спортсмен.ФизическоеЛицо = ФизическиеЛицаКонтактнаяИнформация.Ссылка
		|ГДЕ
		|	ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(перечисление.типыконтактнойинформации.Адрес)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Спортсмены.Спортсмен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ВТ_Данные.Группа КАК Группа,
		|	ВТ_Данные.Организация КАК Организация,
		|	ВТ_Данные.ТренерСборной КАК ТренерСборной,
		|	ВТ_Данные.Директор КАК Директор,
		|	ВТ_Спортсмены.Спортсмен КАК Спортсмен,
		|	ВТ_Спортсмены.ДатаРождения КАК ДатаРождения,
		|	ВТ_Адрес.Адрес КАК Адрес
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные,
		|	ВТ_Спортсмены КАК ВТ_Спортсмены
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Адрес КАК ВТ_Адрес
		|		ПО ВТ_Спортсмены.Спортсмен = ВТ_Адрес.Спортсмен
		|ИТОГИ ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ПутьКМакету = "Документ.ИсключениеСпортсменовИзГруппы.ПФ_MXL_СлужебнаяЗаписка";
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету); // Получаем макет
	
	ТабДок = Новый ТабличныйДокумент;  // Создаем новый ТабДок
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			// Вставить обработку выборки ВыборкаСсылка
		    // Область шапка
			ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
			Директор = ВыборкаСсылка.Ссылка.Организация.Директор;    
			Попытка
				ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСклоненияФИО", "NameDecl" , ТипВнешнейКомпоненты.Native); 
				Объект = Новый("AddIn.NameDecl.CNameDecl");  
			Исключение
				ОбщегоНазначения.СообщитьПользователю("Не удалось подключить внешнюю компоненту по причине: " + ОписаниеОшибки());  
			КонецПопытки;

			СтрокаФИО = Директор;
			// Задаем требуемый падеж
			Падеж = 3;  
			// Получаем результат склонения
			Директор = Объект.Просклонять(Строка(СтрокаФИО), Падеж, 0);
			ОбластьШапка.Параметры.Директор 							= ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Директор);
			
			// Список спортсменов строкой
			СписокСтрокой = "";
			ОбластьСписокСпортсмены = Макет.ПолучитьОбласть("ОбластьСписокСпортсмены");
			ОбластьСписокСпортсмены.Параметры.Группа 					= ВыборкаСсылка.Ссылка.Группа;
			
			ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы");
			МассивШапкаТаблицы = Новый Массив;
			ОбластьШапкаТаблицы.Параметры.ТренерСборной 				= ВыборкаСсылка.Ссылка.ТренерСборной;
			МассивШапкаТаблицы.Добавить(ОбластьШапкаТаблицы);
			
			НомерСтрокиСпр = 1;
			ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать(); 
			Сч = ВыборкаДетальныеЗаписи.Количество();
			
			Пока Сч > 0 Цикл	
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спортсмен) Тогда
						// Таблица спортсмены
						ОбластьСтрокаТаблицыСпортсмены 							= Макет.ПолучитьОбласть("ОбластьСтрокаТаблицыСпортсмены");
						ОбластьСтрокаТаблицыСпортсмены.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
						ОбластьСтрокаТаблицыСпортсмены.Параметры.НомерСтроки 	= НомерСтрокиСпр;
						НомерСтрокиСпр 											= НомерСтрокиСпр +1;
						// Фамилия и Имя
						ЧастиИмени = СтрРазделить(ВыборкаДетальныеЗаписи.Спортсмен, " ", Ложь);
						Фамилия = ЧастиИмени[0];
						Имя = ЧастиИмени[1];
						ОбластьСтрокаТаблицыСпортсмены.Параметры.Спортсмен      = Фамилия + " " + Имя;
						ОбластьСтрокаТаблицыСпортсмены.Параметры.ДатаРождения 	= Формат(ВыборкаДетальныеЗаписи.ДатаРождения,"ДЛФ=Д");
						
						Если Сч <> 1 Тогда
							СтрокаФИ = Фамилия + " " + Имя;
							// Задаем требуемый падеж
							Падеж = 4;  
							// Получаем результат склонения
							СтрокаФИ = Объект.Просклонять(Строка(СтрокаФИ), Падеж, 0);
							СписокСтрокой = СписокСтрокой + СокрП(СтрокаФИ) + ", ";
							Сч = Сч - 1;
						Иначе
							СтрокаФИ = Фамилия + " " + Имя;
							// Задаем требуемый падеж
							Падеж = 4;  
							// Получаем результат склонения
							СтрокаФИ = Объект.Просклонять(Строка(СтрокаФИ), Падеж, 0);
							СписокСтрокой = СписокСтрокой + СокрП(СтрокаФИ);
							Сч = Сч - 1;
						КонецЕсли;
						МассивШапкаТаблицы.Добавить(ОбластьСтрокаТаблицыСпортсмены);
					Иначе
						ОбщегоНазначения.СообщитьПользователю("Состав группы пустой!");
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			ТабДок.Вывести(ОбластьШапка);
			ОбластьСписокСпортсмены.Параметры.СписокСпортсмены = СписокСтрокой;		
			ТабДок.Вывести(ОбластьСписокСпортсмены);
			
			Для каждого Строка Из МассивШапкаТаблицы Цикл
				ТабДок.Вывести(Строка);		
			КонецЦикла;
			// Подвал
			ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
			ТабДок.Вывести(ОбластьПодвал);
		
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	КонецЕсли;
	
	ТабДок.КлючПараметровПечати	= ПутьКМакету;
	ТабДок.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб 			= Истина;
	
	Возврат ТабДок;
	
КонецФункции

#КонецОбласти

#КонецОбласти

// - Адильбеков А.Б. 18.06.20 IN-6902 }