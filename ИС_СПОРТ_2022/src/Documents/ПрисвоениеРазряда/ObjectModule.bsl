// {Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	Если ОбменДанными.Загрузка Тогда
         Возврат;
    КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	УчетСпортсменовСервер.ЗаполнитьРеквизит(ЭтотОбъект, "Ответственный", ПараметрыСеанса.ТекущийПользователь);
    
    ПараметрыОписанияКраткогоСостава = СформироватьПараметрыПостроенияСтроки();
    СтрокаОписаниКраткогоСостава = УчетСпортсменовСервер.СформироватьСтрокуПоМассиву(ПараметрыОписанияКраткогоСостава);
    
    УчетСпортсменовСервер.ЗаполнитьРеквизит(ЭтотОбъект, "КраткийСоставСпортсмены", СтрокаОписаниКраткогоСостава);
    
    // {Рарус kotana #10067 -Контроль возраста спортсмена 2020.10.28
    
    //Запрос = Новый Запрос;              
    //	
    //Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());		
    //Запрос.УстановитьПараметр("Ссылка", Ссылка);
    //Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
    //               |	ПрисвоениеРазрядаСпортсмены.Спортсмен КАК Спортсмен,
    //               |	ПрисвоениеРазрядаСпортсмены.Разряд КАК Разряд
    //               |ПОМЕСТИТЬ ВТ_СпортсменРазряд
    //               |ИЗ
    //               |	Документ.ПрисвоениеРазряда.Спортсмены КАК ПрисвоениеРазрядаСпортсмены
    //               |ГДЕ
    //               |	ПрисвоениеРазрядаСпортсмены.Ссылка = &Ссылка
    //               |;
    //               |
    //               |////////////////////////////////////////////////////////////////////////////////
    //               |ВЫБРАТЬ
    //               |	РАЗНОСТЬДАТ(ФизическиеЛица.ДатаРождения, &ТекущаяДата, ГОД) КАК Возраст,
    //               |	СпортивнаяКлассификация.МинимальныйВозраст КАК МинимальныйВозраст,
    //               |	ВТ_СпортсменРазряд.Спортсмен КАК Спортсмен,
    //               |	СпортивнаяКлассификация.Ссылка КАК Разряд
    //               |ПОМЕСТИТЬ ВТ_РасчетВозраста
    //               |ИЗ
    //               |	ВТ_СпортсменРазряд КАК ВТ_СпортсменРазряд
    //               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпортивнаяКлассификация КАК СпортивнаяКлассификация
    //               |		ПО ВТ_СпортсменРазряд.Разряд = СпортивнаяКлассификация.Ссылка
    //               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спортсмены КАК Спортсмены
    //               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
    //               |			ПО Спортсмены.ФизическоеЛицо = ФизическиеЛица.Ссылка
    //               |		ПО ВТ_СпортсменРазряд.Спортсмен = Спортсмены.Ссылка
    //               |;
    //               |
    //               |////////////////////////////////////////////////////////////////////////////////
    //               |ВЫБРАТЬ
    //               |	ВТ_РасчетВозраста.Спортсмен КАК Спортсмен,
    //               |	ВТ_РасчетВозраста.МинимальныйВозраст КАК МинимальныйВозраст,
    //               |	ВТ_РасчетВозраста.Возраст КАК Возраст,
    //               |	ВТ_РасчетВозраста.Разряд КАК Разряд
    //               |ИЗ
    //               |	ВТ_РасчетВозраста КАК ВТ_РасчетВозраста
    //               |ГДЕ
    //               |	ВЫБОР
    //               |			КОГДА ЕСТЬNULL(ВТ_РасчетВозраста.МинимальныйВозраст, 0) > 0
    //               |				ТОГДА ВТ_РасчетВозраста.МинимальныйВозраст > ВТ_РасчетВозраста.Возраст
    //               |			ИНАЧЕ ЛОЖЬ
    //               |		КОНЕЦ";
    //              
    //                
    //РезультатЗапроса = Запрос.Выполнить();
    //
    //Если НЕ РезультатЗапроса.Пустой() Тогда
    //	
    //	Отказ = Истина;
    //	
    //	Выборка = РезультатЗапроса.Выбрать();
    //	Пока Выборка.Следующий() Цикл
    //		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
    //		НСтр("ru = 'Минимальный возраст присвоения разряда (звания) %1 лет.
    //		|Возраст спортсмена %2 - %3 лет.'"),
    //		Выборка.МинимальныйВозраст,
    //		Выборка.Спортсмен,
    //		Выборка.Возраст);
    //		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
    //	КонецЦикла;
    //	
    //КонецЕсли;
    //
    //Если Отказ Тогда
    //	Возврат
    //КонецЕсли;	
    
    // }Рарус kotana #10067 -Контроль возраста спортсмена 2020.10.28
    
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    
    // {Рарус kotana #10067 -Контроль возраста спортсмена 2020.10.28

    ПроверитьВозрастСпортсменов(Отказ);
    
    Если НЕ Отказ Тогда
    // }Рарус kotana #10067 -Контроль возраста спортсмена 2020.10.28
    
        ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
        
        ПроведениеСервер.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
        
        ПроведениеСервер.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ, "ПодтвержденныеРазрядыСпортсменов");
        
        Движения.Записать();
        
        ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
        
        ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
        
    // {Рарус kotana #10067 -Контроль возраста спортсмена 2020.10.28
    КонецЕсли; 

    // }Рарус kotana #10067 -Контроль возраста спортсмена 2020.10.28
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Движения.Записать();

	ПроведениеСервер.ВыполнитьКонтрольРезультатовОтменыПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// {Рарус kotana #10067 -Контроль возраста спортсмена 2020.10.28
Процедура ПроверитьВозрастСпортсменов(Отказ)

	Запрос = Новый Запрос;              
		
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПрисвоениеРазрядаСпортсмены.Спортсмен КАК Спортсмен,
	               |	ПрисвоениеРазрядаСпортсмены.Разряд КАК Разряд
	               |ПОМЕСТИТЬ ВТ_СпортсменРазряд
	               |ИЗ
	               |	Документ.ПрисвоениеРазряда.Спортсмены КАК ПрисвоениеРазрядаСпортсмены
	               |ГДЕ
	               |	ПрисвоениеРазрядаСпортсмены.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РАЗНОСТЬДАТ(ФизическиеЛица.ДатаРождения, &ТекущаяДата, ГОД) КАК Возраст,
	               |	СпортивнаяКлассификация.МинимальныйВозраст КАК МинимальныйВозраст,
	               |	ВТ_СпортсменРазряд.Спортсмен КАК Спортсмен,
	               |	СпортивнаяКлассификация.Ссылка КАК Разряд
	               |ПОМЕСТИТЬ ВТ_РасчетВозраста
	               |ИЗ
	               |	ВТ_СпортсменРазряд КАК ВТ_СпортсменРазряд
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпортивнаяКлассификация КАК СпортивнаяКлассификация
	               |		ПО ВТ_СпортсменРазряд.Разряд = СпортивнаяКлассификация.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спортсмены КАК Спортсмены
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |			ПО Спортсмены.ФизическоеЛицо = ФизическиеЛица.Ссылка
	               |		ПО ВТ_СпортсменРазряд.Спортсмен = Спортсмены.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_РасчетВозраста.Спортсмен КАК Спортсмен,
	               |	ВТ_РасчетВозраста.МинимальныйВозраст КАК МинимальныйВозраст,
	               |	ВТ_РасчетВозраста.Возраст КАК Возраст,
	               |	ВТ_РасчетВозраста.Разряд КАК Разряд
	               |ИЗ
	               |	ВТ_РасчетВозраста КАК ВТ_РасчетВозраста
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА ЕСТЬNULL(ВТ_РасчетВозраста.МинимальныйВозраст, 0) > 0
	               |				ТОГДА ВТ_РасчетВозраста.МинимальныйВозраст > ВТ_РасчетВозраста.Возраст
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ";
	              
	                
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Отказ = Истина;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Минимальный возраст присвоения разряда (звания) %1 лет.
			|Возраст спортсмена %2 - %3 лет.'"),
			Выборка.МинимальныйВозраст,
			Выборка.Спортсмен,
			Выборка.Возраст);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
		
	КонецЕсли;	

КонецПроцедуры // ПроверитьВозрастСпортсменов()

Функция СформироватьПараметрыПостроенияСтроки()

	   ТЗСпортсменов = Спортсмены.Выгрузить();
       ТЗСпортсменов.Свернуть("Спортсмен");
       ТЗСпортсменов.Сортировать("Спортсмен");
       
       СтруктураПараметров = Новый Структура;
       СтруктураПараметров.Вставить("МассивЗначений",ТЗСпортсменов.ВыгрузитьКолонку("Спортсмен"));
       СтруктураПараметров.Вставить("ОграниченнаяДлина",Истина);
       СтруктураПараметров.Вставить("ДлинаСтроки",1000);

       Возврат СтруктураПараметров;
       
КонецФункции
 
// }Рарус kotana #10067 -Контроль возраста спортсмена 2020.10.28

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли