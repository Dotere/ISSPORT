
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныйПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Отказ = Ложь;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка"			, ДокументСсылка);
	Запрос.УстановитьПараметр("Период"			, ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("Организация"		, ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("Тренер"   		, ДокументСсылка.Тренер);
	Запрос.УстановитьПараметр("Этап"        	, ДокументСсылка.Этап); 
	Запрос.УстановитьПараметр("Дни"        		, 1);
	Запрос.УстановитьПараметр("Ответственный"  	, ДокументСсылка.Ответственный);
	Запрос.Текст =  "ВЫБРАТЬ
	                |	""ДанныеТабельногоУчетаПосещенийСпортсменов"" КАК ИмяРегистра_,
					|	&Период КАК Период,
	                |	&Организация КАК Организация,
	                |	&Тренер КАК Тренер,
	                |	&Этап КАК Этап,
	                |	ТабельПосещенияТаблицаПосещений.Период КАК ПериодРегистрации,
	                |	ТабельПосещенияТаблицаПосещений.Спортсмен КАК Спортсмен,
	                |	ТабельПосещенияТаблицаПосещений.СтатусПосещения КАК СтатусПосещения,
	                |	&Ответственный КАК Ответственный,
	                |	&Дни КАК Дни
	                |ИЗ
	                |	Документ.ТабельПосещения.ТаблицаПосещений КАК ТабельПосещенияТаблицаПосещений
	                |ГДЕ
	                |	ТабельПосещенияТаблицаПосещений.Ссылка = &Ссылка";
	
	ТаблицаДанныеТабельногоУчетаПосещенийСпортсменов = Запрос.Выполнить().Выгрузить();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаДанныеТабельногоУчетаПосещенийСпортсменов", ТаблицаДанныеТабельногоУчетаПосещенийСпортсменов);
	
	ДополнительныеСвойства.Вставить("Отказ", Отказ);
	
КонецПроцедуры	

Процедура ВыполнитьКонтрольРезультатовПроведения(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ТабельПосещения.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКонтрольПередПроведением(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ТабельПосещения.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКонтрольРезультатовОтменыПроведения(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.ТабельПосещения.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт 
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ЛистЖурналаПосещений") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
																	"ПФ_MXL_ЛистЖурналаПосещений", // Идентфикатор
																	"Лист журнала посещений", // Название (представление) 
								  									СформироватьПечатнуюФормуЛистЖурналаПосещений(МассивОбъектов)); // Функция которая получает макет и его заполняет
	КонецЕсли;	
	  
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуЛистЖурналаПосещений(МассивОбъектовДляПечати) Экспорт  // Функция которая получает макет и заполняет его 
	
	Если ТипЗнч(МассивОбъектовДляПечати) = Тип("Массив") Тогда
		
		МассивОбъектов = МассивОбъектовДляПечати;
		
	Иначе
		
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(МассивОбъектовДляПечати);
		
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабельПосещения.Ссылка КАК Ссылка,
		|	ТабельПосещения.Тренер КАК Тренер,
		|	ТабельПосещения.Этап КАК Этап,
		|	ТабельПосещения.ПериодРегистрации КАК ПериодРегистрации,
		|	ТабельПосещенияТаблицаПосещений.Спортсмен КАК Спортсмен,
		|	ТабельПосещенияТаблицаПосещений.Период КАК Период,
		|	ТабельПосещенияТаблицаПосещений.СтатусПосещения КАК СтатусПосещения
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ТабельПосещения КАК ТабельПосещения
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТабельПосещения.ТаблицаПосещений КАК ТабельПосещенияТаблицаПосещений
		|		ПО (ТабельПосещенияТаблицаПосещений.Ссылка = ТабельПосещения.Ссылка)
		|ГДЕ
		|	ТабельПосещения.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ВТ_Данные.Тренер КАК Тренер,
		|	ВТ_Данные.Этап КАК Этап,
		|	ВТ_Данные.ПериодРегистрации КАК ПериодРегистрации,
		|	ВТ_Данные.Спортсмен КАК Спортсмен,
		|	ВТ_Данные.Период КАК Период,
		|	ВТ_Данные.СтатусПосещения КАК СтатусПосещения
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Период,
		|	ВТ_Данные.Спортсмен.Наименование
		|ИТОГИ ПО
		|	Ссылка,
		|	Период,
		|	Спортсмен";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ПутьКМакету = "Документ.ТабельПосещения.ПФ_MXL_ЛистЖурналаПосещений";
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету); // Получаем макет
	
	ТабДок = Новый ТабличныйДокумент;  // Создаем новый ТабДок
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 	
		
	ГраницаТаблицы = 18; 
	Пока ВыборкаСсылка.Следующий() Цикл
		
		ВыборкаШирина = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ОбщееКолКолонок = ВыборкаШирина.Количество();
		
		СтруктураРазмеров = Новый Структура;
		СтруктураРазмеров.Вставить("ТекШирина", 0);  
		СтруктураРазмеров.Вставить("ТекГраница", 0);
		СтруктураРазмеров.Вставить("НачСтрОбъединМесяц", 4);
		СтруктураРазмеров.Вставить("КонСтрОбъединМесяц", 4);
		ТекГраницаОбщая = 0;
		
		Пока ТекГраницаОбщая < ОбщееКолКолонок Цикл 
			
			СтруктураРазмеров = ЗаполнитьТаблицуДанными(ВыборкаСсылка, ТабДок, Макет, МассивОбъектов, СтруктураРазмеров);
			ТекГраницаОбщая = СтруктураРазмеров.ТекГраница;
			
		КонецЦикла;
		
	КонецЦикла;				
		
	ТабДок.КлючПараметровПечати	= ПутьКМакету;
	ТабДок.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб 			= Истина;
	
	Возврат ТабДок;
	
КонецФункции

Функция ЗаполнитьТаблицуДанными(ВыборкаСсылка, ТабДок, Макет, МассивОбъектов, СтруктураРазмеров)
	
	Если СтруктураРазмеров.ТекГраница < 18 Тогда
	
		ОбластьШапкаНачало = Макет.ПолучитьОбласть("ОбластьШапкаТренер");
		ОбластьШапкаНачало.Параметры.Тренер = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаСсылка.Ссылка.Тренер.ФизическоеЛицо);
		ТабДок.Вывести(ОбластьШапкаНачало);
		
		ОбластьШапкаНачало = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьНачало");
		ТабДок.Вывести(ОбластьШапкаНачало);
		
	Иначе
		
		ОбластьШапкаНачало = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьНачало");
		ТабДок.Вывести(ОбластьШапкаНачало);	
		
	КонецЕсли;	
		
	ВыборкаПериод = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	     
	ТекГраница = СтруктураРазмеров.ТекГраница + 18;
	ТекШирина =	СтруктураРазмеров.ТекШирина;
	ТекущийЭлемент = 0;
	НачКол = 6;
	КонКол = 6;
		
	Пока ВыборкаПериод.Следующий() Цикл	
                 
		Если ТекШирина <= ТекГраница И ТекущийЭлемент >= СтруктураРазмеров.ТекШирина Тогда
			ОбластьКолонка = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьКолонка");
			ОбластьКолонка.Параметры.ДатаЗанятий = Формат(ВыборкаПериод.Период, "ДФ=dd.MM"); 
			ОбластьКолонка.Параметры.Время = Формат(ВыборкаПериод.Период, "ДФ=ЧЧ:мм"); 
			ТабДок.Присоединить(ОбластьКолонка);
			ТекШирина = ТекШирина + 1;
			
			ОбластьОбъедин = ТабДок.Область(СтруктураРазмеров.НачСтрОбъединМесяц, НачКол, СтруктураРазмеров.КонСтрОбъединМесяц, КонКол);
			ОбластьОбъедин.Объединить();
			ОбластьОбъедин.Текст = Формат(ВыборкаПериод.Ссылка.ПериодРегистрации, "ДФ=ММММ");
			ОбластьОбъедин.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
			КонКол = КонКол + 1;
		Иначе
			ТекущийЭлемент = ТекущийЭлемент + 1;
			Продолжить;	
		КонецЕсли;
		
	КонецЦикла;	
	
	ОбластьШапкаКонец = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьКонец");
	ТабДок.Присоединить(ОбластьШапкаКонец);	
	
	ВыборкаСпортсмен = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Спортсмен");
	
	НомерСтрокиСпр = 1;	
	
	Пока ВыборкаСпортсмен.Следующий() Цикл
		
		ОбластьСтрДанныеНачало = Макет.ПолучитьОбласть("ОбластьНачало|ОбластьСтрДанные");
		ОбластьСтрДанныеНачало.Параметры.НомерСтроки = НомерСтрокиСпр;
		НомерСтрокиСпр = НомерСтрокиСпр + 1;
		ОбластьСтрДанныеНачало.Параметры.Спортсмен = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаСпортсмен.Спортсмен.ФизическоеЛицо);
		ОбластьСтрДанныеНачало.Параметры.Этап = ВыборкаСпортсмен.Ссылка.Этап;
		ТабДок.Вывести(ОбластьСтрДанныеНачало);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабельПосещения.Ссылка КАК Ссылка,
		|	ТабельПосещения.Тренер КАК Тренер,
		|	ТабельПосещения.Этап КАК Этап,
		|	ТабельПосещения.ПериодРегистрации КАК ПериодРегистрации,
		|	ТабельПосещенияТаблицаПосещений.Спортсмен КАК Спортсмен,
		|	ТабельПосещенияТаблицаПосещений.Период КАК Период,
		|	ТабельПосещенияТаблицаПосещений.СтатусПосещения КАК СтатусПосещения
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ТабельПосещения КАК ТабельПосещения
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТабельПосещения.ТаблицаПосещений КАК ТабельПосещенияТаблицаПосещений
		|		ПО (ТабельПосещенияТаблицаПосещений.Ссылка = ТабельПосещения.Ссылка)
		|ГДЕ
		|	ТабельПосещения.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Ссылка КАК Ссылка,
		|	ВТ_Данные.Тренер КАК Тренер,
		|	ВТ_Данные.Этап КАК Этап,
		|	ВТ_Данные.ПериодРегистрации КАК ПериодРегистрации,
		|	ВТ_Данные.Спортсмен КАК Спортсмен,
		|	ВТ_Данные.Период КАК Период,
		|	ВТ_Данные.СтатусПосещения КАК СтатусПосещения
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|ГДЕ
		|	ВТ_Данные.Спортсмен = &Спортсмен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период,
		|	ВТ_Данные.Спортсмен.Наименование";
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		Запрос.УстановитьПараметр("Спортсмен", ВыборкаСпортсмен.Спортсмен);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ВсегоПосещений = 0;
		ПоУваж = 0;
		ПоНеУваж = 0;
		
		ТекГраница = СтруктураРазмеров.ТекГраница + 18;
		ТекШирина =	СтруктураРазмеров.ТекШирина;
		ТекущийЭлемент = 0;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если ТекШирина <= ТекГраница И ТекущийЭлемент >= СтруктураРазмеров.ТекШирина Тогда
			
				СтрокаСтатус = Макет.ПолучитьОбласть("ОбластьСтрДанные|ОбластьКолонка");	
				СтрокаСтатус.Параметры.СтатусПосещения = ВыборкаДетальныеЗаписи.СтатусПосещения;
				
				Если ВыборкаДетальныеЗаписи.СтатусПосещения = Перечисления.СтатусыПосещений.П
					ИЛИ ВыборкаДетальныеЗаписи.СтатусПосещения = Перечисления.СтатусыПосещений.О Тогда
					ВсегоПосещений = ВсегоПосещений + 1;
				ИначеЕсли ВыборкаДетальныеЗаписи.СтатусПосещения = Перечисления.СтатусыПосещений.У Тогда 
					ПоУваж = ПоУваж + 1;
				ИначеЕсли ВыборкаДетальныеЗаписи.СтатусПосещения = Перечисления.СтатусыПосещений.Н Тогда 
					ПоНеУваж = ПоНеУваж + 1;
				КонецЕсли;	
				
				ТабДок.Присоединить(СтрокаСтатус);
				ТекШирина = ТекШирина + 1;
				 
			Иначе
				ТекущийЭлемент = ТекущийЭлемент + 1;	
				Продолжить;	
			КонецЕсли;
			
		КонецЦикла; 
			
		СтрокаКонец = Макет.ПолучитьОбласть("ОбластьСтрДанные|ОбластьКонец");
		СтрокаКонец.Параметры.ПоУваж = ?(ПоУваж = 0, "-", ПоУваж);
		СтрокаКонец.Параметры.ПоНеУваж = ?(ПоНеУваж = 0, "-", ПоНеУваж);
		СтрокаКонец.Параметры.ВсегоПосещений = ?(ВсегоПосещений = 0, "-", ВсегоПосещений);	
		
		ТабДок.Присоединить(СтрокаКонец);
		
		СтруктураРазмеров.НачСтрОбъединМесяц = СтруктураРазмеров.НачСтрОбъединМесяц + 1;
		СтруктураРазмеров.КонСтрОбъединМесяц = СтруктураРазмеров.КонСтрОбъединМесяц + 1;
		
	КонецЦикла;
	
	СтруктураРазмеров.Вставить("ТекШирина", ТекШирина);
	СтруктураРазмеров.Вставить("ТекГраница", ТекГраница); 
	СтруктураРазмеров.НачСтрОбъединМесяц = СтруктураРазмеров.НачСтрОбъединМесяц + 4;
	СтруктураРазмеров.КонСтрОбъединМесяц = СтруктураРазмеров.КонСтрОбъединМесяц + 4;
	
	Возврат СтруктураРазмеров;

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли