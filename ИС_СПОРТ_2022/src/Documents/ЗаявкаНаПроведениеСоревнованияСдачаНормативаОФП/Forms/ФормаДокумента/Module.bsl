#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// {Рарус adilas #23059 -РС Руководитель. Карточка спортсмена.Карточка тренера. 2021.12.13
	// {Рарус dotere #21842 -В методите поле ответственный недоступно 2020.11.06
	Если РольДоступна("ПолныеПрава") Тогда
		 Элементы.Ответственный.Доступность = Истина;
	Иначе 	 
		 Элементы.Ответственный.Доступность = Ложь;
	КонецЕсли;
	// }Рарус dotere #21842 -В методите поле ответственный недоступно 2020.11.06
	// }Рарус adilas #23059 -РС Руководитель. Карточка спортсмена.Карточка тренера. 2021.12.13
	
	Если Параметры.Свойство("БлокироватьОсновныеРеквизиты") Тогда
		
		ЗаполнитьЗначенияСвойств(Объект,Параметры);
		УчетСпортсменовСервер.ЗаполнитьНастройкиПоУмолчанию(Объект);
		
		Для Каждого НормативОтбор Из Параметры.СписокНормативов Цикл
			
			строкаНорматив = Объект.ЗаявленныеНормативы.Добавить();
			строкаНорматив.Норматив = НормативОтбор;
			строкаНорматив.УникальныйИдентификаторНорматива = СтрЗаменить(Новый УникальныйИдентификатор(),"-","_");
			
			Для Каждого строкаСпортсменОтбор Из Параметры.СписокСпортсменов Цикл
				строкаСпортсменОбъект           = Объект.СоставУчастников.Добавить();
				ЗаполнитьЗначенияСвойств(строкаСпортсменОбъект,строкаСпортсменОтбор);
				строкаСпортсменОбъект.УникальныйИдентификаторНорматива = строкаНорматив.УникальныйИдентификаторНорматива;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли; 
	
	ПроведениеСоревнованийФормыСервер.СформироватьСтруктуруНормативовНаФорме(ЭтотОбъект);
	
	Если НЕ Объект.Ссылка.Пустая() ИЛИ Параметры.Свойство("БлокироватьОсновныеРеквизиты") Тогда
		ЗаполнитьДополнительныеДанныеНаФорме(,Ложь);
	ИначеЕсли НЕ Параметры.Свойство("БлокироватьОсновныеРеквизиты") Тогда	
		УчетСпортсменовСервер.ЗаполнитьНастройкиПоУмолчанию(Объект);
		Если Параметры.Свойство("ТипСоревнования") Тогда
			Объект.ТипСоревнования = Параметры.ТипСоревнования;
		КонецЕсли;	
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		УчетСпортсменовСервер.ЗаполнитьНастройкиПоУмолчанию(Объект);
		УправлениеУчебнымГодомСсылка = УчетСпортсменовСервер.ПолучитьДокументТекущегоУчебногоГода();
	    Объект.УчебныйГод = УправлениеУчебнымГодомСсылка.УчебныйГод;
	Иначе
		УчетСпортсменовСервер.ЗаполнитьДокументУчебныйГод(ЭтотОбъект, Объект.УчебныйГод, Объект.Организация);
	КонецЕсли;
	
	// {Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	//
	Если НЕ УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).СтрахованиеСпортсменовОрганизация Тогда
		Элементы.СоставУчастниковСтраховойПолис.Видимость 				 = Ложь;
	КонецЕсли;
	
	// }Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	
	// {Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.18
	Если НЕ УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).ВозрастныеГруппыОрганизация Тогда
		Элементы.СоставУчастниковМеждународнаяВозрастнаяГруппа.Видимость = Ложь;	
	КонецЕсли;
	
	// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.18
	
	// {Рарус adilas #13392 -Номер документа 2021.02.12
	Если Пользователи.РолиДоступны("АдминистраторСистемы, ПолныеПрава") Тогда
		Элементы.Номер.Доступность = Истина;
		Элементы.Номер.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	// }Рарус adilas #13392 -Номер документа 2021.02.12
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПроведениеСоревнованийФормыКлиент.СформироватьЗаголовокФормыДокумента(ЭтотОбъект, "ЗаявкаНаПроведениеСоревнованияСдачаНормативаОФП");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.ЗаявкаНаПроведениеСоревнования.Форма.ФормаЗаполненияПоГруппам" Тогда
		
		массивСтрокДляЗаполнения = Новый Массив;
		
		Для Каждого ВыбранныйУчастник Из ВыбранноеЗначение Цикл
			строкиТабличнойЧасти = СоставУчастниковНаФорме.НайтиСтроки(Новый Структура("Спортсмен",ВыбранныйУчастник));
			Если НЕ строкиТабличнойЧасти.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;	
			строкаУчастник = СоставУчастниковНаФорме.Добавить();
			строкаУчастник.Спортсмен   = ВыбранныйУчастник;
			строкаУчастник.НомерСтроки = СоставУчастниковНаФорме.Количество();
			массивСтрокДляЗаполнения.Добавить(строкаУчастник.НомерСтроки-1);
		КонецЦикла;
		
		Если Не массивСтрокДляЗаполнения.Количество()= 0 Тогда
			
			// {Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
			Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).ВозрастныеГруппыОрганизация Тогда
		    	ЗаполнитьДополнительныеДанныеНаФорме(, , массивСтрокДляЗаполнения);
			Иначе
				ЗаполнитьДополнительныеДанныеНаФорме(, Ложь, массивСтрокДляЗаполнения);
			КонецЕсли;
			
			// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
			
			ЗаполнитьПустыеНормативыНаСервере();
		КонецЕсли;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.Нормативы.Форма.ФормаВыбора" Тогда
		
	    ДобавитьНормативВГотовуюТаблицуНаФорму(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// {Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
	ПеренестиСтруктуруНормативовВТаблицуДокументаНаСервере(Отказ);
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	ПроводитьБезПроверкиНаВозраст = Модифицированность;
	
	Если НЕ ПроверитьЗаполнение()Тогда
		Возврат;
	КонецЕсли;
	Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).ВозрастныеГруппыОрганизация Тогда
		Для Каждого строкаСоставУчастников Из Объект.СоставУчастников Цикл
			Если НЕ ЗначениеЗаполнено(строкаСоставУчастников.МеждународнаяВозрастнаяГруппа) Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'У спортсмена %1 не указана возрастная группа'"),
				строкаСоставУчастников.Спортсмен);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.СоставУчастников[" + СокрЛП((строкаСоставУчастников.НомерСтроки-1)) +"].Спортсмен");	
				Отказ = Истина;
			КонецЕсли;	
		КонецЦикла;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение И ПроводитьБезПроверкиНаВозраст Тогда
		
		ПроведениеСоревнованийФормыКлиент.ПроверитьСоответствиеВозрастнойГруппыСпортсменаПередЗаписью(ЭтотОбъект,Отказ);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПроводитьБезПроверкиНаВозраст = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовШапки

&НаКлиенте
Процедура УчебныйГодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ Объект.СоставУчастников.Количество() = 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("УчебныйГодПриИзмененииЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Очистить табличную часть?",
		РежимДиалогаВопрос.ДаНет,
		0);
		
		Возврат;
		
	Иначе
		
		УчетСпортсменовКлиент.УчебныйГодНачалоВыбора(ЭтотОбъект,СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодОткрытие(Элемент, СтандартнаяОбработка)
	УчетСпортсменовКлиент.УчебныйГодОткрытие(УправлениеУчебнымГодомСсылка,СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодСоздание(Элемент, СтандартнаяОбработка)
	УчетСпортсменовКлиент.УчебныйГодСоздание(ЭтаФорма, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТипСоревнованияПриИзменении(Элемент)
	
	ПроведениеСоревнованийФормыКлиент.СформироватьЗаголовокФормыДокумента(ЭтотОбъект, "ЗаявкаНаПроведениеСоревнованияСдачаНормативаОФП");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧасти

&НаКлиенте
Процедура СоставУчастниковСпортсменПриИзменении(Элемент)
	
	ТекДанные = Элементы.СоставУчастников.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Спортсмен) Тогда
		
		// {Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
		Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).ВозрастныеГруппыОрганизация Тогда
			ЗаполнитьДополнительныеДанныеНаФорме(ТекДанные.НомерСтроки-1);
		Иначе
			ЗаполнитьДополнительныеДанныеНаФорме(ТекДанные.НомерСтроки-1, Ложь);
		КонецЕсли;
		
		// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.25
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставУчастниковДопускОткрытие(Элемент, СтандартнаяОбработка)
	
	ПроведениеСоревнованийФормыКлиент.ЭлементФормыОткрытие(ЭтотОбъект, СтандартнаяОбработка, "ДопускРегистратор", "СоставУчастниковДопускОткрытиеОтвет");
	
КонецПроцедуры

&НаКлиенте
Процедура СоставУчастниковСтраховойПолисОткрытие(Элемент, СтандартнаяОбработка)
	
	ПроведениеСоревнованийФормыКлиент.ЭлементФормыОткрытие(ЭтотОбъект, СтандартнаяОбработка, "СтраховойПолисРегистратор", "СоставУчастниковСтаховойПолисОткрытиеОтвет");
	
КонецПроцедуры

&НаКлиенте                                                                         
Процедура СоставУчастниковПриИзменении(Элемент)
	
	ПроведениеСоревнованийФормыКлиент.ПронумероватьТаблицуНаФорме(СоставУчастниковНаФорме);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ЗаполнитьПоГруппам(Команда)
	
	Если НЕ ЭтотОбъект.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
		
	СтруктураПараметров = Новый Структура("УчебныйГод, Организация, ТекущаяДата, Тренер, ВидСпорта",
	    Объект.УчебныйГод, Объект.Организация, Объект.Дата, Объект.Тренер, Объект.ВидСпорта);;
		
	ОткрытьФорму("Документ.ЗаявкаНаПроведениеСоревнования.Форма.ФормаЗаполненияПоГруппам",Новый Структура("СтруктураПараметров",СтруктураПараметров),ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьНорматив(Команда) Экспорт
	
	ПараметрыПодбора = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора, МножественныйВыбор", Ложь, Истина, Истина);
	ОткрытьФорму("Справочник.Нормативы.ФормаВыбора",ПараметрыПодбора,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьНорматив(Команда) Экспорт
	
	КомандаУдалитьНормативНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыделитьВсе(Команда) Экспорт
	
	ПроведениеСоревнованийФормыКлиент.ВыделитьВсехУчастниковНаФорме(ЭтотОбъект, "таблицаДляРазбора", "УникальныйИдентификаторНорматива");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьВсе(Команда) Экспорт
	
	ПроведениеСоревнованийФормыКлиент.УбратьВыделениеВсехУчастниковНаФорме(ЭтотОбъект, "таблицаДляРазбора", "УникальныйИдентификаторНорматива");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеДополнительныхДанныхНаФорме

&НаСервере
Процедура ЗаполнитьДополнительныеДанныеНаФорме(НомерСтроки = Неопределено, ЗаполнятьВозрастнуюГруппу = Истина, МассивСтрокДляЗаполнения = Неопределено)
	
	СтруктураПараметровЗапроса = Новый Структура("СоставУчастников, УчебныйГод, ДатаПроведения, ВидСпорта, Организация", 
	     ПроведениеСоревнованийФормыСервер.ПроиндексироватьТаблицуДокумента(ЭтотОбъект,"СоставУчастниковНаФорме"), Объект.УчебныйГод, Объект.Дата, Объект.ВидСпорта, Объект.Организация);
		 
	Выборка = ПроведениеСоревнованийСлужебныйСервер.ЗаполнитьДополнительныеДанныеНаФорме(СтруктураПараметровЗапроса,НомерСтроки);
	
	ПроверятьНаСтроки = ?(МассивСтрокДляЗаполнения = Неопределено, Ложь, Истина);
		
	Пока Выборка.Следующий() Цикл
		
		Если ПроверятьНаСтроки Тогда
			Если МассивСтрокДляЗаполнения.Найти(Выборка.Индекс) = Неопределено Тогда
				Продолжить;
			КонецЕсли;	
		КонецЕсли;	
		
		строкаОбъект = СоставУчастниковНаФорме[Выборка.Индекс];
		ЗаполнитьЗначенияСвойств(строкаОбъект,Выборка,,?(ЗаполнятьВозрастнуюГруппу,"","МеждународнаяВозрастнаяГруппа"));
		Если Выборка.Допуск = "ДОПУЩЕН" Тогда
			строкаОбъект.Допуск = Выборка.Допуск + " (действует до " + Формат(Выборка.ДействуетДо,"ДЛФ=Д") + ")";
		ИначеЕсли Выборка.Допуск = "НЕ ДОПУЩЕН" И Выборка.ДействуетДо <= Объект.Дата И Выборка.ДействуетДо <> Дата(1,1,1) Тогда
			строкаОбъект.Допуск = "ПРОСРОЧЕН!" + " (действует до " + Формат(Выборка.ДействуетДо,"ДЛФ=Д") + ")";
		КонецЕсли;
		
		// {Рарус adilas #11071 -Ведение страховых полисов спортсмнов 2020.11.25
		Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(Объект.Организация).СтрахованиеСпортсменовОрганизация Тогда
			Если Выборка.СтраховойПолисРегистратор = Документы.СтраховойПолисСпортсмена.ПустаяСсылка() Тогда
				строкаОбъект.СтраховойПолис = "НЕ ВВЕДЕН";
			ИначеЕсли Выборка.ДатаОкончания <= Объект.Дата Тогда
				строкаОбъект.СтраховойПолис = "ПРОСРОЧЕН! " + СокрЛП(Выборка.СтраховаяКомпания) + "; № " + СокрЛП(Выборка.НомерСтраховогоПолиса) + " период действия " 
				   + Формат(Выборка.ДатаНачала, "ДЛФ=Д") + "-" + Формат(Выборка.ДатаОкончания, "ДЛФ=Д");
			Иначе
				строкаОбъект.СтраховойПолис = СокрЛП(Выборка.СтраховаяКомпания) + "; № " + СокрЛП(Выборка.НомерСтраховогоПолиса) + " период действия " 
				   + Формат(Выборка.ДатаНачала, "ДЛФ=Д") + "-" + Формат(Выборка.ДатаОкончания, "ДЛФ=Д");   
			   КонецЕсли;
		КонецЕсли;
		// }Рарус adilas #11071 -Ведение страховых полисов спортсмнов 2020.11.25
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьПустыеНормативыНаСервере()
	
	ПроведениеСоревнованийФормыСервер.ЗаполнитьПолученнуюСтруктураИзОбъекта(ЭтотОбъект, ТаблицаДляРазбора.Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаНормативовНаФорме

&НаСервере
Процедура ДобавитьНормативВГотовуюТаблицуНаФорму(ВыбранноеЗначение)
	
	ПроведениеСоревнованийФормыСервер.ДобавитьНормативВГотовуюТаблицуНаФорму(ЭтотОбъект, ВыбранноеЗначение);
	
КонецПроцедуры	

&НаСервере
Процедура КомандаУдалитьНормативНаСервере()
	
	ПроведениеСоревнованийФормыСервер.УдалитьКолонкуНормативаСФормы(ЭтотОбъект);
	
КонецПроцедуры	

&НаСервере
Процедура ПеренестиСтруктуруНормативовВТаблицуДокументаНаСервере(Отказ)
	
	ПроведениеСоревнованийФормыСервер.ПеренестиСтруктуруНормативовВТаблицуДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиОписаниеОповещения

&НаКлиенте
Процедура СоставУчастниковДопускОткрытиеОтвет(Результат, ДопПараметры) Экспорт
	
	ДопускРегистратор = ДопПараметры.ДопускРегистратор;
	Спортсмен         = ДопПараметры.Спортсмен;
	НомерСтроки       = ДопПараметры.НомерСтроки;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоказатьЗначение(,ДопускРегистратор);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Оповещение = Новый ОписаниеОповещения("СоставУчастниковОткрытиеОтветЗавершение",ЭтотОбъект, Новый Структура("НомерСтроки",НомерСтроки));
		ОткрытьФорму("Документ.ДопускиУчастниковКСпортивнымСоревнованиям.Форма.ФормаДокумента", Новый Структура("Спортсмен",Спортсмен),,,,,Оповещение);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоставУчастниковОткрытиеОтветЗавершение(Результат, ДопПараметры) Экспорт
	
    ЗаполнитьДополнительныеДанныеНаФорме(ДопПараметры.НомерСтроки-1,Ложь);	
	
КонецПроцедуры

&НаКлиенте
Процедура СоставУчастниковСтаховойПолисОткрытиеОтвет(Результат, ДопПараметры) Экспорт
	
	СтраховойПолисРегистратор = ДопПараметры.СтраховойПолисРегистратор;
	Спортсмен                 = ДопПараметры.Спортсмен;
	НомерСтроки               = ДопПараметры.НомерСтроки;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоказатьЗначение(,СтраховойПолисРегистратор);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Оповещение = Новый ОписаниеОповещения("СоставУчастниковОткрытиеОтветЗавершение",ЭтотОбъект, Новый Структура("НомерСтроки",НомерСтроки));
		ОткрытьФорму("Документ.СтраховойПолисСпортсмена.Форма.ФормаДокумента", Новый Структура("Спортсмен",Спортсмен),,,,,Оповещение);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаУчебногоГода

&НаКлиенте
Процедура УчебныйГодПриИзмененииЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОчиститьТабличнуюЧастьНаСервере();
		УчетСпортсменовКлиент.УчебныйГодНачалоВыбора(ЭтотОбъект,Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТабличнуюЧастьНаСервере()
	Объект.СоставУчастников.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодСозданиеЗавершение(Результат, ДопПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
	   Объект.УчебныйГод = Результат.УчебныйГодСсылка;
	   УправлениеУчебнымГодомСсылка = Результат.УчебныйГодОбъект;
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура УчебныйГодНачалоВыбораЗавершение(Результат, ДопПараметры) Экспорт
	
	УправлениеУчебнымГодомСсылка = Результат;
    ПолучитьУчебныйГодСсылка();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьУчебныйГодСсылка()
	Объект.УчебныйГод = УправлениеУчебнымГодомСсылка.УчебныйГод;
КонецПроцедуры

#КонецОбласти

#КонецОбласти