
#Область ОписаниеПеременных
// СтандартныеПодсистемы

// Хранилище глобальных переменных.
//
// ПараметрыПриложения - Соответствие - хранилище переменных, где:
//   * Ключ - Строка - имя переменной в формате "ИмяБиблиотеки.ИмяПеременной";
//   * Значение - Произвольный - значение переменной.
//
// Инициализация (на примере СообщенияДляЖурналаРегистрации):
//   ИмяПараметра = "СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации";
//   Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
//     ПараметрыПриложения.Вставить(ИмяПараметра, Новый СписокЗначений);
//   КонецЕсли;
//  
// Использование (на примере СообщенияДляЖурналаРегистрации):
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"].Добавить(...);
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"] = ...;
Перем ПараметрыПриложения Экспорт;

// Конец СтандартныеПодсистемы


// ПодключаемоеОборудование
Перем глПодключаемоеОборудование Экспорт; // для кэширования на клиенте
// Конец ПодключаемоеОборудование

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередНачаломРаботыСистемы()
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПередНачаломРаботыСистемы();
	// Конец СтандартныеПодсистемы
	
	// {Рарус adilas #22219 -Функциональные опции 2021.11.09
	СтрОрганиз = Новый Структура;
	СтрОрганиз.Вставить("ПараметрОрганизация", УчетСпортсменовВызовСервера.ТекущаяОрганизация());
		
	УстановитьПараметрыФункциональныхОпцийИнтерфейса(СтрОрганиз);
	// }Рарус adilas #22219 -Функциональные опции 2021.11.09
	
	// {Рарус dotere #22114 -Включает и отключает напоминания при запуске 2021.11.25
	НапоминанияВключены = УчетСпортсменовВызовСервера.ТекущаяОрганизацияНапоминания(); 
	Если НапоминанияВключены И ЗначениеЗаполнено(УчетСпортсменовВызовСервера.ТекущаяОрганизация()) Тогда
		ПодключитьОбработчикОжидания("ПроверитьТекущиеНапоминания", 60, Истина);
		НапоминаниеДляПользователя.КонстантаНапомининя(Истина);
	Иначе
		НапоминанияПользователяКлиент.Выключить();
		НапоминаниеДляПользователя.КонстантаНапомининя(Ложь);
	КонецЕсли;
	
	// {Рарус adilas #20613 -РС Руководитель. Напоминания 2021.09.21
	// Проверяем если запуск выполнен с доступом к роли Руководитель, то напоминания отключаем.
	//НапоминанияДляРуководителяНаСервере();
	// }Рарус adilas #20613 -РС Руководитель. Напоминания 2021.09.21
	// }Рарус dotere #22114 -Включает и отключает напоминания при запуске 2021.11.25	
		
КонецПроцедуры


Процедура ПриНачалеРаботыСистемы()
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПриНачалеРаботыСистемы();
	// Конец СтандартныеПодсистемы  
	// {Рарус dotere #22114 -Включает и отключает напоминания при запуске 2021.11.12

	// }Рарус dotere #22114 -Включает и отключает напоминания при запуске  2021.11.12
	Если УчетСпортсменовВызовСервера.ОткрытьФормуРабочегоСтола() Тогда
		ОткрытьФорму("Обработка.РабочийСтолТренера.Форма.Форма");
        
    ИначеЕсли УчетСпортсменовВызовСервера.ОткрытьФормуРабочегоСтолаРуководителя() Тогда
		ОткрытьФорму("Обработка.РабочийСтолРуководитель.Форма.Форма");
        
	ИначеЕсли УчетСпортсменовВызовСервера.ОткрытьФормуРабочегоСтолаМетодиста() Тогда
		ОткрытьФорму("Обработка.РабочийСтолМетодист.Форма.Форма");	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения)
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения);
	// Конец СтандартныеПодсистемы
		
КонецПроцедуры

Процедура ОбработкаВнешнегоСобытия(Источник, Событие, Данные)

	// ПодключаемоеОборудование
	// Подготовить данные
	
	ОписаниеСобытия = Новый Структура();
	ОписаниеОшибки  = "";
	
	ОписаниеСобытия.Вставить("Источник", Источник);
	ОписаниеСобытия.Вставить("Событие",  Событие);
	ОписаниеСобытия.Вставить("Данные",   Данные);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НапоминанияДляРуководителяНаСервере()	
	 
	Если НЕ УчетСпортсменовВызовСервера.ЭтоРуководитель() Тогда
		ПодключитьОбработчикОжидания("ПроверитьТекущиеНапоминания", 60, Истина);
	Иначе
		НапоминанияПользователяКлиент.Выключить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти