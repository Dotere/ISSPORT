
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	ТекущаяДата = ТекущаяДатаСеанса();
	ОтображаемаяДата = ТекущаяДатаСеанса();
	
	// {Рарус adilas #16226 -Электронный журнал посещений 2021.06.11
	ПараметрыСписка = Новый Структура;
	// {Рарус ivaart IN-19390 Определение параметров для руководителей 2021.08.27
	Если Параметры.Свойство("Организация") тогда
		Организация = Параметры.Организация;
	// {Рарус adilas #21537 -Расписание спортивного объекта 2021.10.19	
	ИначеЕсли РольДоступна("Руководитель") ИЛИ РольДоступна("ПолныеПрава") Тогда	
		Организация = Неопределено;	
	// }Рарус adilas #21537 -Расписание спортивного объекта 2021.10.19	
	Иначе
		Организация = ПараметрыСеанса.ТекущаяОрганизация;
	КонецЕсли;
	// }Рарус ivaart IN-19390 Определение параметров для руководителей 2021.08.27
	ПараметрыСписка.Вставить("Организация", Организация);
	Если Параметры.Свойство("Тренер") Тогда
		ПараметрыСписка.Вставить("Тренер", Параметры.Тренер);
	ИначеЕсли Параметры.Свойство("СпортивныйОбъект") Тогда
		ПараметрыСписка.Вставить("СпортивныйОбъект", Параметры.СпортивныйОбъект);
	КонецЕсли;
	
	СформироватьСписокСпортивныхОбъектов(ПараметрыСписка);
	КалендарьПриСозданииНаСервере();
	// }Рарус adilas #16226 -Электронный журнал посещений 2021.06.11
	
	ЭтоТренер = БронированиеПомещений.ЭтоТренер();
	ЭтоРуководитель = БронированиеПомещений.ЭтоРуководитель();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВариантРасписания = ПредопределенноеЗначение("Перечисление.ВариантРасписания.ПоМестам");
	ПериодОтображения = ПредопределенноеЗначение("Перечисление.ПериодОтображенияРабочегоКалендаря.Неделя");
	
	ОтображаемаяДатаНачала = НачалоНедели(ОтображаемаяДата);
	ОтображаемаяДатаОкончания  = КонецНедели(ОтображаемаяДата);
	Планировщик.ТекущиеПериодыОтображения.Добавить(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
	ФонПланировщика = Планировщик.ИнтервалыФона.Добавить(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
	ФонПланировщика.Цвет = WebЦвета.Белый;
		
	Заголовок = НСтр("ru='Расписание занятий на период с '") + ПредставлениеПериода(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
	
	// {Рарус adilas #16226 -Электронный журнал посещений 2021.06.04
	Элементы.ГруппаДневнойКалендарь.Видимость = Ложь;
	ОбновитьОтображение();
	ОбновитьОтображениеКалендаря();
	
	Если ЭтоТренер Тогда
		Элементы.СпортивныйОбъект.КнопкаОткрытия = Ложь;
	КонецЕсли;
	// }Рарус adilas #16226 -Электронный журнал посещений 2021.06.04
	// {Рарус adilas #20230 -РС Методиста. Печатная форма. Расписание 2021.09.21
	УстановитьВидимостьКомандПечати();
   	// }Рарус adilas #20230 -РС Методиста. Печатная форма. Расписание 2021.09.21
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НастройкиПросмотраБроней"
		Или ИмяСобытия = "Запись_Бронь" Тогда
		ОбновитьОтображениеКлиент();
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_ТерриторииИПомещения"
		Или ИмяСобытия = "Запись_ОтображаемыеТерритории" Тогда
		ОбновитьОтображениеКлиент();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантРасписанияПриИзменении(Элемент)
	
	Состояние(НСтр("ru='Выполняется операция, пожалуйста подождите'"),,, БиблиотекаКартинок.СпортЗагрузка);

	ОбновитьОтображениеКлиент();
			
	Состояние(НСтр("ru='Операция выполнена'"),,, БиблиотекаКартинок.СпортЗагрузка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображаемаяДатаПриИзменении(Элемент)
	
	// Отображение дня
	ОтображаемаяДатаНачала = НачалоДня(ОтображаемаяДата);
	ОтображаемаяДатаОкончания = КонецДня(ОтображаемаяДата);
	
	ПериодОтображения = ПредопределенноеЗначение("Перечисление.ПериодОтображенияРабочегоКалендаря.День");
	
	УстановитьОтображаемуюДату(ОтображаемаяДата);
	
	ПриИзмененииОтображаемойДаты();
	
КонецПроцедуры

// {Рарус adilas #16226 -Электронный журнал посещений 2021.05.21
&НаКлиенте
Процедура СпортивныйОбъектОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	//ОбновитьОтображение();
	
КонецПроцедуры

&НаКлиенте
Процедура СпортивныйОбъектПриИзменении(Элемент)
	
	ОбновитьОтображение();
	
КонецПроцедуры
// }Рарус adilas #16226 -Электронный журнал посещений 2021.05.21

#КонецОбласти

#Область ОбработчикиСобытийЭлементовПланировщика

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, Значения, Текст, СтандартнаяОбработка)
	
	Если ЭтоТренер ИЛИ ЭтоРуководитель Тогда
		
		СтандартнаяОбработка = Ложь;		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Разрешен только просмотр!'"));
		
	Иначе
		
		// {Рарус adilas #21523 -РС Методиста. Ошибка при формировании расписания 2021.10.20
		Если Значения.Количество() = 0 Тогда
			СтандартнаяОбработка = Ложь;
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Чтобы создать расписание, закрепите тренера за спортивным объектом.'"));	
		    Возврат;
		КонецЕсли;
		// }Рарус adilas #21523 -РС Методиста. Ошибка при формировании расписания 2021.10.20
		БронированиеПомещенийКлиент.ОбработкаПередСозданием(Элемент, Начало, Конец, Значения, Текст, СтандартнаяОбработка, ПолучитьОрганизацию(), СпортивныйОбъект);
		
	КонецЕсли;
	                            
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикВыбор(Элемент, СтандартнаяОбработка)
	
	Если (НЕ ЭтоТренер) И (НЕ ЭтоРуководитель) Тогда
		БронированиеПомещенийКлиент.ОбработкаВыбораЭлемента(Элемент, СтандартнаяОбработка, ЭтоТренер);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
	
	Если ЭтоТренер ИЛИ ЭтоРуководитель Тогда
		ОтменаРедактирования = Истина;	
	Иначе	
	   	БронированиеПомещенийКлиент.ОбработкаОкончанияРедактированияЭлемента(Элемент, НовыйЭлемент, ОтменаРедактирования, ВариантРасписания); 
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПланировщикПередНачаломРедактирования(Элемент, НовыйЭлемент, СтандартнаяОбработка)
		
	Если (НЕ ЭтоТренер) И (НЕ ЭтоРуководитель) Тогда
		ЭтоМетодист = Истина;	
	Иначе	
	   	ЭтоМетодист = Ложь; 
	КонецЕсли;
	
	БронированиеПомещенийКлиент.ОбработкаПередНачаломРедактированиемЭлемента(Элемент, НовыйЭлемент, СтандартнаяОбработка, ВариантРасписания, ЭтоМетодист);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередУдалением(Элемент, Отказ) Экспорт
	     
	Если ЭтоТренер ИЛИ ЭтоРуководитель Тогда
		Отказ = Истина;
	Иначе
		БронированиеПомещенийКлиент.ОбработкаПередУдалениемЭлемента(Элемент, Отказ);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломБыстрогоРедактирования(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтобразитьПредыдущийПериод(Команда)
	
	НоваяОтображаемаяДата = РаботаСРабочимКалендаремКлиентСервер.ПолучитьДатуНачалаПредыдущегоПериода(
		ПериодОтображения, ОтображаемаяДата);
	УстановитьОтображаемуюДату(НоваяОтображаемаяДата);
		
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСледующийПериод(Команда)
		
	НоваяОтображаемаяДата = РаботаСРабочимКалендаремКлиентСервер.ПолучитьДатуНачалаСледующегоПериода(
		ПериодОтображения, ОтображаемаяДата);
	УстановитьОтображаемуюДату(НоваяОтображаемаяДата);
	
КонецПроцедуры	

&НаКлиенте
Процедура КомандаПоказатьСкрыть(Команда)
	
	Если Элементы.ГруппаКалендарь.Видимость Тогда
		Элементы.КнопкаПоказатьСкрыть.Заголовок = ">";
		Элементы.ГруппаКалендарь.Видимость = Ложь;
		Элементы.СпортивныйОбъект.Видимость = Ложь;
		Элементы.ГруппаВерхняя.Видимость = Ложь;
		Элементы.ГруппаПериодов.Видимость = Ложь;
		Элементы.ГруппаДневнойКалендарь.Видимость = Ложь;
	Иначе
		Элементы.КнопкаПоказатьСкрыть.Заголовок = "<";
		Элементы.ГруппаКалендарь.Видимость = Истина;
		
		Если ПериодОтображения = ПредопределенноеЗначение("Перечисление.ПериодОтображенияРабочегоКалендаря.День") Тогда
			Элементы.ГруппаДневнойКалендарь.Видимость = Истина;
			Элементы.СпортивныйОбъект.Видимость = Истина;
		Иначе
			Элементы.ГруппаВерхняя.Видимость = Истина;
			Элементы.ГруппаПериодов.Видимость = Истина;
			Элементы.ГруппаДневнойКалендарь.Видимость = Ложь;
			Элементы.СпортивныйОбъект.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// {Рарус adilas #20230 -РС Методиста. Печатная форма. Расписание 2021.10.07
// Расписание в печатном виде, через команду, с использованием БСП
&НаКлиенте
Процедура ПечатьСводноеРасписание(Команда)
	
	Тренер = Неопределено;
	
    ТабДок = СформироватьТабДокНаСервере(Тренер);
	
	//Создаём новую коллекцию печатных форм
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ПФ_MXL_Расписание");
	
	//Добавляем в коллекцию сформированный табличный документ
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
	
	//Устанавливаем параметры печати (при необходимости)
	КоллекцияПечатныхФорм[0].Экземпляров = 1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "Расписание групповых тренировочных занятий";  //Так будет выглядеть имя файла при сохранении в файл из формы "Печать документов"
	
	//Вывод через стандартную процедуру БСП
 	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Неопределено, ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПоТренеру(Команда)
	
	Если НЕ ЭтоТренер Тогда
	
		СписокТренеров = СформироватьСписокЗначенийТренеров();
		
		ОповещениеПослеВыбораТренера = Новый ОписаниеОповещения("ПослеВыбораТренера", ЭтотОбъект);
		СписокТренеров.ПоказатьВыборЭлемента(ОповещениеПослеВыбораТренера, НСтр("ru = 'Выберите тренера для печати его расписания'"));
		
	Иначе
		
		Тренер = Неопределено;
		ТабДок = СформироватьТабДокНаСервере(Тренер);
		
		//Создаём новую коллекцию печатных форм
		КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ПФ_MXL_Расписание");
		
		//Добавляем в коллекцию сформированный табличный документ
		КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
		
		//Устанавливаем параметры печати (при необходимости)
		КоллекцияПечатныхФорм[0].Экземпляров = 1;
		КоллекцияПечатныхФорм[0].СинонимМакета = "Расписание групповых тренировочных занятий";  //Так будет выглядеть имя файла при сохранении в файл из формы "Печать документов"
		
		//Вывод через стандартную процедуру БСП
		УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Неопределено, ЭтаФорма);

	КонецЕсли;				 
	
КонецПроцедуры
// }Рарус adilas #20230 -РС Методиста. Печатная форма. Расписание 2021.10.07

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НастройкиПланировщика

// Постоянное сохранение заданного периода при прокрутке
&НаКлиенте
Процедура ПланировщикПриСменеТекущегоПериодаОтображения(Элемент, ТекущиеПериодыОтображения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтображенияПриИзменении()

	Планировщик.ТекущиеПериодыОтображения.Очистить();
	
	Если ПериодОтображения = ПредопределенноеЗначение("Перечисление.ПериодОтображенияРабочегоКалендаря.День") Тогда
		// Отображение дня
		ОтображаемаяДатаНачала = НачалоДня(ОтображаемаяДата);
		ОтображаемаяДатаОкончания = КонецДня(ОтображаемаяДата);

		Планировщик.ТекущиеПериодыОтображения.Добавить(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
		ФонПланировщика = Планировщик.ИнтервалыФона.Добавить(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
		ФонПланировщика.Цвет = WebЦвета.Белый;
		
		Заголовок = "Расписание занятий на " + ПредставлениеПериода(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
		
		// {Рарус adilas #16226 -Электронный журнал посещений 2021.05.21
		Элементы.ГруппаДневнойКалендарь.Видимость = Истина;
		Элементы.ГруппаВерхняя.Видимость = Ложь;
		Элементы.ГруппаПериодов.Видимость = Ложь;
		ВыбираемыйПериод = ОтображаемаяДата;
		ОбновитьОтображениеКалендаря();
		ПриИзмененииОтображаемойДаты();
		// }Рарус adilas #16226 -Электронный журнал посещений 2021.05.21
	ИначеЕсли ПериодОтображения = ПредопределенноеЗначение("Перечисление.ПериодОтображенияРабочегоКалендаря.Неделя") Тогда	
		// Отображение недели
		ОтображаемаяДатаНачала = НачалоНедели(ОтображаемаяДата);
		ОтображаемаяДатаОкончания  = КонецНедели(ОтображаемаяДата);
		Планировщик.ТекущиеПериодыОтображения.Добавить(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
		ФонПланировщика = Планировщик.ИнтервалыФона.Добавить(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
		ФонПланировщика.Цвет = WebЦвета.Белый;
		
		Заголовок = "Расписание занятий на период с " + ПредставлениеПериода(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
		// {Рарус adilas #16226 -Электронный журнал посещений 2021.05.21
		Элементы.ГруппаДневнойКалендарь.Видимость = Ложь;
		Элементы.ГруппаВерхняя.Видимость = Истина;
		Элементы.ГруппаПериодов.Видимость = Истина;
		ВыбираемыйПериод = ОтображаемаяДата;
		ОбновитьОтображениеКалендаря();
		ПриИзмененииОтображаемойДаты();
		// }Рарус adilas #16226 -Электронный журнал посещений 2021.05.21	
	ИначеЕсли ПериодОтображения = ПредопределенноеЗначение("Перечисление.ПериодОтображенияРабочегоКалендаря.Месяц") Тогда
		
		// Отображение месяца
		ОтображаемаяДатаНачала = НачалоМесяца(ОтображаемаяДата);
		ОтображаемаяДатаОкончания  = КонецМесяца(ОтображаемаяДата);
		Планировщик.ТекущиеПериодыОтображения.Добавить(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
		ФонПланировщика = Планировщик.ИнтервалыФона.Добавить(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
		ФонПланировщика.Цвет = WebЦвета.Белый;
		
		Заголовок = "Расписание занятий на " + ПредставлениеПериода(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания);
		// {Рарус adilas #16226 -Электронный журнал посещений 2021.05.21
		Элементы.ГруппаДневнойКалендарь.Видимость = Ложь;
		Элементы.ГруппаВерхняя.Видимость = Истина;
		Элементы.ГруппаПериодов.Видимость = Истина;
		ВыбираемыйПериод = ОтображаемаяДата;
		ОбновитьОтображениеКалендаря();
		ПриИзмененииОтображаемойДаты();
		// }Рарус adilas #16226 -Электронный журнал посещений 2021.05.21	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ПолучитьОрганизацию()Экспорт

	Организация = ПараметрыСеанса.ТекущаяОрганизация;
	
	Возврат Организация;
	
КонецФункции	

&НаСервере
Процедура ОбновитьОтображение()

	ПараметрыБрони = БронированиеПомещенийКлиентСервер.ПолучитьПараметрыБрони();
	ПараметрыБрони.Дата = ОтображаемаяДата;
	ПараметрыБрони.ВремяНачала = ОтображаемаяДатаНачала;
	ПараметрыБрони.ВремяОкончания = ОтображаемаяДатаОкончания;
	ПараметрыБрони.ВариантРасписания = ВариантРасписания;
	ПараметрыБрони.СпортивныйОбъект = СпортивныйОбъект;
	
	БронированиеПомещений.ОтобразитьПланировщикБроней(Планировщик, ПараметрыБрони);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеКлиент()

	Если ВариантРасписания = ПредопределенноеЗначение("Перечисление.ВариантРасписания.ПоМестам") Тогда 
		
		ОбновитьОтображение();
		
	ИначеЕсли ВариантРасписания = ПредопределенноеЗначение("Перечисление.ВариантРасписания.Общее") Тогда
		
		ОбновитьОтображение();
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтображаемуюДату(НоваяОтображаемаяДата)
	
	ОтображаемаяДата = НоваяОтображаемаяДата;
	ПериодОтображенияПриИзменении();
	ОбновитьОтображениеКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииОтображаемойДаты()
		
	ОбновитьОтображениеКлиент();
	
КонецПроцедуры

// {Рарус adilas #20230 -РС Методиста. Печатная форма. Расписание 2021.10.07
// Расписание в печатном виде, через команду, с использованием БСП
&НаСервере
Функция СформироватьТабДокНаСервере(Тренер)
	
	Если ЭтоТренер Тогда	
		Тренер = ПараметрыСеанса.ТекущийТренер;	
	КонецЕсли;	
	
	ОтображаемыеБрони = БронированиеПомещений.ПолучитьОтображаемыеБрони(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания, СпортивныйОбъект);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	
	Макет = ПолучитьОбщийМакет("ПФ_MXL_Расписание");
	
    // Описание даты с уточнением через квалификатор: храниться только дата, без времени
    КвалификаторыДаты = Новый КвалификаторыДаты(ЧастиДаты.Дата);
	
	ТаблицаЗначениейПромежуточногоИтога = Новый ТаблицаЗначений;
	ТаблицаЗначениейПромежуточногоИтога.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ДокументСсылка.БроньСпортивногоОбъекта"));
	ТаблицаЗначениейПромежуточногоИтога.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата", , , КвалификаторыДаты));
	ТаблицаЗначениейПромежуточногоИтога.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата", , , КвалификаторыДаты));
	ТаблицаЗначениейПромежуточногоИтога.Колонки.Добавить("Тренер", Новый ОписаниеТипов("СправочникСсылка.Тренеры"));
	ТаблицаЗначениейПромежуточногоИтога.Колонки.Добавить("ВидСпорта", Новый ОписаниеТипов("СправочникСсылка.ВидыСпорта"));
	ТаблицаЗначениейПромежуточногоИтога.Колонки.Добавить("Этап", Новый ОписаниеТипов("СправочникСсылка.ЭтапыСпортивнойПодготовки"));
	ТаблицаЗначениейПромежуточногоИтога.Колонки.Добавить("МестоПроведения", Новый ОписаниеТипов("СправочникСсылка.МестаЗанятий"));
	ТаблицаЗначениейПромежуточногоИтога.Колонки.Добавить("КоличествоЗанимающихся", Новый ОписаниеТипов("Число"));
	ТаблицаЗначениейПромежуточногоИтога.Колонки.Добавить("ДеньНедели", Новый ОписаниеТипов("Число"));
	ТаблицаЗначениейПромежуточногоИтога.Колонки.Добавить("ФорматДняНедели", Новый ОписаниеТипов("Строка"));
	ТаблицаЗначениейПромежуточногоИтога.Колонки.Добавить("КоличествоЧасов", Новый ОписаниеТипов("Число"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтображаемыеБрони.Ссылка КАК Ссылка,
		|	ОтображаемыеБрони.ДатаНачала КАК ДатаНачала,
		|	ОтображаемыеБрони.ДатаОкончания КАК ДатаОкончания,
		|	ОтображаемыеБрони.ВесьДень КАК ВесьДень,
		|	ОтображаемыеБрони.ТипЗаписи КАК ТипЗаписи,
		|	ОтображаемыеБрони.Тренер КАК Тренер,
		|	ОтображаемыеБрони.ВидСпорта КАК ВидСпорта,
		|	ОтображаемыеБрони.Этап КАК Этап,
		|	ОтображаемыеБрони.СпортивныйОбъект КАК СпортивныйОбъект,
		|	ОтображаемыеБрони.МестоЗанятия КАК МестоЗанятия,
		|	ОтображаемыеБрони.ПометкаУдаления КАК ПометкаУдаления
		|ПОМЕСТИТЬ ОтображаемыеБрони
		|ИЗ
		|	&ОтображаемыеБрони КАК ОтображаемыеБрони
		|%1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен,
		|	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Организация КАК Организация,
		|	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта
		|ПОМЕСТИТЬ ВТ_СоставУчащихся
		|ИЗ
		|	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И Спортсмен.СтатусСпортсмена <> ЗНАЧЕНИЕ(Перечисление.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения)) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
		|ГДЕ
		|	(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения > &Период
		|			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен) КАК КоличествоЗанимающихся,
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап,
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта,
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер
		|ПОМЕСТИТЬ ВТ_Этапы
		|ИЗ
		|	ОтображаемыеБрони КАК ОтображаемыеБрони
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(
		|				&Период,
		|				Спортсмен В
		|						(ВЫБРАТЬ
		|							ВТ_СоставУчащихся.Спортсмен КАК Спортсмен
		|						ИЗ
		|							ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)
		|					И Этап <> ЗНАЧЕНИЕ(Справочник.ЭтапыСпортивнойПодготовки.ПустаяСсылка)
		|					И Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
		|		ПО ОтображаемыеБрони.Этап = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап
		|			И ОтображаемыеБрони.Тренер = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер
		|			И ОтображаемыеБрони.ВидСпорта = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап,
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта,
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КоличествоЗанимающихся
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтображаемыеБрони.Ссылка КАК Ссылка,
		|	ОтображаемыеБрони.ДатаНачала КАК ДатаНачала,
		|	ОтображаемыеБрони.ДатаОкончания КАК ДатаОкончания,
		|	ОтображаемыеБрони.ВесьДень КАК ВесьДень,
		|	ОтображаемыеБрони.ТипЗаписи КАК ТипЗаписи,
		|	ОтображаемыеБрони.Тренер КАК Тренер,
		|	ОтображаемыеБрони.ВидСпорта КАК ВидСпорта,
		|	ЕСТЬNULL(ОтображаемыеБрони.Этап, ""-"") КАК Этап,
		|	ОтображаемыеБрони.СпортивныйОбъект КАК СпортивныйОбъект,
		|	ЕСТЬNULL(ОтображаемыеБрони.МестоЗанятия, ""-"") КАК МестоПроведения,
		|	ОтображаемыеБрони.ПометкаУдаления КАК ПометкаУдаления,
		|	ЕСТЬNULL(ВТ_Этапы.КоличествоЗанимающихся, 0) КАК КоличествоЗанимающихся,
		|	ДЕНЬНЕДЕЛИ(ОтображаемыеБрони.ДатаНачала) КАК ДеньНедели
		|ПОМЕСТИТЬ ВТ_ПромИтог
		|ИЗ
		|	ОтображаемыеБрони КАК ОтображаемыеБрони
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Этапы КАК ВТ_Этапы
		|		ПО ОтображаемыеБрони.Этап = ВТ_Этапы.Этап
		|			И ОтображаемыеБрони.ВидСпорта = ВТ_Этапы.ВидСпорта
		|			И ОтображаемыеБрони.Тренер = ВТ_Этапы.Тренер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПромИтог.Ссылка КАК Ссылка,
		|	ВТ_ПромИтог.ДатаНачала КАК ДатаНачала,
		|	ВТ_ПромИтог.ДатаОкончания КАК ДатаОкончания,
		|	ВТ_ПромИтог.ВесьДень КАК ВесьДень,
		|	ВТ_ПромИтог.ТипЗаписи КАК ТипЗаписи,
		|	ВТ_ПромИтог.Тренер КАК Тренер,
		|	ВТ_ПромИтог.ВидСпорта КАК ВидСпорта,
		|	ВТ_ПромИтог.Этап КАК Этап,
		|	ВТ_ПромИтог.СпортивныйОбъект КАК СпортивныйОбъект,
		|	ВТ_ПромИтог.МестоПроведения КАК МестоПроведения,
		|	ВТ_ПромИтог.ПометкаУдаления КАК ПометкаУдаления,
		|	ВТ_ПромИтог.КоличествоЗанимающихся КАК КоличествоЗанимающихся,
		|	ВТ_ПромИтог.ДеньНедели КАК ДеньНедели
		|ИЗ
		|	ВТ_ПромИтог КАК ВТ_ПромИтог
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаНачала";
	
	Если Тренер <> Неопределено Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", "ГДЕ
			|	ОтображаемыеБрони.Тренер = &Тренер");
	
		Запрос.УстановитьПараметр("Тренер", Тренер);	
	Иначе	
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", "");		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", ПараметрыСеанса.ТекущаяОрганизация);
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ОтображаемыеБрони", ОтображаемыеБрони);
	
	РезультатЗапроса = Запрос.Выполнить(); 
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	// Цикл по заполнению таблицы промежуточного итога с отформатированными датами и посчитанным количеством часов
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ОбщеКоличествоСекунд = 0;
		
		СтрокаТЗ = ТаблицаЗначениейПромежуточногоИтога.Добавить();
		СтрокаТЗ.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
		СтрокаТЗ.ДатаНачала = ВыборкаДетальныеЗаписи.ДатаНачала;
		СтрокаТЗ.ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;
		СтрокаТЗ.Тренер = ВыборкаДетальныеЗаписи.Тренер;
		СтрокаТЗ.ВидСпорта = ВыборкаДетальныеЗаписи.ВидСпорта;
		СтрокаТЗ.Этап = ВыборкаДетальныеЗаписи.Этап;
		СтрокаТЗ.МестоПроведения = ВыборкаДетальныеЗаписи.МестоПроведения;
		СтрокаТЗ.КоличествоЗанимающихся = ВыборкаДетальныеЗаписи.КоличествоЗанимающихся;	
		
		Если ВыборкаДетальныеЗаписи.ДеньНедели = 1 Тогда
			
			СтрокаТЗ.ДеньНедели = ВыборкаДетальныеЗаписи.ДеньНедели;
			СтрокаТЗ.ФорматДняНедели = СтрШаблон("%1-%2", Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ=ЧЧ.мм"), Формат(ВыборкаДетальныеЗаписи.ДатаОкончания, "ДФ=ЧЧ.мм"));	
			ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;
			
			Если Минута(ВыборкаДетальныеЗаписи.ДатаОкончания) = 59 Тогда	 
				ДатаОкончания = ДатаОкончания + 1;	
			КонецЕсли;
			
			КоличествоСекунд = ДатаОкончания - ВыборкаДетальныеЗаписи.ДатаНачала;				
			ОбщеКоличествоСекунд = ОбщеКоличествоСекунд + КоличествоСекунд;
			
		ИначеЕсли ВыборкаДетальныеЗаписи.ДеньНедели = 2 Тогда
			
			СтрокаТЗ.ДеньНедели = ВыборкаДетальныеЗаписи.ДеньНедели;
			СтрокаТЗ.ФорматДняНедели = СтрШаблон("%1-%2", Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ=ЧЧ.мм"), Формат(ВыборкаДетальныеЗаписи.ДатаОкончания, "ДФ=ЧЧ.мм"));
			ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;
			
			Если Минута(ВыборкаДетальныеЗаписи.ДатаОкончания) = 59 Тогда	 
				ДатаОкончания = ДатаОкончания + 1;	
			КонецЕсли;
			
			КоличествоСекунд = ДатаОкончания - ВыборкаДетальныеЗаписи.ДатаНачала;				
			ОбщеКоличествоСекунд = ОбщеКоличествоСекунд + КоличествоСекунд;
			
		ИначеЕсли ВыборкаДетальныеЗаписи.ДеньНедели = 3 Тогда
			
			СтрокаТЗ.ДеньНедели = ВыборкаДетальныеЗаписи.ДеньНедели;
			СтрокаТЗ.ФорматДняНедели = СтрШаблон("%1-%2", Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ=ЧЧ.мм"), Формат(ВыборкаДетальныеЗаписи.ДатаОкончания, "ДФ=ЧЧ.мм"));
            ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;
			
			Если Минута(ВыборкаДетальныеЗаписи.ДатаОкончания) = 59 Тогда	 
				ДатаОкончания = ДатаОкончания + 1;	
			КонецЕсли;
			
			КоличествоСекунд = ДатаОкончания - ВыборкаДетальныеЗаписи.ДатаНачала;				
			ОбщеКоличествоСекунд = ОбщеКоличествоСекунд + КоличествоСекунд;
			
		ИначеЕсли ВыборкаДетальныеЗаписи.ДеньНедели = 4 Тогда
			
			СтрокаТЗ.ДеньНедели = ВыборкаДетальныеЗаписи.ДеньНедели;
			СтрокаТЗ.ФорматДняНедели = СтрШаблон("%1-%2", Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ=ЧЧ.мм"), Формат(ВыборкаДетальныеЗаписи.ДатаОкончания, "ДФ=ЧЧ.мм"));
			ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;
			
			Если Минута(ВыборкаДетальныеЗаписи.ДатаОкончания) = 59 Тогда 
				ДатаОкончания = ДатаОкончания + 1;	
			КонецЕсли;
			
			КоличествоСекунд = ДатаОкончания - ВыборкаДетальныеЗаписи.ДатаНачала;				
			ОбщеКоличествоСекунд = ОбщеКоличествоСекунд + КоличествоСекунд;
			
		ИначеЕсли ВыборкаДетальныеЗаписи.ДеньНедели = 5 Тогда
			
			СтрокаТЗ.ДеньНедели = ВыборкаДетальныеЗаписи.ДеньНедели;
			СтрокаТЗ.ФорматДняНедели = СтрШаблон("%1-%2", Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ=ЧЧ.мм"), Формат(ВыборкаДетальныеЗаписи.ДатаОкончания, "ДФ=ЧЧ.мм"));
			ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;
			
			Если Минута(ВыборкаДетальныеЗаписи.ДатаОкончания) = 59 Тогда	 
				ДатаОкончания = ДатаОкончания + 1;	
			КонецЕсли;
			
			КоличествоСекунд = ДатаОкончания - ВыборкаДетальныеЗаписи.ДатаНачала;				
			ОбщеКоличествоСекунд = ОбщеКоличествоСекунд + КоличествоСекунд;
			
		ИначеЕсли ВыборкаДетальныеЗаписи.ДеньНедели = 6 Тогда
			
			СтрокаТЗ.ДеньНедели = ВыборкаДетальныеЗаписи.ДеньНедели;
			СтрокаТЗ.ФорматДняНедели = СтрШаблон("%1-%2", Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ=ЧЧ.мм"), Формат(ВыборкаДетальныеЗаписи.ДатаОкончания, "ДФ=ЧЧ.мм"));
			ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;
			
			Если Минута(ВыборкаДетальныеЗаписи.ДатаОкончания) = 59 Тогда	 
				ДатаОкончания = ДатаОкончания + 1;	
			КонецЕсли;
			
			КоличествоСекунд = ДатаОкончания - ВыборкаДетальныеЗаписи.ДатаНачала;				
			ОбщеКоличествоСекунд = ОбщеКоличествоСекунд + КоличествоСекунд;
			
		ИначеЕсли ВыборкаДетальныеЗаписи.ДеньНедели = 7 Тогда
			
			СтрокаТЗ.ДеньНедели = ВыборкаДетальныеЗаписи.ДеньНедели;
			СтрокаТЗ.ФорматДняНедели = СтрШаблон("%1-%2", Формат(ВыборкаДетальныеЗаписи.ДатаНачала, "ДФ=ЧЧ.мм"), Формат(ВыборкаДетальныеЗаписи.ДатаОкончания, "ДФ=ЧЧ.мм"));
			ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;
			
			Если Минута(ВыборкаДетальныеЗаписи.ДатаОкончания) = 59 Тогда	 
				ДатаОкончания = ДатаОкончания + 1	
			КонецЕсли;
			
			КоличествоСекунд = ДатаОкончания - ВыборкаДетальныеЗаписи.ДатаНачала;				
			ОбщеКоличествоСекунд = ОбщеКоличествоСекунд + КоличествоСекунд;
			
		КонецЕсли;
		
		//получаем часы
		КоличествоЧасов = Окр((ОбщеКоличествоСекунд / 3600), 1);	
		СтрокаТЗ.КоличествоЧасов = КоличествоЧасов;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаЗначениейПромежуточногоИтога.Ссылка КАК Ссылка,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаНачала КАК ДатаНачала,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаЗначениейПромежуточногоИтога.Тренер КАК Тренер,
		|	ТаблицаЗначениейПромежуточногоИтога.ВидСпорта КАК ВидСпорта,
		|	ТаблицаЗначениейПромежуточногоИтога.Этап КАК Этап,
		|	ТаблицаЗначениейПромежуточногоИтога.МестоПроведения КАК МестоПроведения,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЗанимающихся КАК КоличествоЗанимающихся,
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели КАК ДеньНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.ФорматДняНедели КАК ФорматДняНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЧасов КАК КоличествоЧасов
		|ПОМЕСТИТЬ ТаблицаЗначениейПромежуточногоИтога
		|ИЗ
		|	&ТаблицаЗначениейПромежуточногоИтога КАК ТаблицаЗначениейПромежуточногоИтога
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗначениейПромежуточногоИтога.Ссылка КАК Ссылка,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаНачала КАК ДатаНачала,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаЗначениейПромежуточногоИтога.Тренер КАК Тренер,
		|	ТаблицаЗначениейПромежуточногоИтога.ВидСпорта КАК ВидСпорта,
		|	ТаблицаЗначениейПромежуточногоИтога.Этап КАК Этап,
		|	ТаблицаЗначениейПромежуточногоИтога.МестоПроведения КАК МестоПроведения,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЗанимающихся КАК КоличествоЗанимающихся,
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели КАК ДеньНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.ФорматДняНедели КАК ФорматДняНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЧасов КАК КоличествоЧасов
		|ПОМЕСТИТЬ ВТ_Понедельник
		|ИЗ
		|	ТаблицаЗначениейПромежуточногоИтога КАК ТаблицаЗначениейПромежуточногоИтога
		|ГДЕ
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели = 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗначениейПромежуточногоИтога.Ссылка КАК Ссылка,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаНачала КАК ДатаНачала,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаЗначениейПромежуточногоИтога.Тренер КАК Тренер,
		|	ТаблицаЗначениейПромежуточногоИтога.ВидСпорта КАК ВидСпорта,
		|	ТаблицаЗначениейПромежуточногоИтога.Этап КАК Этап,
		|	ТаблицаЗначениейПромежуточногоИтога.МестоПроведения КАК МестоПроведения,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЗанимающихся КАК КоличествоЗанимающихся,
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели КАК ДеньНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.ФорматДняНедели КАК ФорматДняНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЧасов КАК КоличествоЧасов
		|ПОМЕСТИТЬ ВТ_Вторник
		|ИЗ
		|	ТаблицаЗначениейПромежуточногоИтога КАК ТаблицаЗначениейПромежуточногоИтога
		|ГДЕ
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели = 2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗначениейПромежуточногоИтога.Ссылка КАК Ссылка,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаНачала КАК ДатаНачала,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаЗначениейПромежуточногоИтога.Тренер КАК Тренер,
		|	ТаблицаЗначениейПромежуточногоИтога.ВидСпорта КАК ВидСпорта,
		|	ТаблицаЗначениейПромежуточногоИтога.Этап КАК Этап,
		|	ТаблицаЗначениейПромежуточногоИтога.МестоПроведения КАК МестоПроведения,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЗанимающихся КАК КоличествоЗанимающихся,
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели КАК ДеньНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.ФорматДняНедели КАК ФорматДняНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЧасов КАК КоличествоЧасов
		|ПОМЕСТИТЬ ВТ_Среда
		|ИЗ
		|	ТаблицаЗначениейПромежуточногоИтога КАК ТаблицаЗначениейПромежуточногоИтога
		|ГДЕ
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели = 3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗначениейПромежуточногоИтога.Ссылка КАК Ссылка,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаНачала КАК ДатаНачала,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаЗначениейПромежуточногоИтога.Тренер КАК Тренер,
		|	ТаблицаЗначениейПромежуточногоИтога.ВидСпорта КАК ВидСпорта,
		|	ТаблицаЗначениейПромежуточногоИтога.Этап КАК Этап,
		|	ТаблицаЗначениейПромежуточногоИтога.МестоПроведения КАК МестоПроведения,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЗанимающихся КАК КоличествоЗанимающихся,
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели КАК ДеньНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.ФорматДняНедели КАК ФорматДняНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЧасов КАК КоличествоЧасов
		|ПОМЕСТИТЬ ВТ_Четверг
		|ИЗ
		|	ТаблицаЗначениейПромежуточногоИтога КАК ТаблицаЗначениейПромежуточногоИтога
		|ГДЕ
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели = 4
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗначениейПромежуточногоИтога.Ссылка КАК Ссылка,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаНачала КАК ДатаНачала,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаЗначениейПромежуточногоИтога.Тренер КАК Тренер,
		|	ТаблицаЗначениейПромежуточногоИтога.ВидСпорта КАК ВидСпорта,
		|	ТаблицаЗначениейПромежуточногоИтога.Этап КАК Этап,
		|	ТаблицаЗначениейПромежуточногоИтога.МестоПроведения КАК МестоПроведения,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЗанимающихся КАК КоличествоЗанимающихся,
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели КАК ДеньНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.ФорматДняНедели КАК ФорматДняНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЧасов КАК КоличествоЧасов
		|ПОМЕСТИТЬ ВТ_Пятница
		|ИЗ
		|	ТаблицаЗначениейПромежуточногоИтога КАК ТаблицаЗначениейПромежуточногоИтога
		|ГДЕ
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели = 5
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗначениейПромежуточногоИтога.Ссылка КАК Ссылка,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаНачала КАК ДатаНачала,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаЗначениейПромежуточногоИтога.Тренер КАК Тренер,
		|	ТаблицаЗначениейПромежуточногоИтога.ВидСпорта КАК ВидСпорта,
		|	ТаблицаЗначениейПромежуточногоИтога.Этап КАК Этап,
		|	ТаблицаЗначениейПромежуточногоИтога.МестоПроведения КАК МестоПроведения,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЗанимающихся КАК КоличествоЗанимающихся,
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели КАК ДеньНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.ФорматДняНедели КАК ФорматДняНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЧасов КАК КоличествоЧасов
		|ПОМЕСТИТЬ ВТ_Суббота
		|ИЗ
		|	ТаблицаЗначениейПромежуточногоИтога КАК ТаблицаЗначениейПромежуточногоИтога
		|ГДЕ
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели = 6
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗначениейПромежуточногоИтога.Ссылка КАК Ссылка,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаНачала КАК ДатаНачала,
		|	ТаблицаЗначениейПромежуточногоИтога.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаЗначениейПромежуточногоИтога.Тренер КАК Тренер,
		|	ТаблицаЗначениейПромежуточногоИтога.ВидСпорта КАК ВидСпорта,
		|	ТаблицаЗначениейПромежуточногоИтога.Этап КАК Этап,
		|	ТаблицаЗначениейПромежуточногоИтога.МестоПроведения КАК МестоПроведения,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЗанимающихся КАК КоличествоЗанимающихся,
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели КАК ДеньНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.ФорматДняНедели КАК ФорматДняНедели,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЧасов КАК КоличествоЧасов
		|ПОМЕСТИТЬ ВТ_Воскресенье
		|ИЗ
		|	ТаблицаЗначениейПромежуточногоИтога КАК ТаблицаЗначениейПромежуточногоИтога
		|ГДЕ
		|	ТаблицаЗначениейПромежуточногоИтога.ДеньНедели = 7
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗначениейПромежуточногоИтога.Тренер КАК Тренер,
		|	ТаблицаЗначениейПромежуточногоИтога.ВидСпорта КАК ВидСпорта,
		|	ТаблицаЗначениейПромежуточногоИтога.Этап КАК Этап,
		|	ТаблицаЗначениейПромежуточногоИтога.МестоПроведения КАК МестоПроведения,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЗанимающихся КАК КоличествоЗанимающихся
		|ПОМЕСТИТЬ ВТ_ГруппировкаДляОбъединения
		|ИЗ
		|	ТаблицаЗначениейПромежуточногоИтога КАК ТаблицаЗначениейПромежуточногоИтога
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаЗначениейПромежуточногоИтога.Тренер,
		|	ТаблицаЗначениейПромежуточногоИтога.Этап,
		|	ТаблицаЗначениейПромежуточногоИтога.МестоПроведения,
		|	ТаблицаЗначениейПромежуточногоИтога.ВидСпорта,
		|	ТаблицаЗначениейПромежуточногоИтога.КоличествоЗанимающихся
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ГруппировкаДляОбъединения.Тренер КАК Тренер,
		|	ВТ_ГруппировкаДляОбъединения.ВидСпорта КАК ВидСпорта,
		|	ВТ_ГруппировкаДляОбъединения.Этап КАК Этап,
		|	ВТ_ГруппировкаДляОбъединения.МестоПроведения КАК МестоПроведения,
		|	ВТ_ГруппировкаДляОбъединения.КоличествоЗанимающихся КАК КоличествоЗанимающихся,
		|	ВТ_Понедельник.ФорматДняНедели КАК Понедельник,
		|	ВТ_Вторник.ФорматДняНедели КАК Вторник,
		|	ВТ_Среда.ФорматДняНедели КАК Среда,
		|	ВТ_Четверг.ФорматДняНедели КАК Четверг,
		|	ВТ_Пятница.ФорматДняНедели КАК Пятница,
		|	ВТ_Суббота.ФорматДняНедели КАК Суббота,
		|	ВТ_Воскресенье.ФорматДняНедели КАК Воскресенье,
		|	ЕСТЬNULL(ВТ_Понедельник.КоличествоЧасов, 0) КАК КоличествоЧасовПонедельник,
		|	ЕСТЬNULL(ВТ_Вторник.КоличествоЧасов, 0) КАК КоличествоЧасовВторник,
		|	ЕСТЬNULL(ВТ_Среда.КоличествоЧасов, 0) КАК КоличествоЧасовСреда,
		|	ЕСТЬNULL(ВТ_Четверг.КоличествоЧасов, 0) КАК КоличествоЧасовЧетверг,
		|	ЕСТЬNULL(ВТ_Пятница.КоличествоЧасов, 0) КАК КоличествоЧасовПятница,
		|	ЕСТЬNULL(ВТ_Суббота.КоличествоЧасов, 0) КАК КоличествоЧасовСуббота,
		|	ЕСТЬNULL(ВТ_Воскресенье.КоличествоЧасов, 0) КАК КоличествоЧасовВоскресенье
		|ИЗ
		|	ВТ_ГруппировкаДляОбъединения КАК ВТ_ГруппировкаДляОбъединения
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Понедельник КАК ВТ_Понедельник
		|		ПО ВТ_ГруппировкаДляОбъединения.Тренер = ВТ_Понедельник.Тренер
		|			И ВТ_ГруппировкаДляОбъединения.ВидСпорта = ВТ_Понедельник.ВидСпорта
		|			И ВТ_ГруппировкаДляОбъединения.Этап = ВТ_Понедельник.Этап
		|			И ВТ_ГруппировкаДляОбъединения.МестоПроведения = ВТ_Понедельник.МестоПроведения
		|			И ВТ_ГруппировкаДляОбъединения.КоличествоЗанимающихся = ВТ_Понедельник.КоличествоЗанимающихся
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Вторник КАК ВТ_Вторник
		|		ПО ВТ_ГруппировкаДляОбъединения.Тренер = ВТ_Вторник.Тренер
		|			И ВТ_ГруппировкаДляОбъединения.ВидСпорта = ВТ_Вторник.ВидСпорта
		|			И ВТ_ГруппировкаДляОбъединения.Этап = ВТ_Вторник.Этап
		|			И ВТ_ГруппировкаДляОбъединения.МестоПроведения = ВТ_Вторник.МестоПроведения
		|			И ВТ_ГруппировкаДляОбъединения.КоличествоЗанимающихся = ВТ_Вторник.КоличествоЗанимающихся
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Среда КАК ВТ_Среда
		|		ПО ВТ_ГруппировкаДляОбъединения.Тренер = ВТ_Среда.Тренер
		|			И ВТ_ГруппировкаДляОбъединения.ВидСпорта = ВТ_Среда.ВидСпорта
		|			И ВТ_ГруппировкаДляОбъединения.Этап = ВТ_Среда.Этап
		|			И ВТ_ГруппировкаДляОбъединения.МестоПроведения = ВТ_Среда.МестоПроведения
		|			И ВТ_ГруппировкаДляОбъединения.КоличествоЗанимающихся = ВТ_Среда.КоличествоЗанимающихся
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Четверг КАК ВТ_Четверг
		|		ПО ВТ_ГруппировкаДляОбъединения.Тренер = ВТ_Четверг.Тренер
		|			И ВТ_ГруппировкаДляОбъединения.ВидСпорта = ВТ_Четверг.ВидСпорта
		|			И ВТ_ГруппировкаДляОбъединения.Этап = ВТ_Четверг.Этап
		|			И ВТ_ГруппировкаДляОбъединения.МестоПроведения = ВТ_Четверг.МестоПроведения
		|			И ВТ_ГруппировкаДляОбъединения.КоличествоЗанимающихся = ВТ_Четверг.КоличествоЗанимающихся
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Пятница КАК ВТ_Пятница
		|		ПО ВТ_ГруппировкаДляОбъединения.Тренер = ВТ_Пятница.Тренер
		|			И ВТ_ГруппировкаДляОбъединения.ВидСпорта = ВТ_Пятница.ВидСпорта
		|			И ВТ_ГруппировкаДляОбъединения.Этап = ВТ_Пятница.Этап
		|			И ВТ_ГруппировкаДляОбъединения.МестоПроведения = ВТ_Пятница.МестоПроведения
		|			И ВТ_ГруппировкаДляОбъединения.КоличествоЗанимающихся = ВТ_Пятница.КоличествоЗанимающихся
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Суббота КАК ВТ_Суббота
		|		ПО ВТ_ГруппировкаДляОбъединения.Тренер = ВТ_Суббота.Тренер
		|			И ВТ_ГруппировкаДляОбъединения.ВидСпорта = ВТ_Суббота.ВидСпорта
		|			И ВТ_ГруппировкаДляОбъединения.Этап = ВТ_Суббота.Этап
		|			И ВТ_ГруппировкаДляОбъединения.МестоПроведения = ВТ_Суббота.МестоПроведения
		|			И ВТ_ГруппировкаДляОбъединения.КоличествоЗанимающихся = ВТ_Суббота.КоличествоЗанимающихся
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Воскресенье КАК ВТ_Воскресенье
		|		ПО ВТ_ГруппировкаДляОбъединения.Тренер = ВТ_Воскресенье.Тренер
		|			И ВТ_ГруппировкаДляОбъединения.ВидСпорта = ВТ_Воскресенье.ВидСпорта
		|			И ВТ_ГруппировкаДляОбъединения.Этап = ВТ_Воскресенье.Этап
		|			И ВТ_ГруппировкаДляОбъединения.МестоПроведения = ВТ_Воскресенье.МестоПроведения
		|			И ВТ_ГруппировкаДляОбъединения.КоличествоЗанимающихся = ВТ_Воскресенье.КоличествоЗанимающихся
		|
		|УПОРЯДОЧИТЬ ПО
		|	Тренер УБЫВ,
		|	Этап,
		|	МестоПроведения";
	
	Запрос.УстановитьПараметр("ТаблицаЗначениейПромежуточногоИтога", ТаблицаЗначениейПромежуточногоИтога);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	//Область Шапка
	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ОбластьШапка.Параметры.ДатаНачала    = Формат(ОтображаемаяДатаНачала, "ДЛФ=D");
	ОбластьШапка.Параметры.ДатаОкончания = Формат(ОтображаемаяДатаОкончания, "ДЛФ=D");
	ОбластьШапка.Параметры.СпортивныйОбъект = СпортивныйОбъект;	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	Номер = 1;                                                       	
	ТренерДляНомера = Справочники.Тренеры.ПустаяСсылка();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		//Область ОбластьСтрДанные
		ОбластьСтрДанные = Макет.ПолучитьОбласть("ОбластьСтрДанные");        
		
		// Дни недели
		ОбластьСтрДанные.Параметры.Понедельник = ВыборкаДетальныеЗаписи.Понедельник;
		ОбластьСтрДанные.Параметры.Вторник 	   = ВыборкаДетальныеЗаписи.Вторник;
		ОбластьСтрДанные.Параметры.Среда 	   = ВыборкаДетальныеЗаписи.Среда;
		ОбластьСтрДанные.Параметры.Четверг 	   = ВыборкаДетальныеЗаписи.Четверг;
		ОбластьСтрДанные.Параметры.Пятница 	   = ВыборкаДетальныеЗаписи.Пятница;
		ОбластьСтрДанные.Параметры.Суббота 	   = ВыборкаДетальныеЗаписи.Суббота;
		ОбластьСтрДанные.Параметры.Воскресенье = ВыборкаДетальныеЗаписи.Воскресенье;

		ОбластьСтрДанные.Параметры.Тренер 				  = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаДетальныеЗаписи.Тренер.ФизическоеЛицо);
		ОбластьСтрДанные.Параметры.Этап 				  = ВыборкаДетальныеЗаписи.Этап;
		Если ВыборкаДетальныеЗаписи.КоличествоЗанимающихся = 0 Тогда	
			КоличествоЗанимающихся = "-";
		Иначе
			КоличествоЗанимающихся = ВыборкаДетальныеЗаписи.КоличествоЗанимающихся;
		КонецЕсли;
		ОбластьСтрДанные.Параметры.КоличествоЗанимающихся = КоличествоЗанимающихся;
		ОбластьСтрДанные.Параметры.МестоПроведения 		  = ВыборкаДетальныеЗаписи.МестоПроведения;
		
		КоличествоЧасов = (ВыборкаДетальныеЗаписи.КоличествоЧасовПонедельник + ВыборкаДетальныеЗаписи.КоличествоЧасовВторник + ВыборкаДетальныеЗаписи.КоличествоЧасовСреда +
							ВыборкаДетальныеЗаписи.КоличествоЧасовЧетверг + ВыборкаДетальныеЗаписи.КоличествоЧасовПятница + ВыборкаДетальныеЗаписи.КоличествоЧасовСуббота +
								ВыборкаДетальныеЗаписи.КоличествоЧасовВоскресенье);
		ОбластьСтрДанные.Параметры.КоличествоЧасов 		  = КоличествоЧасов;
		
		Если ТренерДляНомера <> ВыборкаДетальныеЗаписи.Тренер Тогда
			
			ТренерДляНомера = ВыборкаДетальныеЗаписи.Тренер;
			ОбластьСтрДанные.Параметры.Номер = Номер;
			Номер = Номер + 1;
			
		КонецЕсли;

		ТабличныйДокумент.Вывести(ОбластьСтрДанные);
		
	КонецЦикла;	

	ВысотаТабличногоДокумента = ТабличныйДокумент.ВысотаТаблицы;
	ШиринаТабличногоДокумента = ТабличныйДокумент.ШиринаТаблицы;
	
	//Обход строк табличного документа
	Для Колонка = 2 По 2 Цикл 
		
		ОбъединениеНачало = "R1C2"; // Любая пустая ячейка
		ОбъединениеНачалоНомераСтроки = "R1C2";
				
		Для Строка = 8 По ВысотаТабличногоДокумента Цикл

				ЗначениеТекущейСтроки = СтрШаблон("R%1C%2", Строка, Колонка);
				ЗначениеСравниваемойСтроки = СтрШаблон("R%1C%2", (Строка - 1), Колонка);
				
				Если ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст 
					ИЛИ ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ОбъединениеНачало).Текст Тогда
					
					Если ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ОбъединениеНачало).Текст Тогда 						
						
						ТабличныйДокумент.Область(ОбъединениеНачало + ":" + ЗначениеТекущейСтроки).Объединить();
							
					ИначеЕсли ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст 
						И (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст <> "" И ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст <> "") Тогда
						
						ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки + ":" + ЗначениеТекущейСтроки).Объединить();	
						ОбъединениеНачало = ЗначениеСравниваемойСтроки;
						
					КонецЕсли;	
				Иначе	
					Продолжить;                            	
				КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
	
	Для Колонка = 1 По 1 Цикл
		
		ОбъединениеНачало = "R1C2"; // Любая пустая ячейка
		ОбъединениеНачалоНомераСтроки = "R1C2"; // Любая пустая ячейка
				
		Для Строка = 8 По ВысотаТабличногоДокумента Цикл
			
			ЗначениеТекущейСтроки = СтрШаблон("R%1C%2", Строка, Колонка);
			ЗначениеСравниваемойСтроки = СтрШаблон("R%1C%2", (Строка - 1), Колонка);
			
			Если (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = "" И ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст = "") 
					ИЛИ (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = "" И ЗначениеЗаполнено(ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст)) Тогда
					
					Если ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = "" И ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст = "" Тогда 							
						
						ТабличныйДокумент.Область(ОбъединениеНачало + ":" + ЗначениеТекущейСтроки).Объединить();
							
					ИначеЕсли ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = "" И ЗначениеЗаполнено(ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст) Тогда
						
						ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки + ":" + ЗначениеТекущейСтроки).Объединить();	
						ОбъединениеНачало = ЗначениеСравниваемойСтроки;
						
					КонецЕсли;	
				Иначе	
					Продолжить;                            	
				КонецЕсли;
		КонецЦикла;	
	КонецЦикла;		

	Для Колонка = 3 По 3 Цикл
		
		ОбъединениеНачало = "R1C2"; // Любая пустая ячейка
		ТренерНачало = "R1C2"; // Любая пустая ячейка 
		
		Для Строка = 8 По ВысотаТабличногоДокумента Цикл
			
			ЗначениеТекущейСтроки = СтрШаблон("R%1C%2", Строка, Колонка);
			ЗначениеСравниваемойСтроки = СтрШаблон("R%1C%2", (Строка - 1), Колонка);
			
			Если (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст) 
				ИЛИ (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ОбъединениеНачало).Текст) Тогда
				
				Если (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст) 
					И (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст <> "" И ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст <> "")
					И (ТабличныйДокумент.Область("R" + Строка + "C2").Текст = "") Тогда 
					
					ТренерНачало = "R" + (Строка - 1) + "C2";
					ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки + ":" + ЗначениеТекущейСтроки).Объединить();	
					ОбъединениеНачало = ЗначениеСравниваемойСтроки;
					
				ИначеЕсли (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ОбъединениеНачало).Текст) 
					И ЗначениеЗаполнено(ТабличныйДокумент.Область(ТренерНачало).Текст) 
					И (ТабличныйДокумент.Область("R" + Строка + "C2").Текст = "") Тогда 						
					
					ТабличныйДокумент.Область(ОбъединениеНачало + ":" + ЗначениеТекущейСтроки).Объединить();
					
				КонецЕсли;	
			КонецЕсли; 	
		КонецЦикла;		
	КонецЦикла;
	
	Для Колонка = 4 По 4 Цикл
		
		ОбъединениеНачало = "R1C2"; // Любая пустая ячейка
		ТренерНачало = "R1C2"; // Любая пустая ячейка 
		
		Для Строка = 8 По ВысотаТабличногоДокумента Цикл
			
			ЗначениеТекущейСтроки = СтрШаблон("R%1C%2", Строка, Колонка);
			ЗначениеСравниваемойСтроки = СтрШаблон("R%1C%2", (Строка - 1), Колонка);
			
			Если (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст) 
				ИЛИ (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ОбъединениеНачало).Текст) Тогда
				
				Если (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст) 
					И (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст <> "" И ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст <> "")
					И (ТабличныйДокумент.Область("R" + Строка + "C3").Текст = "") Тогда 
					
					ТренерНачало = "R" + (Строка - 1) + "C3";
					ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки + ":" + ЗначениеТекущейСтроки).Объединить();	
					ОбъединениеНачало = ЗначениеСравниваемойСтроки;
					
				ИначеЕсли (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ОбъединениеНачало).Текст) 
					И ЗначениеЗаполнено(ТабличныйДокумент.Область(ТренерНачало).Текст) 
					И (ТабличныйДокумент.Область("R" + Строка + "C3").Текст = "") Тогда 						
					
					ТабличныйДокумент.Область(ОбъединениеНачало + ":" + ЗначениеТекущейСтроки).Объединить();
					
				КонецЕсли;	
			КонецЕсли; 	
		КонецЦикла;		
	КонецЦикла;
	
	Для Колонка = 5 По 5 Цикл
		
		ОбъединениеНачало = "R1C2"; // Любая пустая ячейка
		ТренерНачало = "R1C2"; // Любая пустая ячейка 
		ОбъединениеЧисло = 0;
		ОбъединениеНачалоКоличествоЧасов = "R1C2";
		
		Для Строка = 8 По ВысотаТабличногоДокумента Цикл
			
			ЗначениеТекущейСтроки = СтрШаблон("R%1C%2", Строка, Колонка);
			ЗначениеСравниваемойСтроки = СтрШаблон("R%1C%2", (Строка - 1), Колонка);
			
			Если (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст) 
				ИЛИ (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ОбъединениеНачало).Текст) Тогда
				
				Если (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст) 
					И (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст <> "" И ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст <> "")
					И (ТабличныйДокумент.Область("R" + Строка + "C3").Текст = "") Тогда 
					
					ОбъединениеЧисло = Число(ТабличныйДокумент.Область("R" + (Строка -1) + "C6").Текст) + Число(ТабличныйДокумент.Область("R" + Строка + "C6").Текст);
					ТренерНачало = "R" + (Строка - 1) + "C3";
					ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки + ":" + ЗначениеТекущейСтроки).Объединить();
					ТабличныйДокумент.Область("R" + (Строка -1) + "C6" + ":" + "R" + Строка + "C6").Объединить();	
					ОбъединениеНачало = ЗначениеСравниваемойСтроки;
					ОбъединениеНачалоКоличествоЧасов = "R" + (Строка -1) + "C6"; 
					ТабличныйДокумент.Область("R" + (Строка -1) + "C6").Текст = ОбъединениеЧисло;

				ИначеЕсли (ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = ТабличныйДокумент.Область(ОбъединениеНачало).Текст) 
					И ЗначениеЗаполнено(ТабличныйДокумент.Область(ТренерНачало).Текст) 
					И (ТабличныйДокумент.Область("R" + Строка + "C3").Текст = "") Тогда 						
					
					ТабличныйДокумент.Область(ОбъединениеНачалоКоличествоЧасов).Текст = ОбъединениеЧисло + Число(ТабличныйДокумент.Область("R" + Строка + "C6").Текст);
	   				ТабличныйДокумент.Область(ОбъединениеНачало + ":" + ЗначениеТекущейСтроки).Объединить();
					ТабличныйДокумент.Область(ОбъединениеНачалоКоличествоЧасов + ":" + "R" + Строка + "C6").Объединить();
					
				КонецЕсли;	
			КонецЕсли; 		
		КонецЦикла;		
	КонецЦикла;
	//
	//Для Колонка = 7 По 13 Цикл 
	//	
	//	НачалоСтрока = "";
	//	НачалоТекст  = "";
	//	                                                                                
	//	Для Строка = 7 По ВысотаТабличногоДокумента Цикл
	//		
	//		ЗначениеТекущейСтроки = СтрШаблон("R%1C%2", Строка, Колонка);
	//		ЗначениеСравниваемойСтроки = СтрШаблон("R%1C%2", Строка, 5);
	//		
	//		Если ЗначениеЗаполнено(ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст) Тогда
	//			
	//			НачалоСтрока = Строка;
	//			НачалоТекст  = ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст;
	//			
	//		КонецЕсли;
	//				
	//		Если Не ЗначениеЗаполнено(НачалоТекст) И ЗначениеЗаполнено(НачалоСтрока) И Не ЗначениеЗаполнено(ТабличныйДокумент.Область(ЗначениеСравниваемойСтроки).Текст) 
	//									И Не ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + НачалоСтрока + "C" + Колонка).Текст) Тогда 
	//			
	//			ТабличныйДокумент.Область("R" + НачалоСтрока + "C" + Колонка).Текст = ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст;                            
	//			ТабличныйДокумент.Область(ЗначениеТекущейСтроки).Текст = "";
	//			
	//		КонецЕсли; 	
	//		
	//	КонецЦикла;	
	//	
	//КонецЦикла;

	Возврат ТабличныйДокумент; 			
		                            
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьКомандПечати()
	
	Если ЭтоТренер Тогда 
		
		Элементы.ПечатьРасписаниеТренера.Видимость = Истина;
		Элементы.ПечатьРасписание.Видимость = Ложь;
		
	ИначеЕсли ЭтоРуководитель Тогда  
		
		Элементы.ПечатьРасписаниеТренера.Видимость = Ложь;
		Элементы.ПечатьРасписание.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораТренера(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Тренер = Результат.Значение;
		
		ТабДок = СформироватьТабДокНаСервере(Тренер);
		
		//Создаём новую коллекцию печатных форм
		КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ПФ_MXL_Расписание");
		
		//Добавляем в коллекцию сформированный табличный документ
		КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
		
		//Устанавливаем параметры печати (при необходимости)
		КоллекцияПечатныхФорм[0].Экземпляров = 1;
		КоллекцияПечатныхФорм[0].СинонимМакета = "Расписание групповых тренировочных занятий";  //Так будет выглядеть имя файла при сохранении в файл из формы "Печать документов"
		
		//Вывод через стандартную процедуру БСП
		УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Неопределено, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьСписокЗначенийТренеров();
	
	СписокТренеров = Новый СписокЗначений;
	ОтображаемыеБрони = БронированиеПомещений.ПолучитьОтображаемыеБрони(ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания, СпортивныйОбъект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтображаемыеБрони.Ссылка КАК Ссылка,
		|	ОтображаемыеБрони.ДатаНачала КАК ДатаНачала,
		|	ОтображаемыеБрони.ДатаОкончания КАК ДатаОкончания,
		|	ОтображаемыеБрони.ВесьДень КАК ВесьДень,
		|	ОтображаемыеБрони.ТипЗаписи КАК ТипЗаписи,
		|	ОтображаемыеБрони.Тренер КАК Тренер,
		|	ОтображаемыеБрони.ВидСпорта КАК ВидСпорта,
		|	ОтображаемыеБрони.Этап КАК Этап,
		|	ОтображаемыеБрони.СпортивныйОбъект КАК СпортивныйОбъект,
		|	ОтображаемыеБрони.МестоЗанятия КАК МестоЗанятия,
		|	ОтображаемыеБрони.ПометкаУдаления КАК ПометкаУдаления
		|ПОМЕСТИТЬ ОтображаемыеБрони
		|ИЗ
		|	&ОтображаемыеБрони КАК ОтображаемыеБрони
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтображаемыеБрони.Тренер КАК Тренер
		|ИЗ
		|	ОтображаемыеБрони КАК ОтображаемыеБрони
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтображаемыеБрони.Тренер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Тренер УБЫВ";
	
	Запрос.УстановитьПараметр("ОтображаемыеБрони", ОтображаемыеБрони);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СписокТренеров.Добавить(ВыборкаДетальныеЗаписи.Тренер, ВыборкаДетальныеЗаписи.Тренер);	
		
	КонецЦикла;
	
	СписокТренеров.СортироватьПоЗначению(НаправлениеСортировки.Возр);
	
	Возврат СписокТренеров;
	
КонецФункции
// }Рарус adilas #20230 -РС Методиста. Печатная форма. Расписание 2021.10.07

#КонецОбласти

// {Рарус adilas #16226 -Электронный журнал посещений 2021.05.21
#Область Календарь

#Область ОбработчикиСобытийКалендаря

&НаКлиенте
Процедура ВыбираемыйПериодПриИзменении(Элемент)
	
	ИзменилсяГод = Истина;
	ОтмеченныйПериод = Неопределено;
	УстановитьВыбираемыйПериод(Год(ВыбираемыйПериод), Месяц(ВыбираемыйПериод));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандКалендаря

&НаКлиенте
Процедура КомандаМесяц01(Команда)
	УстановитьВыбираемыйМесяц(1);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаМесяц02(Команда)
	УстановитьВыбираемыйМесяц(2);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаМесяц03(Команда)
	УстановитьВыбираемыйМесяц(3);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаМесяц04(Команда)
	УстановитьВыбираемыйМесяц(4);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаМесяц05(Команда)
	УстановитьВыбираемыйМесяц(5);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаМесяц06(Команда)
	УстановитьВыбираемыйМесяц(6);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаМесяц07(Команда)
	УстановитьВыбираемыйМесяц(7);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаМесяц08(Команда)
	УстановитьВыбираемыйМесяц(8);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаМесяц09(Команда)
	УстановитьВыбираемыйМесяц(9);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаМесяц10(Команда)
	УстановитьВыбираемыйМесяц(10);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаМесяц11(Команда)
	УстановитьВыбираемыйМесяц(11);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаМесяц12(Команда)
	УстановитьВыбираемыйМесяц(12);
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаГод(Команда)
	УстановитьВыбираемыйГод();
	ОтмеченныйПериод = ВыбираемыйПериод;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПролистатьГодВМинус(Команда)
	
	ВыбираемыйГод = Год(ВыбираемыйПериод) - 1;
	ОтмеченныйПериод = Неопределено;
	УстановитьВыбираемыйПериод(ВыбираемыйГод, Месяц(ВыбираемыйПериод));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПролистатьГодВПлюс(Команда)
	
	ВыбираемыйГод = Год(ВыбираемыйПериод) + 1;
	ОтмеченныйПериод = Неопределено;
	УстановитьВыбираемыйПериод(ВыбираемыйГод, Месяц(ВыбираемыйПериод));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииКалендаря

&НаСервере
Процедура КалендарьПриСозданииНаСервере()
	
	ВыбираемыйПериод = ОтображаемаяДата;
	
	РежимВыбора = "Месяц";
	РежимВыбораПериода = "МЕСЯЦ";
	
	ЦветФонаКнопкиВыбранногоПериода = ЦветаСтиля.ЦветФонаАктивнойКнопкиКалендаряБрони;
	ЦветФонаКнопки = ЦветаСтиля.ЦветФонаКнопкиКалендаряБрони;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСписокСпортивныхОбъектов(ПараметрыСписка)
	
	// {Рарус adilas #21523 -Тестирование релиза Альфа СПОРТ 1.0.0.4. РС Руководитель. Спортивные объекты. Расписание 2021.10.15
	Запрос = Новый Запрос;
	ТекстЗапросаТренер = "ВЫБРАТЬ
	                     |	СпортивныеОбъекты.СпортивныйОбъект КАК СпортивныйОбъект,
	                     |	СпортивныеОбъекты.СпортивныйОбъект.Наименование КАК СпортивныйОбъектНаименование
	                     |ИЗ
	                     |	РегистрСведений.СпортивныеОбъекты КАК СпортивныеОбъекты
	                     |ГДЕ
	                     |	СпортивныеОбъекты.СпортивныйОбъект.Владелец = &Организация
	                     |	И СпортивныеОбъекты.Тренер = &Тренер
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	СпортивныеОбъекты.СпортивныйОбъект
	                     |
	                     |УПОРЯДОЧИТЬ ПО
	                     |	СпортивныйОбъектНаименование";
	
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СпортивныеОбъекты.Ссылка КАК СпортивныйОбъект,
	               |	СпортивныеОбъекты.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник.СпортивныеОбъекты КАК СпортивныеОбъекты
	               |%1
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СпортивныеОбъекты.Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СпортивныеОбъекты.Наименование";
				   
	Если ПараметрыСписка.Свойство("Тренер") Тогда
		Запрос.Текст = ТекстЗапросаТренер;
		Запрос.УстановитьПараметр("Тренер", ПараметрыСписка.Тренер);
	Иначе
		Запрос.Текст = ТекстЗапроса;
	КонецЕсли;
	
	Если ПараметрыСписка.Организация <> Неопределено Тогда  
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", " ГДЕ 
															| СпортивныеОбъекты.Владелец = &Организация");
		Запрос.УстановитьПараметр("Организация", ПараметрыСписка.Организация);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", "");	
	КонецЕсли;
	// }Рарус adilas #21523 -Тестирование релиза Альфа СПОРТ 1.0.0.4. РС Руководитель. Спортивные объекты. Расписание 2021.10.15
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
			Элементы.СпортивныйОбъект.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.СпортивныйОбъект);	
		КонецЦикла; 

		Если Параметры.Свойство("СпортивныйОбъект") Тогда
			СпортивныйОбъект = Элементы.СпортивныйОбъект.СписокВыбора.НайтиПоЗначению(ПараметрыСписка.СпортивныйОбъект).Значение;
		Иначе	
			СпортивныйОбъект = Элементы.СпортивныйОбъект.СписокВыбора[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыбираемыйМесяц(НомерМесяца)
	УстановитьВыбираемыйПериод(Год(ВыбираемыйПериод), НомерМесяца, "МЕСЯЦ");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыбираемыйГод()
	УстановитьВыбираемыйПериод(Год(ВыбираемыйПериод), 1, "ГОД");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеКалендаря()
	
	УстановитьНевыбранныйЦветКнопок();
	
	Если РежимВыбораПериода = "МЕСЯЦ" Тогда
		
		КнопкаМесяца = Элементы["КомандаМесяц" + Формат(Месяц(ВыбираемыйПериод), "ЧЦ=2; ЧВН=")];
		Если КнопкаМесяца.ЦветФона <> ЦветФонаКнопкиВыбранногоПериода Тогда
			КнопкаМесяца.ЦветФона = ЦветФонаКнопкиВыбранногоПериода;
		КонецЕсли;
		ТекущийЭлемент = КнопкаМесяца;	
	Иначе
		//Элементы.КомандаГод.ЦветФона = ЦветФонаКнопкиВыбранногоПериода;
		//ПериодСтрокой = Формат(ВыбираемыйПериод, "ДФ='гггг'")
	КонецЕсли;
	
	УстановитьЗаголовокКомандеГод(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНевыбранныйЦветКнопок()

	Если РежимВыбораПериода = "МЕСЯЦ" Тогда
		ЧислоКнопок = 12;
		ПрефиксКоманды = "КомандаМесяц";
	КонецЕсли;

	Для НомерПоПорядку = 1 По ЧислоКнопок Цикл
		Если РежимВыбораПериода = "ГОД" Тогда
			ЭлементКнопка = Элементы[ПрефиксКоманды];
		Иначе
			ФорматнаяСтрока = ?(РежимВыбораПериода = "МЕСЯЦ", "ЧЦ=2; ЧВН=", "ЧЦ=1");
			ЭлементКнопка = Элементы[ПрефиксКоманды + Формат(НомерПоПорядку, ФорматнаяСтрока)];
		КонецЕсли;
		
		Если ЭлементКнопка.ЦветФона <> ЦветФонаКнопки Тогда
			ЭлементКнопка.ЦветФона = ЦветФонаКнопки;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокКомандеГод(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"КомандаГод",
		"Заголовок",
		Формат(Форма.ВыбираемыйПериод, "ДФ='гггг'"));

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыбираемыйПериод(Год, Месяц, РежимВыбора = "")
	
	Если ОтмеченныйПериод = Дата(Год, Месяц, 1)
		И НЕ ИзменилсяГод 
		И РежимВыбораПериода = РежимВыбора Тогда
		
		ВыполнитьВыбор();
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(РежимВыбора) Тогда
		УстановитьНевыбранныйЦветКнопок();
		РежимВыбораПериода = РежимВыбора;
	КонецЕсли;
	
	Если Год < 1 Тогда
		Год = 1;
	КонецЕсли; 
	
	ИзменилсяГод = Ложь;
	ВыбираемыйПериод = Дата(Год, Месяц, 1);
	УстановитьОтображаемуюДату(ВыбираемыйПериод);
	
	ОбновитьОтображениеКалендаря();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыбор()
	
	УстановитьОтображаемуюДату(ВыбираемыйПериод);
	ПриИзмененииОтображаемойДаты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикНажатиеНаЭлементеШкалыВремени(Элемент, ЭлементШкалыВремени, Дата)
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриАктивизации(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры
// }Рарус adilas #16226 -Электронный журнал посещений 2021.05.21

#КонецОбласти

#КонецОбласти