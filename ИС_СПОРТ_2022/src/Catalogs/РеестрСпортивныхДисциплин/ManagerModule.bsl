// {Рарус ivaart IN-17644 Спортивные дисциплины. Перечень  2021.07.20 
// Создание предопределённых элементов по макету

//Процедура проверяет, заполнен ли справочник. Если пустой, то заполняет данными из макета
Процедура ЗаполнитьПредопределённымиСПроверкой() Экспорт
	Выборка = Справочники.РеестрСпортивныхДисциплин.Выбрать();
	Если Не Выборка.Следующий() тогда
		//ЗаполнитьПредопределёнными();
	КонецЕсли;		
КонецПроцедуры 

//Процедура заполняет справочник данными из макета
Функция  ЗаполнитьПредопределёнными() Экспорт 
	//Предопределённые данные находятся в макете
	Макет = ПолучитьМакет("ПредопределённыеДанные");
	
	//Получение видов спорта, для создания спортивных дисциплин
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеестрВидовСпорта.Ссылка КАК Ссылка,
		|	РеестрВидовСпорта.Наименование КАК Наименование
		|ИЗ
		|	Справочник.РеестрВидовСпорта КАК РеестрВидовСпорта
		|ГДЕ
		|	РеестрВидовСпорта.ЭтоГруппа = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ВидыСпорта = новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		ВидыСпорта.Вставить(НРег(СтрЗаменить(Выборка.Наименование,"ё","е")), Выборка.Ссылка);
	КонецЦикла;
	// {Рарус ivaart IN-17644 Спортивные дисциплины. Дубли и обновление записей  2021.08.04 
	//Если создоваемый элемент уже существует в базе, то будет выполнена проверка - изменены ли данные
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеестрСпортивныхДисциплин.Ссылка КАК Ссылка,
		|	РеестрСпортивныхДисциплин.Код КАК Код,
		|	РеестрСпортивныхДисциплин.Владелец КАК Владелец
		|ИЗ
		|	Справочник.РеестрСпортивныхДисциплин КАК РеестрСпортивныхДисциплин";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();	
	ВыводитьОповещение = Ложь;
	ТекстОповещения = "Обновление реестра дисциплин выполнено";
	
	ВидСпорта = Справочники.ВидыСпорта.ПустаяСсылка();
	Для строка = 2 По Макет.ВысотаТаблицы Цикл
		ДанныеКодСпорта = Макет.Область("R"+Формат(Строка,"ЧГ=0")+"C1").Текст;
		Если Не ПустаяСтрока(ДанныеКодСпорта) тогда
			ДанныеСпорт = НРег(Макет.Область("R"+Формат(Строка,"ЧГ=0")+"C2").Текст);
			ВидСпорта = ВидыСпорта.Получить(ДанныеСпорт);
		КонецЕсли;
		
		Если ПустаяСтрока(ВидСпорта) или СтрНайти(ДанныеСпорт,"исключен")<>0 тогда
			Продолжить;
		КонецЕсли;
		
		Данные = Макет.Область("R"+Формат(Строка,"ЧГ=0")+"C4").Текст;
		Если ПустаяСтрока(Данные) тогда
			Продолжить;
		КонецЕсли;
		
		Элемент = СоздатьЭлемент();
		
		Элемент.Владелец = ВидСпорта;
		
		Элемент.Наименование = Макет.Область("R"+Формат(Строка,"ЧГ=0")+"C5").Текст;
		
		Элемент.Код = Данные;
		
		Попытка
			Элемент.Записать();
		Исключение
			ВыводитьОповещение = Истина;
			Ошибка = ОписаниеОшибки();
			Если СтрНайти(Ошибка, """Код"" не уникально") <> 0 тогда
				ПараметрыОтбора = Новый Структура("Код, Владелец", Элемент.Код, Элемент.Владелец); 
				Выборка = РезультатЗапроса.НайтиСтроки(ПараметрыОтбора);
				Если Выборка.Количество()<>0 тогда
					Объект = Выборка.Получить(0).Ссылка;
					Если Объект.Наименование <> Элемент.Наименование тогда 
						ТекстОповещения = ТекстОповещения+"
						|
						|	("+строка+")"+Элемент.Владелец+" - "+Элемент.Код +" - "+Объект.Наименование+" был обновлён на "+Элемент.Наименование;
						Объект = Объект.ПолучитьОбъект();
						Объект.Наименование = Элемент.Наименование;
						объект.Записать();
					КонецЕсли;
				Иначе
					ТекстОповещения = ТекстОповещения+"
					|
					|	("+строка+")В макете обнаружены записи с одним наименованием - "+Элемент.Код+" - и видом спорта - "+Элемент.Владелец;
				КонецЕсли;
			КонецЕсли;
		КонецПопытки;
	КонецЦикла;
	// }Рарус ivaart IN-17644 Спортивные дисциплины. Дубли и обновление записей  2021.08.04
	возврат ТекстОповещения;
КонецФункции

//Процедура удаляет все записи справочника
Функция УдалитьЗаписи() Экспорт
	
	// {Рарус adilas #20330 -Синонимы стандартных реквизитов. РеестрСпортивныхДисциплин 2021.10.05
	МассивОповещений = Новый Массив;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеестрСпортивныхДисциплин.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.РеестрСпортивныхДисциплин КАК РеестрСпортивныхДисциплин";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВсегоДисциплин = ВыборкаДетальныеЗаписи.Количество();
	ТекущийЭлементУдаления = 0;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		 
		ЭлементУдаления = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ТекущийЭлементУдаления = ТекущийЭлементУдаления + 1;
		
		Если НЕ (ТекущийЭлементУдаления % 5) Тогда
			
			ПроцентВыполнения = (ТекущийЭлементУдаления / ВсегоДисциплин) * 100;
			ПроцентВыполнения = Окр(ПроцентВыполнения, 0);
			
			ДлительныеОперации.СообщитьПрогресс(Формат(ПроцентВыполнения, "ЧЦ=3; ЧДЦ="));
			
		КонецЕсли;
			
		ЭлементУдаления.Удалить();
		
	КонецЦикла;
	
	ТекстОповещения = НСтр("ru = 'Удаление элементов выполнено'");;
	МассивОповещений.Добавить(ТекстОповещения);
	
	Возврат МассивОповещений;
	// }Рарус adilas #20330 -Синонимы стандартных реквизитов. РеестрСпортивныхДисциплин 2021.10.05
	
КонецФункции
// }Рарус ivaart IN-17644 Спортивные дисциплины. Перечень  2021.07.20

#Область СлужебныеПроцедурыИФункции

// {Рарус adilas #20330 -Синонимы стандартных реквизитов. РеестрСпортивныхДисциплин 2021.10.05
// Загрузка дисциплин из макета "ПредопределённыеДанные"
&НаСервере
Функция ЗагрузитьМакетВТЗВСправочникНаСервере() Экспорт	
	
	Макет = ПолучитьМакет("ПредопределённыеДанные");
	
	ВыводитьОповещение = Ложь;
	
	ПостроительОтчета  = Новый ПостроительОтчета;                                    
	ПостроительОтчета.ИсточникДанных = Новый ОписаниеИсточникаДанных(Макет.Область(1, 1, Макет.ВысотаТаблицы, Макет.ШиринаТаблицы));
	ПостроительОтчета.Выполнить();
	
	ТабЗначМакета = ПостроительОтчета.Результат.Выгрузить();

	ТекущаяДисциплина = 0;
	ВсегоДисциплин = ТабЗначМакета.Количество();
	
	МассивОповещений = Новый Массив;
	
	Если ТабЗначМакета.Количество() > 0 Тогда
		
		ВыводитьОповещение = Истина;
		ТекстОповещения = НСтр("ru = 'Обновление реестра дисциплин выполнено'");
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РеестрСпортивныхДисциплин.Ссылка КАК Ссылка,
			|	РеестрСпортивныхДисциплин.Наименование КАК Наименование,
			|	РеестрСпортивныхДисциплин.НомерКод КАК НомерКод,
			|	РеестрСпортивныхДисциплин.Владелец КАК Владелец
			|ИЗ
			|	Справочник.РеестрСпортивныхДисциплин КАК РеестрСпортивныхДисциплин
			|ГДЕ
			|	РеестрСпортивныхДисциплин.ПометкаУдаления = ЛОЖЬ
			|	И РеестрСпортивныхДисциплин.ЭтоГруппа = ЛОЖЬ";
		
		РезультатЗапроса = Запрос.Выполнить();
		РезЗапросаРеестрСпортДисци = Запрос.Выполнить().Выгрузить();
		
		СуществующиеСпортДисцип = Новый Соответствие;
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			СуществующиеСпортДисцип.Вставить(ВыборкаДетальныеЗаписи.Наименование, ВыборкаДетальныеЗаписи.Ссылка);
			
		КонецЦикла;
			
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РеестрВидовСпорта.Ссылка КАК Ссылка,
			|	РеестрВидовСпорта.Наименование КАК Наименование
			|ИЗ
			|	Справочник.РеестрВидовСпорта КАК РеестрВидовСпорта
			|ГДЕ
			|	РеестрВидовСпорта.ЭтоГруппа = ЛОЖЬ";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		ВидыСпорта = Новый Соответствие;
		
		Пока Выборка.Следующий() Цикл
			
			ВидыСпорта.Вставить(Выборка.Наименование, Выборка.Ссылка);
			
		КонецЦикла;	
		
		Для Каждого Строка Из ТабЗначМакета Цикл
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("НомерКод", Строка.Номер_кодСпортивнойДисциплины);
			ПараметрыОтбора.Вставить("Наименование", Строка.НаименованиеСпортивнойДисциплины); 
			Выборка = РезЗапросаРеестрСпортДисци.НайтиСтроки(ПараметрыОтбора);
			Если Выборка.Количество() <> 0 Тогда
				
				//Если ТабЗначМакета.Количество() = РезЗапросаРеестрСпортДисци.Количество() Тогда
				//	
				//	ТекстОповещения = НСтр("ru = 'Данные реестра не требуют обновления'");
				//	МассивОповещений.Добавить(ТекстОповещения);
				//	Возврат МассивОповещений;
				//	
				//КонецЕсли;
				
				Объект = Выборка.Получить(0).Ссылка;
				Если Объект.Наименование = Строка.НаименованиеСпортивнойДисциплины Тогда
					
					ТекстОповещения = СтрШаблон(НСтр("ru = 'Дисциплина уже есть в реестре: ""%1"" с номер-кодом ""%2"".'"), Объект.Наименование, Объект.НомерКод);
					МассивОповещений.Добавить(ТекстОповещения);
					Продолжить;
						
				КонецЕсли;
			КонецЕсли;
			
			НаименованиеВидаСпорта = Строка.НаименованиеВидаСпорта;               
			Если Не ПустаяСтрока(НаименованиеВидаСпорта) Тогда
				ДанныеСпорт = Строка.НаименованиеВидаСпорта;
				ВидСпорта = ВидыСпорта.Получить(ДанныеСпорт);
			КонецЕсли;
			
			Если ПустаяСтрока(ВидСпорта) ИЛИ СтрНайти(ДанныеСпорт, "исключен") <> 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Данные = Строка.НаименованиеСпортивнойДисциплины;
			Если ПустаяСтрока(Данные) Тогда
				Продолжить;
			КонецЕсли; 
			
			Попытка
				
				Элемент = Справочники.РеестрСпортивныхДисциплин.СоздатьЭлемент();
				
				Элемент.Владелец = ВидСпорта;
				Элемент.НомерКод = Строка.Номер_кодСпортивнойДисциплины;
				Элемент.Наименование = Строка.НаименованиеСпортивнойДисциплины;
				Элемент.Записать();
				
			Исключение                                                                                                
				
				ВыводитьОповещение = Истина;
				ТекстОповещения = СтрШаблон(НСтр("ru = 'Не удалось записать эелемент справочника по причине: %1'"), ОписаниеОшибки());
				МассивОповещений.Добавить(ТекстОповещения);
				
			КонецПопытки;
			
			Если НЕ (ТекущаяДисциплина % 5) Тогда
				
				ПроцентВыполнения = (ТекущаяДисциплина / ВсегоДисциплин) * 100;
				ПроцентВыполнения = Окр(ПроцентВыполнения, 0);
				
				ДлительныеОперации.СообщитьПрогресс(Формат(ПроцентВыполнения, "ЧЦ=3; ЧДЦ="));
				
			КонецЕсли;
			
			ТекущаяДисциплина = ТекущаяДисциплина + 1;
			
		КонецЦикла;
		
	КонецЕсли;

	ВыводитьОповещение = Истина;
	Возврат МассивОповещений;
	
КонецФункции
// }Рарус adilas #20330 -Синонимы стандартных реквизитов. РеестрСпортивныхДисциплин 2021.10.05

#КонецОбласти