
#Область ОбработчикиСобытийФормы

// {Рарус adilas #20330 -Синонимы стандартных реквизитов. РеестрСпортивныхДисциплин 2021.10.05
// Включить видимость кнопки удалить записи для Администратора
&НаСервере
Процедура ПриОткрытииНаСервере()
	
	Если РольДоступна("АдминистраторСистемы") Тогда
		Элементы.ФормаУдалитьЗаписи.Видимость = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриОткрытииНаСервере();
	
КонецПроцедуры
// }Рарус adilas #20330 -Синонимы стандартных реквизитов. РеестрСпортивныхДисциплин 2021.10.05

#КонецОбласти

// {Рарус ivaart IN-17644 Спортивные дисциплины. Фоновое обновление реестра дисциплин  2021.08.04
&НаКлиенте
Процедура ЗаполнитьПредопределёнными(Команда)
	ДлительнаяОперация = НачатьВыполнениеНаСервере();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультат", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция НачатьВыполнениеНаСервере()
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "Справочники.РеестрСпортивныхДисциплин.ЗаполнитьПредопределёнными");
КонецФункции

&НаКлиенте
Процедура ОбработатьРезультат(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элементы.Список.Обновить();
	Сообщить(ПолучитьИзВременногоХранилища(Результат.АдресРезультата));
КонецПроцедуры
// }Рарус ivaart IN-17644 Спортивные дисциплины. Фоновое обновление реестра дисциплин  2021.08.04

#Область ОбработчикиКомандФормы

// {Рарус adilas #20330 -Синонимы стандартных реквизитов. РеестрСпортивныхДисциплин 2021.10.05
&НаКлиенте
Процедура НачатьЗагрузкуМакетов(Команда)
	
	Элементы.ИндикаторЗагрузки.Видимость = Истина;
	Элементы.ФормаУдалитьЗаписи.Доступность = Ложь;
	Элементы.ФормаКнопкаНачатьЗагрузкуМакетов.Доступность = Ложь;
	ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ПрогрессВыполнения", ЭтотОбъект);
    Индикатор = 0;
	
	//Имя функции которая будет выполнятся фоном из модуля менеджера справочника на сервере.  
	ДлительнаяОперация = НачатьЗагрузкуМакетовНаСервере();
 
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = ОповещениеОПрогрессеВыполнения;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	//Подключение обработчика завершения фонового задания.
	ОповещениеОЗавершении = Новый ОписаниеОповещения("НачатьЗагрузкуМакетовЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);	
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗаписи(Команда)
	
	Элементы.ИндикаторЗагрузки.Видимость = Истина;
	Элементы.ФормаУдалитьЗаписи.Доступность = Ложь;
	Элементы.ФормаКнопкаНачатьЗагрузкуМакетов.Доступность = Ложь;
	ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ПрогрессВыполнения", ЭтотОбъект);
	Индикатор = 0;
	
	//Имя функции которая будет выполнятся фоном из модуля менеджера справочника на сервере.
	ДлительнаяОперация = УдалитьЗаписиНаСервереНаСервере();
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = ОповещениеОПрогрессеВыполнения;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	//Подключение обработчика завершения фонового задания.
	ОповещениеОЗавершении = Новый ОписаниеОповещения("УдалитьЗаписиНаСервереЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПрогрессВыполнения(Прогресс, ДополнительныеПараметры) Экспорт
	
	ПрогрессВыполненияНаСервере(Прогресс, ДополнительныеПараметры);	
	
КонецПроцедуры

&НаСервере
Процедура ПрогрессВыполненияНаСервере(Прогресс, ДополнительныеПараметры)
	
	Прогресс = ДлительныеОперации.ПрочитатьПрогресс(Прогресс.ИдентификаторЗадания);
	Если НЕ ТипЗнч(Прогресс) = Тип("Структура") Тогда
		//ЭтаФорма.СтрокаСостояния = "";
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Прогресс) = Тип("Структура") И Прогресс.Свойство("ЗавершеноАварийно") Тогда
		//ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
		Возврат;
	КонецЕсли;
	
	Если Прогресс.Свойство("ЗаданиеВыполнено") И Прогресс.ЗаданиеВыполнено Тогда
		ЭтаФорма.Индикатор = 100;
		//ЭтаФорма.СтрокаСостояния = "Задание завершено.";
	Иначе
		Если Прогресс.Свойство("Процент") Тогда
			ЭтаФорма.Индикатор = Прогресс.Процент;
			Элементы.Список.Обновить();
		КонецЕсли;
		
		//Если Прогресс.Свойство("Текст") Тогда
		//	ЭтаФорма.СтрокаСостояния = Прогресс.Текст;
		//КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Функция описывающая выполнение длительной операции
&НаСервере
Функция НачатьЗагрузкуМакетовНаСервере()
	
	НаименованиеЗадания = НСтр("ru = 'Загрузка макетов спортивных дисциплин '");
	ВыполняемыйМетод = "Справочники.РеестрСпортивныхДисциплин.ЗагрузитьМакетВТЗВСправочникНаСервере";
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);	
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ВыполняемыйМетод);

КонецФункции

// Вызывается после завершения выполнения процедуры длительной операции
&НаКлиенте
Процедура НачатьЗагрузкуМакетовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		// обрабатываем результат
		МассивОповещений = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Элементы.Список.Обновить();
		
		Индикатор = 100;
		Элементы.ФормаКнопкаНачатьЗагрузкуМакетов.Доступность = Истина;
		Элементы.ФормаУдалитьЗаписи.Доступность = Истина;
		
		Для Каждого ТекстОповещения Из МассивОповещений Цикл	
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОповещения);		
		КонецЦикла;	
		
		ВозвратноеЗначение = МассивОповещений.Количество();
	КонецЕсли;
	
КонецПроцедуры

// Функция описывающая выполнение длительной операции
&НаСервере
Функция УдалитьЗаписиНаСервереНаСервере()
	
	НаименованиеЗадания = НСтр("ru = 'Удаление макетов спортивных дисциплин '");
	ВыполняемыйМетод = "Справочники.РеестрСпортивныхДисциплин.УдалитьЗаписи";
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);	
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ВыполняемыйМетод);

КонецФункции

// Вызывается после завершения выполнения процедуры длительной операции
&НаКлиенте
Процедура УдалитьЗаписиНаСервереЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		// обрабатываем результат
		МассивОповещений = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Элементы.Список.Обновить();
		
		Индикатор = 100;
		
		Для Каждого ТекстОповещения Из МассивОповещений Цикл	
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОповещения);		
		КонецЦикла;	
		
		ВозвратноеЗначение = МассивОповещений.Количество();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Элементы.ИндикаторЗагрузки.Видимость = Ложь;
	
КонецПроцедуры
// }Рарус adilas #20330 -Синонимы стандартных реквизитов. РеестрСпортивныхДисциплин 2021.10.05

#КонецОбласти