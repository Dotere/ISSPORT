#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	ДополнительныеПараметры = УправлениеКонтактнойИнформацией.ПараметрыКонтактнойИнформации();
	ДополнительныеПараметры.ИмяЭлементаДляРазмещения = "ГруппаКонтактнаяИнформация";
	ДополнительныеПараметры.ПоложениеЗаголовкаКИ = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокВидовСпорта,"Владелец", Объект.Ссылка, Истина);
	
	// {Рарус adilas #22219 -Функциональные опции 2021.11.09
	ПриОткрытииИспользоватьВозрастныеГруппы = Объект.ИспользоватьВозрастныеГруппы;
	ПриОткрытииИспользоватьСтрахованиеСпортсменов = Объект.ИспользоватьСтрахованиеСпортсменов;
	// }Рарус adilas #22219 -Функциональные опции 2021.11.09
	
	// {Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07	
	Если НЕ УчетСпортсменовВызовСервера.ТекущиеПараметрыФО().ВозрастныеГруппыОрганизация Тогда
		Элементы.СтраницаМеждународныеВозрастныеГруппы.Видимость = Ложь;
	Иначе
		Элементы.СтраницаМеждународныеВозрастныеГруппы.Видимость = Истина;
	КонецЕсли;
	// }Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
    
    ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокВидовСпорта, "Владелец", Объект.Ссылка, , , Не Объект.Ссылка.Пустая());
	
	// {Рарус adilas #15518 -Проверка на запись  2021.06.29
	Если Объект.Ссылка.Пустая() Тогда
		Элементы.Директор.Доступность = Ложь;
	Иначе
		Элементы.Директор.Доступность = Истина;
	КонецЕсли
	// }Рарус adilas #15518 -Проверка на запись  2021.06.29
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьНастроек();
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// {Рарус adilas #20286 -Страница тренера. 2021.09.16
	// Проверка для копирования адреса если флаг установлен
	Если Объект.СовпадаетАдрес Тогда
		//Имя состоит из МенюПодменюАдресКонтактная + Имя поля формы для замещения _ Имя поля формы значением которого будет замещено поле формы 
		ИмяКомандыДляФактическогоАдреса = "МенюПодменюАдресКонтактнаяИнформацияПоле3e584fbbx6e57x11eaxa218x00155d1eed181_КонтактнаяИнформацияПоле3e584fbcx6e57x11eaxa218x00155d1eed181";
		ИмяКомандыДляПочтовогоАдреса 	= "МенюПодменюАдресКонтактнаяИнформацияПоле3e584fb8x6e57x11eaxa218x00155d1eed181_КонтактнаяИнформацияПоле3e584fbcx6e57x11eaxa218x00155d1eed181";
		УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляФактическогоАдреса);
		УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляПочтовогоАдреса);
	КонецЕсли;
	// }Рарус adilas #20286 -Страница тренера. 2021.09.16
	// {Рарус dotere #22114 -Включает и отключает напоминания 2021.11.12
	Если УчетСпортсменовВызовСервера.ТекущаяОрганизацияНапоминания() И ЗначениеЗаполнено(УчетСпортсменовВызовСервера.ТекущаяОрганизация()) Тогда
		УстановитьНапоминание(Истина);
		НапоминанияПользователяКлиент.Включить();
	Иначе
		УстановитьНапоминание(Ложь);
		НапоминанияПользователяКлиент.Выключить();
	КонецЕсли;	
	// }Рарус dotere #22114 -Включает и отключает напоминания 2021.11.12
КонецПроцедуры

&НаСервере
Процедура УстановитьНапоминание(Выбор)
	Если Выбор Тогда
		Константы.ИспользоватьНапоминанияПользователя.Установить(Истина);
	Иначе
		Константы.ИспользоватьНапоминанияПользователя.Установить(Ложь);
	КонецЕсли
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

    Если НЕ ЗначениеЗаполнено(Объект.ПолноеНаименование) Тогда
    
    	 Объект.ПолноеНаименование = Объект.Наименование;
    
     КонецЕсли; 
     
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
    
    // {Рарус kotana #IN-18113 -Ошибка при повторной записи объекта  2021.05.26
    //// СтандартныеПодсистемы.КонтактнаяИнформация
    //УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект);
    //// Конец СтандартныеПодсистемы.КонтактнаяИнформация
    //
    //// {Рарус adilas #15377 -Копирование адреса  2021.05.26
    //Если Объект.СовпадаетАдрес Тогда
    //	
    //	ОрганизацияОбъект = Объект.Ссылка.ПолучитьОбъект();
    //	
    //	КонтИнформацияJSON = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ОрганизацияОбъект, 
    //	Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации, ТекущаяДатаСеанса(), Ложь);
    //	СтруктураКИФактАдресОрганизации = УправлениеКонтактнойИнформациейСлужебный.СтрокуJSONВСтруктуру(КонтИнформацияJSON[0].Значение);
    //	
    //	ЮрАдресОрганизацииJSON = УправлениеКонтактнойИнформациейСлужебный.СтруктураВСтрокуJSON(СтруктураКИФактАдресОрганизации);
    //	
    //	УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(ОрганизацияОбъект, ЮрАдресОрганизацииJSON, 
    //	Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, ТекущаяДатаСеанса(), Истина);
    //	
    //	УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(ОрганизацияОбъект, ЮрАдресОрганизацииJSON, 
    //	Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации, ТекущаяДатаСеанса(), Истина);
    //	
    //	ОрганизацияОбъект.Записать();
    //	
    //КонецЕсли;
	// }Рарус adilas #15377 -Копирование адреса  2021.05.26
    // }Рарус kotana #IN-18113 -Ошибка при повторной записи объекта  2021.05.26
	// {Рарус adilas #15518 -Проверка и запись в регистр Соответствия физ лиц и огранизаций  2021.06.29
	Если Не Объект.Ссылка.Пустая() И Не Объект.Директор.Пустая() Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СоответствияФизическихЛицИОрганизаций.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СоответствияФизическихЛицИОрганизаций.Организация КАК Организация
			|ИЗ
			|	РегистрСведений.СоответствияФизическихЛицИОрганизаций КАК СоответствияФизическихЛицИОрганизаций
			|ГДЕ
			|	СоответствияФизическихЛицИОрганизаций.ФизическоеЛицо = &ФизическоеЛицо
			|	И СоответствияФизическихЛицИОрганизаций.Организация = &Организация";
		
		Запрос.УстановитьПараметр("Организация", Объект.Ссылка);
		Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.Директор);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Запись = РегистрыСведений.СоответствияФизическихЛицИОрганизаций.СоздатьМенеджерЗаписи();
			Запись.Период = ТекущаяДатаСеанса();
			Запись.ФизическоеЛицо = Объект.Директор;
			Запись.Организация = Объект.Ссылка;
			Запись.Записать();
		КонецЕсли
	КонецЕсли;
	
	// }Рарус adilas #15518 -Проверка и запись в регистр Соответствия физ лиц и огранизаций  2021.06.29
КонецПроцедуры

// {Рарус kotana #IN-18113 -Ошибка при повторной записи объекта  2021.05.26
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

КонецПроцедуры
// }Рарус kotana #IN-18113 -Ошибка при повторной записи объекта  2021.05.26

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Элементы.ЗаглушкаГруппы.Видимость = Истина;
	Элементы.ЗаглушкаКоманды.Видимость = Истина;
	Элементы.ЗаглушкаМеждународныеВозрастныеГруппы.Видимость = Истина;
	Элементы.ЗаглушкаНормативы.Видимость = Истина;
	Элементы.ЗаглушкаРейтинги.Видимость = Истина;
	Элементы.ЗаглушкаСоревнования.Видимость = Истина;
	
	// {Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	//
	ОбновитьИнтерфейс();
	// }Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	
	// {Рарус adilas #15518 -Проверка на запись  2021.06.29
	Если Объект.Ссылка.Пустая() Тогда
		Элементы.Директор.Доступность = Ложь;
	Иначе
		Элементы.Директор.Доступность = Истина;
	КонецЕсли
	// }Рарус adilas #15518 -Проверка на запись  2021.06.29
КонецПроцедуры

// {Рарус adilas #22219 -Функциональные опции 2021.11.09
&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ПриОткрытииИспользоватьВозрастныеГруппы <> Объект.ИспользоватьВозрастныеГруппы Тогда
			
		ИзменитьЗначениеФОДляОрганизацииНаСервере();
		ОбновитьИнтерфейс();	
				
	ИначеЕсли ПриОткрытииИспользоватьСтрахованиеСпортсменов <> Объект.ИспользоватьСтрахованиеСпортсменов Тогда
		
		ИзменитьЗначениеФОДляОрганизацииНаСервере();
		ОбновитьИнтерфейс();	
		
	КонецЕсли;
	
КонецПроцедуры
// }Рарус adilas #22219 -Функциональные опции 2021.11.09

#КонецОбласти

#Область ОбработчикиКомандФормы

// {Рарус adilas #15447 -Добавление вида спорта по реестру 2021.04.21
&НаКлиенте
Процедура ПодобратьИзРеестраВидовСпорта(Команда)
    
    ПараметрВыбора = Новый Структура("РежимВыбора,ЗакрыватьПриВыборе", Истина, Истина);
    Оповещение = Новый ОписаниеОповещения("ОбработкаВыбранногоЭлемента", ЭтаФорма);
    
    ОткрытьФорму("Справочник.РеестрВидовСпорта.ФормаВыбора", ПараметрВыбора, ЭтаФорма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
    
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбранногоЭлемента(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
    
    Если НЕ РезультатЗакрытия = Неопределено Тогда
    
    	  ПараметрыЗаполнения = Новый Структура("Наименование, ВидСпортаПоРеестру, Владелец") ;
          ЗаполнитьПараметры(ПараметрыЗаполнения, РезультатЗакрытия);
          ОткрытьФорму("Справочник.ВидыСпорта.Форма.ФормаЭлемента", ПараметрыЗаполнения, ЭтаФорма);
          
    КонецЕсли; 
    
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметры(ПараметрыЗаполнения, Источник)
	
	ПараметрыЗаполнения.Владелец = ПараметрыСеанса.ТекущаяОрганизация;
    ПараметрыЗаполнения.Наименование = Источник.Наименование;
    ПараметрыЗаполнения.ВидСпортаПоРеестру = Источник.Ссылка;
    
КонецПроцедуры
// }Рарус adilas #15447 -Добавление вида спорта по реестору 2021.04.21

#КонецОбласти

#Область ОбработчикиСобытийДинамическихСписков

&НаКлиенте
Процедура СписокВидовСпортаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ Копирование Тогда
	   Отказ = Истина;
	   ПараметрыФормы = Новый Структура("Владелец",Объект.Ссылка);
	   ОткрытьФорму("Справочник.ВидыСпорта.Форма.ФормаЭлемента",ПараметрыФормы,ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередНачаломДобавленияПрограммноСозданныйСписок(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Если Не Копирование Тогда
		
		Отказ = Истина;
		
		Если Элемент.Имя = "СписокМеждународныхВозрастныхГрупп" Тогда
		   ИмяСправочника = "МеждународныеВозрастныеГруппы";
		ИначеЕсли Элемент.Имя = "СписокКоманд" Тогда
		   ИмяСправочника = "Команды";
		ИначеЕсли Элемент.Имя = "СписокНормативы" Тогда
		   ИмяСправочника = "Нормативы";
		ИначеЕсли Элемент.Имя = "СписокРейтинги" Тогда
		   ИмяСправочника = "Рейтинги";
		ИначеЕсли Элемент.Имя = "СписокСоревнования" Тогда
		   ИмяСправочника = "Соревнование";
	    Иначе
		   ИмяСправочника = "Группа";
	   КонецЕсли;
	   
	   ПараметрыФормы = Новый Структура("Владелец",Объект.Ссылка);
	   ОткрытьФорму("Справочник." + ИмяСправочника + ".Форма.ФормаЭлемента",ПараметрыФормы,ЭтаФорма);
		
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти

#Область КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаСервере
Функция Подключаемый_ОбновитьКонтактнуюИнформацию(Результат) Экспорт
	
	РезультатОбновления = УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	
	Возврат РезультатОбновления;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеСтраниц

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница.Имя = "СтраницаГруппы" Тогда
		Если Элементы.Найти("СписокГрупп") = Неопределено Тогда
			Элементы.ЗаглушкаГруппы.Видимость = Ложь;
			СформироватьДинамическийСписокГрупп();
		Иначе
			Возврат
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница.Имя = "СтраницаКоманды" Тогда
		Если Элементы.Найти("СписокКоманд") = Неопределено Тогда
			Элементы.ЗаглушкаКоманды.Видимость = Ложь;
			СформироватьДинамическийСписокКоманд();
		Иначе
			Возврат
		КонецЕсли;
	// {Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	ИначеЕсли ТекущаяСтраница.Имя = "СтраницаМеждународныеВозрастныеГруппы" Тогда
		Если УчетСпортсменовВызовСервера.ТекущиеПараметрыФО().ВозрастныеГруппыОрганизация Тогда
			Если Элементы.Найти("СписокМеждународныхВозрастныхГрупп") = Неопределено Тогда
				Элементы.ЗаглушкаМеждународныеВозрастныеГруппы.Видимость = Ложь;
				СформироватьДинамическийСписокМеждународныхВозрастныхГрупп();
			Иначе
				Возврат;
			КонецЕсли;
	КонецЕсли;
	// }Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	
	ИначеЕсли ТекущаяСтраница.Имя = "СтраницаНормативы" Тогда
		Если Элементы.Найти("СписокНормативы") = Неопределено Тогда
			Элементы.ЗаглушкаНормативы.Видимость = Ложь;
			СформироватьДинамическийСписокНормативы();
		Иначе
			Возврат
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница.Имя = "СтраницаРейтинги" Тогда
		Если Элементы.Найти("СписокРейтинги") = Неопределено Тогда
			Элементы.ЗаглушкаРейтинги.Видимость = Ложь;
			СформироватьДинамическийСписокРейтинги();
		Иначе
			Возврат
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница.Имя = "СтраницаСоревнования" Тогда
		Если Элементы.Найти("СписокСоревнования") = Неопределено Тогда
			Элементы.ЗаглушкаСоревнования.Видимость = Ложь;
			СформироватьДинамическийСписокСоревнования();
		Иначе
			Возврат
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДинамическийСписокГрупп()
		
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Группа.Ссылка КАК Ссылка,
	               |	Группа.Код КАК Код,
	               |	Группа.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник.Группа КАК Группа
	               |ГДЕ
	               |	Группа.Владелец = &Владелец";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Наименование,Наименование");
	МассивКолонок.Добавить("Код,Код");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокГрупп", ТекстЗапроса, МассивКолонок,,"Справочник.Группа", "СтраницаГруппы",,, Новый Структура("Владелец",Объект.Ссылка));
	Элементы["СписокГрупп"].УстановитьДействие("ПередНачаломДобавления", "ПередНачаломДобавленияПрограммноСозданныйСписок");
		
КонецПроцедуры

&НаСервере
Процедура СформироватьДинамическийСписокКоманд()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Команды.Ссылка КАК Ссылка,
	               |	Команды.Код КАК Код,
	               |	Команды.Наименование КАК Наименование,
	               |	Команды.ПолноеНаименование КАК ПолноеНаименование
	               |ИЗ
	               |	Справочник.Команды КАК Команды
	               |ГДЕ
	               |	Команды.Владелец = &Владелец";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Наименование,Наименование");
	МассивКолонок.Добавить("Полное наименование,ПолноеНаименование");
	МассивКолонок.Добавить("Код,Код");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокКоманд", ТекстЗапроса, МассивКолонок,,"Справочник.Команды", "СтраницаКоманды",,, Новый Структура("Владелец",Объект.Ссылка));
	Элементы["СписокКоманд"].УстановитьДействие("ПередНачаломДобавления", "ПередНачаломДобавленияПрограммноСозданныйСписок");

	
КонецПроцедуры	

&НаСервере
Процедура СформироватьДинамическийСписокМеждународныхВозрастныхГрупп()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	МеждународныеВозрастныеГруппы.Код КАК Код,
	               |	МеждународныеВозрастныеГруппы.Наименование КАК Наименование,
	               |	МеждународныеВозрастныеГруппы.ВозрастОт КАК ВозрастОт,
	               |	МеждународныеВозрастныеГруппы.ВозрастДо КАК ВозрастДо,
	               |	МеждународныеВозрастныеГруппы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.МеждународныеВозрастныеГруппы КАК МеждународныеВозрастныеГруппы
	               |ГДЕ
	               |	МеждународныеВозрастныеГруппы.Владелец = &Владелец";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Наименование,Наименование");
	МассивКолонок.Добавить("Код,Код");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокМеждународныхВозрастныхГрупп", ТекстЗапроса, МассивКолонок,,"Справочник.МеждународныеВозрастныеГруппы", "СтраницаМеждународныеВозрастныеГруппы",,, Новый Структура("Владелец",Объект.Ссылка));
	Элементы["СписокМеждународныхВозрастныхГрупп"].УстановитьДействие("ПередНачаломДобавления", "ПередНачаломДобавленияПрограммноСозданныйСписок");
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьДинамическийСписокНормативы()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Нормативы.Наименование КАК Наименование,
	               |	Нормативы.Код КАК Код
	               |ИЗ
	               |	Справочник.Нормативы КАК Нормативы
	               |ГДЕ
	               |	Нормативы.Владелец = &Владелец";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Наименование,Наименование");
	МассивКолонок.Добавить("Код,Код");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокНормативы", ТекстЗапроса, МассивКолонок,,"Справочник.Нормативы", "СтраницаНормативы",,, Новый Структура("Владелец",Объект.Ссылка));
	Элементы["СписокНормативы"].УстановитьДействие("ПередНачаломДобавления", "ПередНачаломДобавленияПрограммноСозданныйСписок");
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьДинамическийСписокРейтинги()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Рейтинги.Ссылка КАК Ссылка,
	               |	Рейтинги.Код КАК Код,
	               |	Рейтинги.Наименование КАК Наименование,
	               |	Рейтинги.ПолноеНаименование КАК ПолноеНаименование,
	               |	Рейтинги.ВладелецРейтинга КАК ВладелецРейтинга,
	               |	Рейтинги.Организатор КАК Организатор,
	               |	Рейтинги.ДатаПодсчетаРейтинга КАК ДатаПодсчетаРейтинга
	               |ИЗ
	               |	Справочник.Рейтинги КАК Рейтинги
	               |ГДЕ
	               |	Рейтинги.Владелец = &Владелец";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Наименование,Наименование");
	МассивКолонок.Добавить("Полное наименование,ПолноеНаименование");
	МассивКолонок.Добавить("Владелец рейтинга,ВладелецРейтинга");
	МассивКолонок.Добавить("Организатор,Организатор");
	МассивКолонок.Добавить("Код,Код");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокРейтинги", ТекстЗапроса, МассивКолонок,,"Справочник.Рейтинги", "СтраницаРейтинги",,, Новый Структура("Владелец",Объект.Ссылка));
	Элементы["СписокРейтинги"].УстановитьДействие("ПередНачаломДобавления", "ПередНачаломДобавленияПрограммноСозданныйСписок");
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДинамическийСписокСоревнования()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	Соревнование.Ссылка КАК Ссылка,
	              |	Соревнование.Код КАК Код,
	              |	Соревнование.Наименование КАК Наименование,
	              |	Соревнование.ПолноеНаименование КАК ПолноеНаименование
	              |ИЗ
	              |	Справочник.Соревнование КАК Соревнование
	              |ГДЕ
	              |	Соревнование.Владелец = &Владелец";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Наименование,Наименование");
	МассивКолонок.Добавить("Полное наименование,ПолноеНаименование");
	МассивКолонок.Добавить("Код,Код");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокСоревнования", ТекстЗапроса, МассивКолонок,,"Справочник.Соревнование", "СтраницаСоревнования",,, Новый Структура("Владелец",Объект.Ссылка));
	Элементы["СписокСоревнования"].УстановитьДействие("ПередНачаломДобавления", "ПередНачаломДобавленияПрограммноСозданныйСписок");
	
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСтраниц

// {Рарус adilas #15377 -Копирование адреса  2021.05.26
&НаКлиенте
Процедура СовпадаетАдресПриИзменении(Элемент)

	Если Объект.СовпадаетАдрес = Истина Тогда
		Если ЗначениеЗаполнено(ЭтаФорма.КонтактнаяИнформацияПоле3e584fbbx6e57x11eaxa218x00155d1eed181) ИЛИ 
			ЗначениеЗаполнено(ЭтаФорма.КонтактнаяИнформацияПоле3e584fb8x6e57x11eaxa218x00155d1eed181) Тогда
			
			ВопросОКопировании = Новый ОписаниеОповещения("ПослеЗакрытияВопросаКопированиеАдреса", ЭтотОбъект);	
			ПоказатьВопрос(ВопросОКопировании,
								НСтр("ru='Фактический и почтовый адреса будут заполнены данными Юридического адреса. Продолжить?'"), 
								РежимДиалогаВопрос.ДаНетОтмена, 
								0, КодВозвратаДиалога.Да,                                       
								НСтр("ru='Копирование адреса'"));            
		Иначе						
			//Имя состоит из МенюПодменюАдресКонтактная + Имя поля формы для замещения _ Имя поля формы значением которого будет замещено поле формы 
			ИмяКомандыДляФактическогоАдреса = "МенюПодменюАдресКонтактнаяИнформацияПоле3e584fbbx6e57x11eaxa218x00155d1eed181_КонтактнаяИнформацияПоле3e584fbcx6e57x11eaxa218x00155d1eed181";
			ИмяКомандыДляПочтовогоАдреса 	= "МенюПодменюАдресКонтактнаяИнформацияПоле3e584fb8x6e57x11eaxa218x00155d1eed181_КонтактнаяИнформацияПоле3e584fbcx6e57x11eaxa218x00155d1eed181";
			УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляФактическогоАдреса);
			УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляПочтовогоАдреса);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры
// }Рарус adilas #15377 -Копирование адреса  2021.05.26
	
&НаКлиенте
Процедура АвтоматическиеНапоминанияПользователямПриИзменении(Элемент)
	
	УстановитьВидимостьНастроек();
   
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьНастроек()
    
    Если Объект.АвтоматическиеНапоминанияПользователям Тогда 
    	 Элементы.ГруппаНапоминанияНастройки.Видимость = Истина;     
     Иначе     
        Элементы.ГруппаНапоминанияНастройки.Видимость = Ложь; 
    КонецЕсли;
    
КонецПроцедуры

// {Рарус dotere #15362 -создание организаторов на основании  2021.06.28
&НаКлиенте
Процедура СоздатьОрганизацию(Команда)
	Если Объект.ОрганизаторСоревнования.Пустая() Тогда
		Если Не ПоискОрганизатораСоревнований() Тогда
		
		Параметр = Новый Структура;
		Параметр.Вставить("Наименование",Объект.Наименование);
		Параметр.Вставить("ПолноеНаименование",Объект.ПолноеНаименование);
		Параметр.Вставить("Директор",Объект.Директор);
		Параметр.Вставить("Организация",Объект.Ссылка);
		ОткрытьФорму("Справочник.ОрганизаторыСоревнований.Форма.ФормаЭлемента", Параметр);
			
		КонецЕсли
	КонецЕсли
КонецПроцедуры

&НаСервере
Функция ПоискОрганизатораСоревнований()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОрганизаторыСоревнований.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ОрганизаторыСоревнований КАК ОрганизаторыСоревнований
		|ГДЕ
		|	ОрганизаторыСоревнований.ПометкаУдаления = ЛОЖЬ
		|	И ОрганизаторыСоревнований.Наименование = &Наименование
		|	И ОрганизаторыСоревнований.ПолноеНаименование = &ПолноеНаименование
		|	И ОрганизаторыСоревнований.Директор = &Директор
		|	И ОрганизаторыСоревнований.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
	Запрос.УстановитьПараметр("Директор", Объект.Директор);
	Запрос.УстановитьПараметр("Наименование", Объект.Наименование);
	Запрос.УстановитьПараметр("ПолноеНаименование", Объект.ПолноеНаименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Объект.ОрганизаторСоревнования = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;
	    Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗакрытиеФормы" И Не Параметр.Пустая()  Тогда
		Объект.ОрганизаторСоревнования = Параметр;
	КонецЕсли;
КонецПроцедуры

//{Рарус kotana #IN-18113 -Заполнять сокращенное наименование по полному  2021.07.12
&НаКлиенте
Процедура ПолноеНаименованиеПриИзменении(Элемент)
    
    Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
    
    	Объект.Наименование = Объект.ПолноеНаименование;
    
    КонецЕсли;
    
КонецПроцедуры
//}Рарус kotana #IN-18113 -Заполнять сокращенное наименование по полному  2021.07.12

// }Рарус dotere #15362 -создание организаторов на основании  2021.06.28

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// {Рарус adilas #15377 -Копирование адреса 2021.08.20
&НаКлиенте
Процедура ПослеЗакрытияВопросаКопированиеАдреса(Результат, Параметры) Экспорт
	                                                                      
    Если Результат = КодВозвратаДиалога.Да Тогда
		Если ЗначениеЗаполнено(ЭтаФорма.КонтактнаяИнформацияПоле3e584fbcx6e57x11eaxa218x00155d1eed181) Тогда
			//Имя состоит из МенюПодменюАдресКонтактная + Имя поля формы для замещения _ Имя поля формы значением которого будет замещено поле формы 
			ИмяКомандыДляФактическогоАдреса = "МенюПодменюАдресКонтактнаяИнформацияПоле3e584fbbx6e57x11eaxa218x00155d1eed181_КонтактнаяИнформацияПоле3e584fbcx6e57x11eaxa218x00155d1eed181";
			ИмяКомандыДляПочтовогоАдреса 	= "МенюПодменюАдресКонтактнаяИнформацияПоле3e584fb8x6e57x11eaxa218x00155d1eed181_КонтактнаяИнформацияПоле3e584fbcx6e57x11eaxa218x00155d1eed181";
			УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляФактическогоАдреса);
			УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляПочтовогоАдреса);
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Юридический адрес при копировании не должен быть пустым!'"));
			Объект.СовпадаетАдрес = Ложь;
		КонецЕсли;
	Иначе
		Объект.СовпадаетАдрес = Ложь;
	КонецЕсли;	
 
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВозрастныеГруппыПриИзменении(Элемент)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Нельзя изменять функционал для не записанной организации'"));
		Объект.ИспользоватьВозрастныеГруппы = Ложь;	
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСтрахованиеСпортсменовПриИзменении(Элемент)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Нельзя изменять функционал для не записанной организации'"));
		Объект.ИспользоватьСтрахованиеСпортсменов = Ложь;	
	
	КонецЕсли;
	
КонецПроцедуры
// }Рарус adilas #15377 -Копирование адреса  2021.08.20

// {Рарус adilas #22219 -Функциональные опции 2021.11.18
&НаСервере
Процедура ИзменитьЗначениеФОДляОрганизацииНаСервере()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиФОДляОрганизации.Организация КАК Организация,
		|	НастройкиФОДляОрганизации.ИспользоватьВозрастныеГруппы КАК ИспользоватьВозрастныеГруппы,
		|	НастройкиФОДляОрганизации.ИспользоватьСтрахованиеСпортсменов КАК ИспользоватьСтрахованиеСпортсменов
		|ИЗ
		|	РегистрСведений.НастройкиФОДляОрганизации КАК НастройкиФОДляОрганизации
		|ГДЕ
		|	НастройкиФОДляОрганизации.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда 
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			НоваяЗапись = РегистрыСведений.НастройкиФОДляОрганизации.СоздатьМенеджерЗаписи();
			НоваяЗапись.Организация = Объект.Ссылка;
			НоваяЗапись.ИспользоватьВозрастныеГруппы = Объект.ИспользоватьВозрастныеГруппы;
			НоваяЗапись.ИспользоватьСтрахованиеСпортсменов = Объект.ИспользоватьСтрахованиеСпортсменов;
			НоваяЗапись.Записать(Истина);
			
		КонецЦикла;
		
	Иначе
		
		НоваяЗапись = РегистрыСведений.НастройкиФОДляОрганизации.СоздатьМенеджерЗаписи();
		НоваяЗапись.Организация = Объект.Ссылка;
		НоваяЗапись.ИспользоватьВозрастныеГруппы = Объект.ИспользоватьВозрастныеГруппы;
		НоваяЗапись.ИспользоватьСтрахованиеСпортсменов = Объект.ИспользоватьСтрахованиеСпортсменов;
		НоваяЗапись.Записать(Истина);	
		
	КонецЕсли;
	
	ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Для вступления изменений в силу, необходимо перезапустить программу'"));
	
КонецПроцедуры
// }Рарус adilas #22219 -Функциональные опции 2021.11.18

#КонецОбласти