
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЗаполнятьПоДиапозону") Тогда
		ЗаполнятьПоДиапозону = Параметры.ЗаполнятьПоДиапозону;
	КонецЕсли;
	
	Элементы.ГруппаЗаполнениеИзФайла.Видимость = НЕ ЗаполнятьПоДиапозону;
	Элементы.Диапозон.Видимость                = ЗаполнятьПоДиапозону;
	
	НомерСтроки                  = 1;
	НомерКолонкиМесто            = 1;
	НомерКолонкиКоличествоБаллов = 2;
	НачальноеЗначение            = 1;
		
КонецПроцедуры

&НаКлиенте
Процедура КонечноеЗначениеПриИзменении(Элемент)
	
	Если КонечноеЗначение = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если КонечноеЗначение < НачальноеЗначение Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Конечное значение диапозона не может быть меньше начального значения!",,"КонечноеЗначение","КонечноеЗначение");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	#Если ВебКлиент Тогда
		
		РасширениеПодключено = ПодключитьРасширениеРаботыСФайлами();
		Если НЕ РасширениеПодключено Тогда
			НачатьУстановкуРасширенияРаботыСФайлами();
		КонецЕсли;
		
	#КонецЕсли
	
	ТаблицаРезультат.Очистить();
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр                      = НСтр("ru = 'Файл Exel '") + " (*.xlsx)|*.xlsx";
	ДиалогВыбораФайла.Заголовок                   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выберите файлы для балльной системы '"), ("ru = 'заполнения'"));
	ДиалогВыбораФайла.ПредварительныйПросмотр     = ЛОЖЬ;
	ДиалогВыбораФайла.Расширение                  = "xlsx";
	ДиалогВыбораФайла.ИндексФильтра               = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла              = "";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Ложь;
	ДиалогВыбораФайла.МножественныйВыбор = Истина;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ДляЗагрузки", Истина);
	ОповещениеВыбора = Новый ОписаниеОповещения("ВыбранФайл", ЭтотОбъект,ПараметрыОповещения);
	ДиалогВыбораФайла.Показать(ОповещениеВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если НЕ ЗаполнятьПоДиапозону Тогда
		Если НЕ ЗначениеЗаполнено(Файл) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран файл для заполнения!",,"Файл","Файл");
			Возврат;
		КонецЕсли;
		ЭтаФорма.Закрыть(ПолучитьТаблицуРезультатаВСтруктуру());
	Иначе
		Если КонечноеЗначение = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заполните конечное значение диапозона!",,"КонечноеЗначение","КонечноеЗначение");
			Возврат;
		КонецЕсли;
		ЗаполнитьТаблицуРезультат();
		ЭтаФорма.Закрыть(ПолучитьТаблицуРезультатаВСтруктуру());
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбранФайл(ВыбранныеФайлы,ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		ПоказатьПредупреждение( , "Файл не выбраны!");
		Возврат;
	КонецЕсли;
	ПомещаемыеФайлы = Новый Массив;

	
	Если ВыбранныеФайлы.Количество() Тогда
		Для Каждого ИмяФайла Из ВыбранныеФайлы Цикл
				ПомещаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ИмяФайла));
				Файл = ИмяФайла;
			КонецЦикла;
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьИПередатьФайлыНаСерверЗавершение", ЭтаФорма);
		НачатьПомещениеФайлов(ОписаниеОповещения,ПомещаемыеФайлы,, Ложь);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИПередатьФайлыНаСерверЗавершение(Знач МассивФайлов,Знач ВыбранноеИмяФайла)  Экспорт
	
	Если МассивФайлов.Количество()>0 Тогда
		Для Каждого ИмяФайла Из МассивФайлов Цикл
			ПутьКФайлу 					= ИмяФайла.ПолноеИмя;
			АдресВоВременномХранилице 	= ИмяФайла.Хранение;
			РасширениеФайла 			= Прав(ИмяФайла.Имя,СтрДлина(ИмяФайла.Имя)-(СтрНайти(ИмяФайла.Имя,".",НаправлениеПоиска.СКонца,,1)));;
			
		КонецЦикла;
	ЗагрузитьДанныеНаСервере();	
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеНаСервере()
					
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);
	Если НЕ ЗначениеЗаполнено(АдресВоВременномХранилице) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка чтения файла " + ПутьКФайлу);
		Возврат;
	КонецЕсли; 
	
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресВоВременномХранилице);
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайла);	
	
    ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяВременногоФайла);
	
	ТаблицаРезультат.Очистить();
	
	Для ИндексОбласти = НомерСтроки По ТабличныйДокумент.ВысотаТаблицы Цикл
		
		ПозицияСтроки = СтрЗаменить(ИндексОбласти," ","");
		
		строкаРезультат = ТаблицаРезультат.Добавить();
		
		Попытка
			Место             = Число(СокрЛП(ТабличныйДокумент.Область(ПозицияСтроки,НомерКолонкиМесто).Текст));
			КоличествоБаллов  = Число(СокрЛП(ТабличныйДокумент.Область(ПозицияСтроки,НомерКолонкиКоличествоБаллов).Текст));
		Исключение
			Продолжить;
		КонецПопытки;
		
		Если НЕ ЗначениеЗаполнено(Место) Тогда
			Продолжить;
		КонецЕсли;
		
		строкаРезультат.Место            = Место;
		строкаРезультат.КоличествоБаллов = КоличествоБаллов;

	КонецЦикла;
	
	// {Рарус adilas #1.0.0.2 -Исправление SonarQube 2021.04.23
	// Удаляем временный файл
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'ЗагрузитьДанныеНаСервере() (ФормаВыбораДиапозона, Справочник.СистемаПодсчетаБаллов)'"), УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	// }Рарус adilas #1.0.0.2 -Исправление SonarQube 2021.04.23

КонецПроцедуры	

&НаКлиенте
Функция ПолучитьТаблицуРезультатаВСтруктуру()
	
	МассивДанных = Новый Массив;
	Для Каждого строкаРезультат Из ТаблицаРезультат Цикл
		СтруктураДанных = Новый Структура("Место, КоличествоБаллов", строкаРезультат.Место, строкаРезультат.КоличествоБаллов);
		МассивДанных.Добавить(СтруктураДанных);
	КонецЦикла;
	
	Возврат Новый Структура("БалльнаяСистема",МассивДанных);
	
КонецФункции	

&НаКлиенте
Процедура ЗаполнитьТаблицуРезультат()
	
	Для Индекс = НачальноеЗначение По КонечноеЗначение Цикл
		строкаРезультат = Таблицарезультат.Добавить();
		строкаРезультат.Место = Индекс;
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти