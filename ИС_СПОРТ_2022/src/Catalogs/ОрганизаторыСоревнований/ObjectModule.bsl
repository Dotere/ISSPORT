// {Рарус dotere #1.0.0.2 -SonarQube 2021.06.28
#Область ОбработчикиСобытийОбъекта
// {Рарус dotere #15362 -Создание организатора на основании организации 2021.05.04

Процедура ПередЗаписью(Отказ)
	
	// {Рарус adilas #16383 -Организаторы соревнований 2021.05.25
	Если ОбменДанными.Загрузка Тогда
         Возврат;
	КонецЕсли;
	 
	// }Рарус adilas #16383 -Организаторы соревнований 2021.05.25
	
	ВыполнитьПроверкуПередПроведением(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// {Рарус adilas #16383 -Организаторы соревнований 2021.05.25
	Если Не ЗначениеЗаполнено(Владелец) И Не (Пользователи.РолиДоступны("АдминистраторСистемы, Администрирование, ПолныеПрава")) Тогда 
		Владелец = ПараметрыСеанса.ТекущаяОрганизация;
	КонецЕсли;
	// }Рарус adilas #16383 -Организаторы соревнований 2021.05.25
	
КонецПроцедуры

Процедура ВыполнитьПроверкуПередПроведением(Отказ) Экспорт	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОрганизаторыСоревнований.Наименование КАК Наименование,
		|	ОрганизаторыСоревнований.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ОрганизаторыСоревнований КАК ОрганизаторыСоревнований
		|ГДЕ
		|	ОрганизаторыСоревнований.Наименование = &Наименование
		|	И ОрганизаторыСоревнований.ПометкаУдаления = ЛОЖЬ
		|	И ОрганизаторыСоревнований.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Наименование", Наименование);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		ОбщегоНазначения.СообщитьПользователю("Организатор уже существует");
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры
// }Рарус dotere #15362 -Создание организатора на основании организации 2021.05.04
#КонецОбласти
// {Рарус dotere #1.0.0.2 -SonarQube 2021.06.28
