#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// {Рарус dotere #15362 -Создание организатора на основаинии организации 2021.05.04
	Если Параметры.Свойство("Организация") Тогда
		Объект.Владелец = Параметры.Организация;
		Объект.Директор = Параметры.Организация.Директор;
		Объект.Наименование = Параметры.Организация.Наименование;
		Объект.ПолноеНаименование = Параметры.Организация.ПолноеНаименование;
	КонецЕсли;
	// }Рарус dotere #15362 -Создание организатора на основаинии организации 2021.05.04
	// СтандартныеПодсистемы.КонтактнаяИнформация
	ДополнительныеПараметры = УправлениеКонтактнойИнформацией.ПараметрыКонтактнойИнформации();
	ДополнительныеПараметры.ИмяЭлементаДляРазмещения = "ГруппаКонтактнаяИнформация";
	ДополнительныеПараметры.ПоложениеЗаголовкаКИ = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	// {Рарус adilas #16383 -Организаторы соревнований 2021.06.01
	Если Пользователи.РолиДоступны("АдминистраторСистемы, Администрирование, ПолныеПрава") 
	Или ПривилегированныйРежим() Тогда
		Элементы.Организация.Видимость = Истина;
	Иначе	
		Элементы.Организация.Видимость = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда 
		Объект.Владелец = ПараметрыСеанса.ТекущаяОрганизация;
	КонецЕсли;
	// }Рарус adilas #16383 -Организаторы соревнований 2021.06.01
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии()
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
    // СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

// {Рарус dotere #16959 -Заполнение краткого наименование если пустое  2021.06.11
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если СокрЛП(Объект.Наименование) = ""  Тогда
		
		 Объект.Наименование = Объект.ПолноеНаименование;
		
	 КонецЕсли;
	 // {Рарус adilas #20286 -Страница тренера. 2021.09.16
	 // Проверка для копирования адреса если флаг установлен
	 Если Объект.СовпадаетАдрес Тогда
		 //Имя состоит из МенюПодменюАдресКонтактная + Имя поля формы для замещения _ Имя поля формы значением которого будет замещено поле формы 
		 ИмяКомандыДляФактическогоАдреса = "МенюПодменюАдресКонтактнаяИнформацияПоле2a6c9a0ax27d5x11ebx80dcx0050569a020b1_КонтактнаяИнформацияПоле2a6c9a0cx27d5x11ebx80dcx0050569a020b1";
		 ИмяКомандыДляПочтовогоАдреса 	= "МенюПодменюАдресКонтактнаяИнформацияПоле2a6c9a0fx27d5x11ebx80dcx0050569a020b1_КонтактнаяИнформацияПоле2a6c9a0cx27d5x11ebx80dcx0050569a020b1";
		 УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляФактическогоАдреса);
		 УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляПочтовогоАдреса);
	 КонецЕсли;
	 // }Рарус adilas #20286 -Страница тренера. 2021.09.16
	 
КонецПроцедуры
// }Рарус dotere #16959 -Заполнение краткого наименование если пустое  2021.06.11

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
    
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация	
КонецПроцедуры

// {Рарус dotere #15362 -Создание организатора на основании организации 2021.05.04
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Оповестить("ЗакрытиеФормы",Объект.Ссылка)
КонецПроцедуры
// }Рарус dotere #15362 -Создание организатора на основании организации 2021.05.04

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// {Рарус adilas #20286 -Страница тренера. 2021.09.16
// {Рарус adilas #15377 -Копирование адреса  2021.05.26
// Производит копирование адреса если они совпадают
&НаКлиенте
Процедура СовпадаетАдресПриИзменении(Элемент)
	
	Если Объект.СовпадаетАдрес = Истина Тогда
		Если ЗначениеЗаполнено(ЭтаФорма.КонтактнаяИнформацияПоле2a6c9a0ax27d5x11ebx80dcx0050569a020b1) ИЛИ 
			
			ЗначениеЗаполнено(ЭтаФорма.КонтактнаяИнформацияПоле2a6c9a0fx27d5x11ebx80dcx0050569a020b1) Тогда
			ВопросОКопировании = Новый ОписаниеОповещения("ПослеЗакрытияВопросаКопированиеАдреса", ЭтотОбъект);	
			
			ПоказатьВопрос(ВопросОКопировании,
			НСтр("ru='Фактический и почтовый адреса будут заполнены данными Юридического адреса. Продолжить?'"), 
			РежимДиалогаВопрос.ДаНетОтмена, 
			0, КодВозвратаДиалога.Да, 
			НСтр("ru='Копирование адреса'"));
			
		Иначе
			
			//Имя состоит из МенюПодменюАдресКонтактная + Имя поля формы для замещения _ Имя поля формы значением которого будет замещено поле формы 
			ИмяКомандыДляФактическогоАдреса = "МенюПодменюАдресКонтактнаяИнформацияПоле2a6c9a0ax27d5x11ebx80dcx0050569a020b1_КонтактнаяИнформацияПоле2a6c9a0cx27d5x11ebx80dcx0050569a020b1";
			ИмяКомандыДляПочтовогоАдреса 	= "МенюПодменюАдресКонтактнаяИнформацияПоле2a6c9a0fx27d5x11ebx80dcx0050569a020b1_КонтактнаяИнформацияПоле2a6c9a0cx27d5x11ebx80dcx0050569a020b1";
			УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляФактическогоАдреса);
			УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляПочтовогоАдреса);
			
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры
// }Рарус adilas #20286 -Страница тренера. 2021.09.16
// }Рарус adilas #15377 -Копирование адреса  2021.05.26

#КонецОбласти

#Область КонтактнаяИнформация
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "КОНТАКТНАЯ ИНФОРМАЦИЯ"
// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат) Экспорт
	
	РезультатОбновления = УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
		
	//Возврат РезультатОбновления;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	МодульУправлениеКонтактнойИнформациейКлиент =
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
	МодульУправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// {Рарус adilas #20286 -Страница тренера. 2021.09.16
&НаКлиенте
Процедура ПослеЗакрытияВопросаКопированиеАдреса(Результат, Параметры) Экспорт
	
    Если Результат = КодВозвратаДиалога.Да Тогда
		Если ЗначениеЗаполнено(ЭтаФорма.ЭтаФорма.КонтактнаяИнформацияПоле2a6c9a0cx27d5x11ebx80dcx0050569a020b1) Тогда
        	//Имя состоит из МенюПодменюАдресКонтактная + Имя поля формы для замещения _ Имя поля формы значением которого будет замещено поле формы 
			ИмяКомандыДляФактическогоАдреса = "МенюПодменюАдресКонтактнаяИнформацияПоле2a6c9a0ax27d5x11ebx80dcx0050569a020b1_КонтактнаяИнформацияПоле2a6c9a0cx27d5x11ebx80dcx0050569a020b1";
			ИмяКомандыДляПочтовогоАдреса 	= "МенюПодменюАдресКонтактнаяИнформацияПоле2a6c9a0fx27d5x11ebx80dcx0050569a020b1_КонтактнаяИнформацияПоле2a6c9a0cx27d5x11ebx80dcx0050569a020b1";
			УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляФактическогоАдреса);
			УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКомандыДляПочтовогоАдреса);	
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Юридический адрес при копировании не должен быть пустым!'"));
			Объект.СовпадаетАдрес = Ложь;
		КонецЕсли;
	Иначе
		Объект.СовпадаетАдрес = Ложь;
	КонецЕсли;
 
КонецПроцедуры
// }Рарус adilas #20286 -Страница тренера. 2021.09.16

#КонецОбласти