
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	// {Рарус adilas #22219 -Функциональные опции 2021.12.08
	Если РольДоступна("Методист") Тогда
		
		ТекущаяОрганизация = ПараметрыСеанса.ТекущаяОрганизация;
		
	ИначеЕсли РольДоступна("Руководитель") Тогда 			
	
		ТекущаяОрганизация = Параметры.Организация;
		
	Иначе
		
		//ТекущаяОрганизация = Неопределено;
		
	КонецЕсли;
	// }Рарус adilas #22219 -Функциональные опции 2021.12.08
	
	// {Рарус adilas #22188 -Карточка спортсмена. Страховой полис и возрастная группа. 2021.11.16	
	ИспользоватьСтрахование = УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(ТекущаяОрганизация).СтрахованиеСпортсменовОрганизация;
	ИспользоватьВГ = УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(ТекущаяОрганизация).ВозрастныеГруппыОрганизация;
	// }Рарус adilas #22188 -Карточка спортсмена. Страховой полис и возрастная группа. 2021.11.16
		
	Если НЕ Объект.ФизическоеЛицо.Пустая() И Не ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		
		ФизическоеЛицоСсылка = Объект.ФизическоеЛицо;
		ФизЛицоОбъект = РеквизитФормыВЗначение("ФизическоеЛицоОбъект");
		ФизЛицоОбъект = Объект.ФизическоеЛицо.ПолучитьОбъект();
		ЗначениеВРеквизитФормы(ФизЛицоОбъект, "ФизическоеЛицоОбъект");
		
		ЗаполнитьДопДанныеНаФорме();
		
	ИначеЕсли Объект.Ссылка.Пустая() ИЛИ Объект.ФизическоеЛицо.Пустая() Тогда
		
		ФизЛицоОбъект = РеквизитФормыВЗначение("ФизическоеЛицоОбъект");
		ФизическоеЛицоСсылка = Справочники.ФизическиеЛица.ПолучитьСсылку(Новый УникальныйИдентификатор);
		ФизЛицоОбъект.УстановитьСсылкуНового(ФизическоеЛицоСсылка);
		
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ЗаполнитьЗначенияСвойств(ФизЛицоОбъект,Параметры.ЗначениеКопирования.ФизическоеЛицо,,"Родитель, Владелец, Код");
			ЗаполнитьЗначенияСвойств(Объект.Ссылка,Параметры.ЗначениеКопирования); 
		КонецЕсли;
		
		ЗначениеВРеквизитФормы(ФизЛицоОбъект, "ФизическоеЛицоОбъект");	
		
	КонецЕсли;
		
	УстановитьОтборНаРегистрФизическойПодготовки();
		
	// СтандартныеПодсистемы.КонтактнаяИнформация
	ДополнительныеПараметры = УправлениеКонтактнойИнформацией.ПараметрыКонтактнойИнформации();
	ДополнительныеПараметры.ИмяЭлементаДляРазмещения = "ГруппаКонтактнаяИнформация";
	ДополнительныеПараметры.ПоложениеЗаголовкаКИ = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, ФизическоеЛицоОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// {Рарус adilas #21574 -Тестирование релиза Альфа СПОРТ 1.0.0.4 Статус спортсмена 2021.10.20
	Если Объект.Ссылка.Пустая() ИЛИ Объект.ФизическоеЛицо.Пустая() Тогда
		
		УчетСпортсменовКлиент.УстановитьЗаголовокФормы(ЭтаФорма, Объект.Ссылка, "Создание карточки спортсмена", 1);
		// {Рарус adilas #16864 -Спортсмен другого спорт. учреждения в сборной команде. 2021.06.02
		СтатусСпортсменаСтр = НСтр("ru = 'Укажите статус спортсмена'");
        УстановитьВидимостьДляНовойКарточки();
		// }Рарус adilas #16864 -Спортсмен другого спорт. учреждения в сборной команде. 2021.06.02
		
	Иначе	
		// {Рарус kotana #IN-17635 -При открытии карточки спортсмена другого учреждени видно все закладки. 2021.06.18
		// adilas 20.10.2021 Перенес из ПриСозданииНаСервере() в связи с тем, что он пересикался с кодом в данной процедуре;
		Если НЕ ЗначениеЗаполнено(Объект.СтатусСпортсмена) 
									ИЛИ Объект.СтатусСпортсмена = ПредопределенноеЗначение("Перечисление.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения") Тогда	
			УстановитьВидимостьДляНовойКарточки();	
		Иначе	 
			УстановитьВидимостьДляЗаписаннойКарточки();    
		КонецЕсли; 
		// }Рарус kotana #IN-17635 -При открытии карточки спортсмена другого учреждени видно все закладки. 2021.06.18	
			
		УчетСпортсменовКлиент.УстановитьЗаголовокФормы(ЭтаФорма, Объект.Ссылка, "Карточка спортсмена: ", 1);
		
	КонецЕсли;
	// }Рарус adilas #21574 -Тестирование релиза Альфа СПОРТ 1.0.0.4 Статус спортсмена 2021.10.20
	
	// {Рарус adilas #17291 -Особенности развития 2021.07.01
	УстановитьВидимостьОсобенностей();
	// }Рарус adilas #17291 -Особенности развития 2021.07.01
	Элементы.ФизическоеЛицоДатаРождения.АвтоВыборНезаполненного = Истина;
	// {Рарус adilas #21131 -Фото в карточке спортсмена. 2021.10.07
	// Перенёс процедуру из ПриСозданииНаСервере() т.к фото не отоображалось при открытии 
	ОбновитьФотографиюНаСервере();
	// }Рарус adilas #21131 -Фото в карточке спортсмена. 2021.10.07
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ФизическоеЛицоОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	СтруктураФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(ФизическоеЛицоОбъект.Наименование);
	Если не ЗначениеЗаполнено(СтруктураФИО.Фамилия) ИЛИ не ЗначениеЗаполнено(СтруктураФИО.Имя) Тогда
		ПоказатьПредупреждение(,"Необходимо заполнить Фамилию, Имя, Отчество физического лица!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ФизическоеЛицоОбъект.ДатаРождения = Дата(1,1,1) Тогда
		ПоказатьПредупреждение(,"Необходимо заполнить дату рождения!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// {Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	Если ИспользоватьСтрахование Тогда
		СНИЛС_ДляУсловия = СтрЗаменить(СтрЗаменить(ФизическоеЛицоОбъект.СНИЛС, "-", ""), " ", "");
		Если ЗначениеЗаполнено(СНИЛС_ДляУсловия) Тогда
			ТекстСообщения = "";
			КорректныйСНИСЛ = РегламентированныеДанныеКлиентСервер.СтраховойНомерПФРСоответствуетТребованиям(ФизическоеЛицоОбъект.СНИЛС, ТекстСообщения);
			Если НЕ КорректныйСНИСЛ Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
				Отказ = Истина;
				Возврат;
			КонецЕсли;	
		КонецЕсли;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	// }Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	
	// {Рарус kotana #8906 2020.08.27

	Если Объект.Ссылка.Пустая() Тогда
	
		ПроверитьФотоАватар();
		
	КонецЕсли;
	
	// }Рарус kotana #8906 2020.08.27
	
	// {Рарус adilas #17291 -Особенности развития 2021.07.01
	Если НЕ Объект.ЕстьОсобенностиЗдоровья Тогда 
		
		Объект.ИмеетсяИнвалидностьПоОбщемуЗаболеванию = Ложь;
		Объект.ИмеютсяИнтеллектуальныеНарушения = Ложь;
		Объект.ИмеетсяНарушениеЗрения = Ложь;
		Объект.ИмеетсяНарушениеСлуха = Ложь;
		Объект.ИмеетсяНарушениеОДА = Ложь;
			
    КонецЕсли;
	// }Рарус adilas #17291 -Особенности развития 2021.07.01
	
	// {Рарус adilas #20286 -Страница тренера. 2021.09.14
	Если Объект.СовпадаетАдрес Тогда	
		
		// Имя состоит из МенюПодменюАдресКонтактная + Имя поля формы для замещения _ Имя поля формы значением которого будет замещено поле формы 
		ИмяКоманды = "МенюПодменюАдресКонтактнаяИнформацияПоле3e584fc6x6e57x11eaxa218x00155d1eed181_КонтактнаяИнформацияПоле3e584fc7x6e57x11eaxa218x00155d1eed181";	
		УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКоманды);	
		
	КонецЕсли;
	// }Рарус adilas #20286 -Страница тренера. 2021.09.14
	
	// {Рарус adilas #21330 -Тестирование релиза Альфа СПОРТ 1.0.0.4 2021.10.14
	ЗаписатьФизическоеЛицоНаСервере(Ложь);	
	// }Рарус adilas #21330 -Тестирование релиза Альфа СПОРТ 1.0.0.4 2021.10.14
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ФизическоеЛицоОбъект);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
			
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// {Рарус adilas #21330 -Тестирование релиза Альфа СПОРТ 1.0.0.4 2021.10.14
	ЗаписатьФизическоеЛицоНаСервере(Ложь);	
	// }Рарус adilas #21330 -Тестирование релиза Альфа СПОРТ 1.0.0.4 2021.10.14 	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОповещениеОЗаписиОбъекта = Новый ОписаниеОповещения("ПослеЗаписиФизическогоЛицаЗавершение", ЭтотОбъект);
	ВыполнитьОбработкуОповещения(ОповещениеОЗаписиОбъекта);
	
	УчетСпортсменовКлиент.УстановитьЗаголовокФормы(ЭтаФорма, Объект.Ссылка, "Карточка спортсмена: ", 1);
	
	Элементы.ЗаглушкаДокументыФизЛица.Видимость = Истина;
	Элементы.ЗаглушкаДопуски.Видимость = Истина;
	Элементы.ЗаглушкаМеждународнаяВозрастнаяГруппа.Видимость = Истина;
	Элементы.ЗаглушкаПолис.Видимость = Истина;
	Элементы.ЗаглушкаРазряды.Видимость = Истина;
	Элементы.ЗаглушкаСоставСемьи.Видимость = Истина;
	Элементы.ЗаглушкаИстория.Видимость = Истина;
	Элементы.ЗаглушкаСогласиеНаОбработкуПД.Видимость = Истина;
	Элементы.ЗаглушкаЭтапы.Видимость = Истина;
	// {Рарус adilas #16864 -Спортсмен другого спорт. учреждения в сборной команде. 2021.06.02
	Элементы.ЗаглушкаУчебноеУчреждение.Видимость = Истина;
	// }Рарус adilas #16864 -Спортсмен другого спорт. учреждения в сборной команде. 2021.06.02
	ОбновитьФотографиюНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтотОбъект, ФизическоеЛицоОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация	
	ОбновитьФотографиюНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеФизическогоЛицаВФорме" Тогда
		ИзменитьФизическоеЛицоНаСервере();	
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, ФизическоеЛицоОбъект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#Область ОбработчикиФотографии

&НаКлиенте
Процедура АдресФотографииПриИзменении(Элемент)
	Если Не Объект.ФайлФотографии.Пустая() Тогда
		ТекущаяВерсияКартинки = ПолучитьТекущуюВерсиюКартинки(Объект.ФайлФотографии);
		АдресФотографии = РаботаСФайламиСлужебныйВызовСервера.ПолучитьНавигационнуюСсылкуДляОткрытия(ТекущаяВерсияКартинки);
	Иначе 	
		АдресФотографии = "";
	Конецесли;
    Модифицированность=Истина;	
КонецПроцедуры

&НаКлиенте
Процедура АдресФотографииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если Объект.Ссылка.Пустая() ИЛИ Модифицированность Тогда 
		
		Оповещение = Новый ОписаниеОповещения("АдресФотографииНажатиеЗавершение", ЭтотОбъект, Новый Структура("Элемент",Элемент));
		
		ПоказатьВопрос(Оповещение,
		"Спортсмен не записан. Записать?",
        РежимДиалогаВопрос.ДаНет,
        0,
        КодВозвратаДиалога.Да);
		Возврат;
		
	КонецЕсли;
	
	АдресФотографииОткрыть(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресФотографииОткрыть(Элемент)
	ОткрытьФормуВыбораФайла(Объект.Фото,Элемент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРеквизитаФизическоеЛицо

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ФизическоеЛицо) Тогда                                                  
		Возврат
	КонецЕсли;	
	
	ФизическоеЛицоПриИзмененииНаСервере();
	
	УчетСпортсменовКлиент.УстановитьЗаголовокФормы(ЭтаФорма, Объект.Ссылка, "Карточка спортсмена: ", 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоОбъектНаименованиеПриИзменении(Элемент)
	ФизическоеЛицоОбъектНаименованиеПриИзмененииНаСервере();  
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоОткрытие(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ФизическоеЛицо) Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(,Объект.ФизическоеЛицо);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандНаФорме

&НаКлиенте
Процедура УдалитьФотографию(Команда)
	
	Если ЗначениеЗаполнено(Объект.Фото) Тогда
		
		Оповещение = Новый ОписаниеОповещения("УдалитьФотографиюЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Удалить фотографию?",
		РежимДиалогаВопрос.ДаНет,
		0,
		КодВозвратаДиалога.Да);
		
		Возврат;
		
	КонецЕсли;
	
	УдалитьФотографиюПродолжить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму(Команда)
	
	ЗаполнитьДопДанныеНаФорме();
	УстановитьОтборНаРегистрФизическойПодготовки();
	
	//31.05.2021 заполнение возраста
	ФизическоеЛицоДатаРожденияПриИзмененииНаСервере();
	//
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоЗначению(Команда)
	
	ПоискПоФизическимЛицамКлиент.ПоискПоФизическимЛицам(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФИОЛатиницейНаСервере()
	
	СтруктураФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(ФизическоеЛицоОбъект.Наименование);
	ЗаполнитьЗначенияСвойств(ФизическоеЛицоОбъект,СтруктураФИО);
	
	ФизическоеЛицоОбъект.ФамилияЛатиница = УчетСпортсменовСервер.Транслит(СтруктураФИО.Фамилия);
	ФизическоеЛицоОбъект.ИмяЛатиница = УчетСпортсменовСервер.Транслит(СтруктураФИО.Имя);
	ФизическоеЛицоОбъект.ОтчествоЛатиница = УчетСпортсменовСервер.Транслит(СтруктураФИО.Отчество);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФИОЛатиницей(Команда)
	ЗаполнитьФИОЛатиницейНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТабличнойЧасти

&НаКлиенте
Процедура ПоказателиФизическогоЗдоровьяНаборЗаписейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ Копирование Тогда
		Отказ = Истина;
		ОткрытьФорму("РегистрСведений.ПоказателиФизическогоЗдоровьяСпортсмена.ФормаЗаписи", Новый Структура("Спортсмен", Объект.Ссылка));
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область КонтактнаяИнформация

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
        УправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьОчистку(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьОбработкуНавигационнойСсылки(ЭтотОбъект, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
    ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры

&НаСервере
Процедура ОбновитьКонтактнуюИнформацию(Результат)
    УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, ФизическоеЛицоОбъект, Результат);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат) Экспорт	
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, ФизическоеЛицоОбъект, Результат);		
КонецПроцедуры
// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти

#Область ПроцедурыИФункцииПоРаботеСФотографией	

&НаСервере
Процедура ОбновитьФотографиюНаСервере()
	Если Не Объект.Фото.Пустая() Тогда
		Попытка
			АдресФотографии = РаботаСФайламиСлужебныйВызовСервера.ПолучитьНавигационнуюСсылкуДляОткрытия(Объект.Фото.ТекущаяВерсия);
        Исключение
            // {Рарус kotana -Исправление ошибок Sonar 2021.06.22
            АдресФотографии = "";
            ЗаписьЖурналаРегистрации("ОшибкаПолученияФото", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
            // }Рарус kotana -Исправление ошибок Sonar 2021.06.22
		КонецПопытки;
	Иначе
		АдресФотографии = "";
	КонецЕсли;	
	Элементы.АдресФотографии.РазмерКартинки = РазмерКартинки.АвтоРазмер;
КонецПроцедуры		

&НаКлиенте
Процедура ОткрытьФормуВыбораФайла(ТекущийФайл,ЭлементВладелец)
	
	ПараметрыФайла = Новый Структура;
	//ПараметрыФайла.Вставить("ВладелецФайла", Объект.Ссылка);
	ПараметрыФайла.Вставить("ЗаголовокФормы", НСтр("ru = 'Присоединенные файлы'"));
	ПараметрыФайла.Вставить("РежимВыбора", истина);
	ПараметрыФайла.Вставить("ТекущаяСтрока", ТекущийФайл);
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьФормуВыбораФайлаЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.Файлы.Форма.ФормаВыбора",	ПараметрыФайла, ЭлементВладелец,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресФотографииНажатиеЗавершение(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Записать();
		Если НЕ Объект.Ссылка.Пустая() И НЕ Модифицированность Тогда
			АдресФотографииОткрыть(Параметры.Элемент);
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораФайлаЗавершение(Результат, Параметры) Экспорт
	Если НЕ Результат = Неопределено Тогда
		Объект.Фото = Результат;
		ФайлФотографииПриИзменении();
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ФайлФотографииПриИзменении()	
	Если Не Объект.Фото.Пустая() Тогда
		ТекущаяВерсияКартинки = ПолучитьТекущуюВерсиюКартинки(Объект.Фото);
		АдресФотографии = РаботаСФайламиСлужебныйВызовСервера.ПолучитьНавигационнуюСсылкуДляОткрытия(ТекущаяВерсияКартинки);
	Иначе 	
		АдресФотографии = "";
	Конецесли;
    Модифицированность = Истина;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущуюВерсиюКартинки(ФайлКартинки)

	Возврат ФайлКартинки.ТекущаяВерсия; 	

КонецФункции

&НаКлиенте
Процедура УдалитьФотографиюЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		УдалитьФотографиюПродолжить();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УдалитьФотографиюПродолжить()
	
   Объект.Фото = Справочники.Файлы.ПустаяСсылка();
   ОбновитьФотографиюНаСервере();
   
КонецПроцедуры	

// {Рарус kotana #8906 2020.08.27
&НаСервере
Процедура ПроверитьФотоАватар()
	
	УстановитьПривилегированныйРежим(Истина);

	Если НЕ ЗначениеЗаполнено(ФизическоеЛицоОбъект.Фото) Тогда
		
		//нужно подставить аватар
		ПолФЛ = ФизическоеЛицоОбъект.Пол;
		ПолЖенский = (ПолФЛ = ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Женский"));
				
		Если ПолЖенский Тогда
			
			ИмяБезРасширения = НСтр("ru = 'Аватар спортсмен (женщина)'");
			
		Иначе
			
			ИмяБезРасширения = НСтр("ru = 'Аватар спортсмен (мужчина)'");
			
		КонецЕсли;
		
		ПрисоединенныйФайл = Справочники.Файлы.НайтиПоНаименованию(ИмяБезРасширения);
		
		Если ПрисоединенныйФайл = Справочники.Файлы.ПустаяСсылка() ИЛИ ПрисоединенныйФайл = Неопределено Тогда
			
			Если ПолЖенский Тогда
				
				ДвоичныеДанные = БиблиотекаКартинок.АватарСпортсменЖенщина.ПолучитьДвоичныеДанные();
				
			Иначе
				
				ДвоичныеДанные = БиблиотекаКартинок.АватарСпортсменМужчина.ПолучитьДвоичныеДанные();
				
			КонецЕсли;
			
			АдресФайлаВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
			
			ПараметрыФайла = РаботаСФайлами.ПараметрыДобавленияФайла();
			ПараметрыФайла.ВладелецФайлов = Справочники.ПапкиФайлов.Шаблоны;
			ПараметрыФайла.ИмяБезРасширения = ИмяБезРасширения;
			ПараметрыФайла.РасширениеБезТочки = "jpg";
			ПараметрыФайла.ВремяИзмененияУниверсальное = Неопределено;
			
			ПрисоединенныйФайл = РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, АдресФайлаВХранилище);
			ПрисоединенныйФайлОбъект = ПрисоединенныйФайл.ПолучитьОбъект();
			ПрисоединенныйФайлОбъект.ФайлХранилище = Новый ХранилищеЗначения(ДвоичныеДанные);
			ПрисоединенныйФайлОбъект.Записать();
			
		КонецЕсли;
		
		Объект.Фото = ПрисоединенныйФайл;
		
		ОбновитьФотографиюНаСервере();
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

// }Рарус kotana #8906 2020.08.27

#КонецОбласти

#Область ОбработкаРеквизитаФизическоеЛицо

&НаСервере
Процедура СформироватьНаименованиеФизическогоЛица()
   Объект.Наименование = ФизическоеЛицоОбъект.Наименование;
КонецПроцедуры

&НаСервере
Процедура ФизическоеЛицоПриИзмененииНаСервере()
	
	ФизическоеЛицоСсылка = Объект.ФизическоеЛицо;
	ФизЛицоОбъект = РеквизитФормыВЗначение("ФизическоеЛицоОбъект");
	ФизЛицоОбъект = Объект.ФизическоеЛицо.ПолучитьОбъект();
	ЗначениеВРеквизитФормы(ФизЛицоОбъект, "ФизическоеЛицоОбъект");
	Если ЗначениеЗаполнено(ФизическоеЛицоСсылка) Тогда 	
		СформироватьНаименованиеФизическогоЛица();
	КонецЕсли;
		
КонецПроцедуры				

&НаСервере
Процедура ИзменитьФизическоеЛицоНаСервере()
	
	ФизЛицоОбъект = Объект.ФизическоеЛицо.ПолучитьОбъект();
	ЗначениеВРеквизитФормы(ФизЛицоОбъект, "ФизическоеЛицоОбъект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписиФизическогоЛицаЗавершение(Результат, ДопПараметры)Экспорт
	ЭтаФорма.ОбновитьОтображениеДанных(Элементы.ФизическоеЛицо);
КонецПроцедуры

&НаСервере
Процедура ФизическоеЛицоОбъектНаименованиеПриИзмененииНаСервере()
	
	СтруктураФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(ФизическоеЛицоОбъект.Наименование);
	ЗаполнитьЗначенияСвойств(ФизическоеЛицоОбъект,СтруктураФИО);
	СформироватьНаименованиеФизическогоЛица();
	
КонецПроцедуры	

&НаСервере
Процедура ФизическоеЛицоДатаРожденияПриИзмененииНаСервере()
	ФизическоеЛицоОбъект.ГодРождения = Формат(Год(ФизическоеЛицоОбъект.ДатаРождения),"ЧГ=");
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоДатаРожденияПриИзменении(Элемент)
	ФизическоеЛицоДатаРожденияПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область Запись_ФизЛица

&НаСервере
Процедура ЗаписатьФизическоеЛицоНаСервере(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		
		ФизЛицоОбъект = РеквизитФормыВЗначение("ФизическоеЛицоОбъект");
		ФизЛицоОбъект.ПроверитьЗаполнение();
		ФизЛицоОбъект.Фото = Объект.Фото;
		
		ФизЛицоОбъект.Записать();
		
		ЗначениеВРеквизитФормы(ФизЛицоОбъект, "ФизическоеЛицоОбъект");
		ФизическоеЛицоСсылка  = ФизическоеЛицоОбъект.Ссылка;
		Объект.ФизическоеЛицо = ФизическоеЛицоОбъект.Ссылка;
				
	Исключение
		
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры	

#КонецОбласти
	
// {Рарус adilas #15377 -Копирование адреса 2021.05.26
&НаКлиенте
Процедура ПослеЗакрытияВопросаКопирование(Результат, Параметры) Экспорт
	
    Если Результат = КодВозвратаДиалога.Да Тогда
		Если ЗначениеЗаполнено(ЭтаФорма.КонтактнаяИнформацияПоле3e584fc7x6e57x11eaxa218x00155d1eed181) Тогда
			//Имя состоит из МенюПодменюАдресКонтактная + Имя поля формы для замещения _ Имя поля формы значением которого будет замещено поле формы 
			ИмяКоманды = "МенюПодменюАдресКонтактнаяИнформацияПоле3e584fc6x6e57x11eaxa218x00155d1eed181_КонтактнаяИнформацияПоле3e584fc7x6e57x11eaxa218x00155d1eed181";	
			УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКоманды);
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Адрес по прописке при копировании не должен быть пустым!'"));
			Объект.СовпадаетАдрес = Ложь;
		КонецЕсли;
	Иначе
		Объект.СовпадаетАдрес = Ложь;
	КонецЕсли;	
 
КонецПроцедуры
// }Рарус adilas #15377 -Копирование адреса 2021.05.26

// {Рарус adilas #16864 -Спортсмен другого спорт. учреждения в сборной команде. 2021.06.02
&НаСервере
Процедура УстановитьВидимостьДляНовойКарточки()
	
	Элементы.ЕстьОсобенностиЗдоровья.Видимость = Ложь;
	Элементы.ДопускКСоревнованиям.Видимость = Ложь;
	Элементы.ДопускКТренировочному.Видимость = Ложь;
	Элементы.ВозрастнаяГруппа.Видимость = Ложь;
	Элементы.ВидСпорта.Видимость = Ложь;
	Элементы.ТекущийЭтап.Видимость = Ложь;
	Элементы.Разряд.Видимость = Ложь;
	Элементы.СтраховойПолис.Видимость = Ложь;
	Элементы.Сборная.Видимость = Ложь;
	Элементы.СтатусИсключения.Видимость = Ложь;
	
	Элементы.ДокументыУдостоверяющиеЛичность.Видимость = Ложь;
	Элементы.СтраницаКонтактнаяИнформация.Видимость = Ложь;
	Элементы.СоставСемьи.Видимость = Ложь;
	Элементы.СогласиеНаОбработкуПД.Видимость = Ложь;
	Элементы.Допуски.Видимость = Ложь;
	Элементы.Полис.Видимость = Ложь;
	Элементы.Разряды.Видимость = Ложь;
	Элементы.Этапы.Видимость = Ложь;
	Элементы.МеждународнаяВозрастнаяГруппа.Видимость = Ложь;
	Элементы.ПоказателиФизическогоЗдоровья.Видимость = Ложь;
	Элементы.УчебныеУчреждения.Видимость = Ложь;
	Элементы.История.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДляЗаписаннойКарточки()
	
	// {Рарус adilas #22188 -Карточка спортсмена. Страховой полис и возрастная группа. 2021.11.12
	Если ИспользоватьСтрахование Тогда
		Элементы.Полис.Видимость = Истина;
		Элементы.СтраховойПолис.Видимость = Истина;
	Иначе
		Элементы.Полис.Видимость = Ложь;
		Элементы.СтраховойПолис.Видимость = Ложь;
	КонецЕсли;
	
	Если ИспользоватьВГ Тогда
		Элементы.ВозрастнаяГруппа.Видимость = Истина;
		Элементы.МеждународнаяВозрастнаяГруппа.Видимость = Истина;
	Иначе
		Элементы.ВозрастнаяГруппа.Видимость = Ложь;
		Элементы.МеждународнаяВозрастнаяГруппа.Видимость = Ложь;
	КонецЕсли;
	// }Рарус adilas #22188 -Карточка спортсмена. Страховой полис и возрастная группа. 2021.11.12
	
	Элементы.ЕстьОсобенностиЗдоровья.Видимость = Истина;
	Элементы.ДопускКСоревнованиям.Видимость = Истина;
	Элементы.ДопускКТренировочному.Видимость = Истина;
	Элементы.ВидСпорта.Видимость = Истина;
	Элементы.ТекущийЭтап.Видимость = Истина;
	Элементы.Разряд.Видимость = Истина;
	Элементы.Сборная.Видимость = Истина;
	
	Элементы.ДокументыУдостоверяющиеЛичность.Видимость = Истина;
	Элементы.СтраницаКонтактнаяИнформация.Видимость = Истина;
	Элементы.СоставСемьи.Видимость = Истина;
	Элементы.СогласиеНаОбработкуПД.Видимость = Истина;
	Элементы.Допуски.Видимость = Истина;
	Элементы.Разряды.Видимость = Истина;
	Элементы.Этапы.Видимость = Истина;
	
	// {Рарус ivaart IN-21136 Скрывать ПФЗ для руководителя 2021.10.15
	Если РольДоступна("Руководитель") тогда
		Элементы.ПоказателиФизическогоЗдоровья.Видимость = Ложь;
	Иначе
		Элементы.ПоказателиФизическогоЗдоровья.Видимость = Ложь;
	КонецЕсли;
	// }Рарус ivaart IN-21136 Скрывать ПФЗ для руководителя 2021.10.15

	Элементы.УчебныеУчреждения.Видимость = Истина;
	Элементы.История.Видимость = Истина;
	
КонецПроцедуры
// }Рарус adilas #16864 -Спортсмен другого спорт. учреждения в сборной команде. 2021.06.02

&НаСервере
Процедура УстановитьОтборНаРегистрФизическойПодготовки()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ПоказателиФизическогоЗдоровьяНаборЗаписей, "Спортсмен", Объект.Ссылка, ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьДопДанныеНаФорме()
	
	// {Рарус adilas #21487 -Карточка спортсмена. Данные по спортсмену. 2021.10.14
	// {Рарус adilas #21306 -Тестирование релиза Альфа СПОРТ 1.0.0.4. Спортсмены 2021.10.13
	// Изменён запрос для учёта в рамках состава учащихся по виду спорта
	// Проверка данных на отчисление, если отчислен то получаем на дату приказа
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Регистратор КАК Регистратор,
		|	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.НомерПриказа КАК НомерПриказа,
		|	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаПриказа КАК ДатаПриказа,
		|	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта,
		|	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен
		|ИЗ
		|	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, Спортсмен = &Спортсмен) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Регистратор) = ТИП(Документ.ИсключениеИзСпортивногоУчреждения)
		|	И СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения <= &ТекущаяДата
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаПриказа УБЫВ
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Спортсмен", Объект.Ссылка);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда 
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ДатаПриказа = ВыборкаДетальныеЗаписи.ДатаПриказа;			
			
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;

	ТекстЗапросаОтчисление = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен,
	                         |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта
	                         |ПОМЕСТИТЬ ВТ_СоставУчащихся
	                         |ИЗ
	                         |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(&ДатаПриказа, Спортсмен = &Спортсмен) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
	                         |ГДЕ
	                         |	(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения >= &ДатаПриказа
	                         |			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	ПодтвержденныеРазряды.Разряд КАК Разряд,
	                         |	ПодтвержденныеРазряды.ДатаПрисвоения КАК ДатаПрисвоения,
	                         |	ПодтвержденныеРазряды.ДатаПодтверждения КАК ДатаПодтверждения,
	                         |	ПодтвержденныеРазряды.Регистратор КАК Регистратор,
	                         |	ВЫБОР
	                         |		КОГДА НЕ ПодтвержденныеРазряды.ДатаПодтверждения = ДАТАВРЕМЯ(1, 1, 1)
	                         |			ТОГДА РАЗНОСТЬДАТ(ПодтвержденныеРазряды.ДатаПодтверждения, ПодтвержденныеРазряды.ДатаПрисвоения, ГОД)
	                         |	КОНЕЦ КАК ДатаПодтвержденияразрядаВГодах,
	                         |	ВЫБОР
	                         |		КОГДА НЕ ПодтвержденныеРазряды.ДатаПодтверждения = ДАТАВРЕМЯ(1, 1, 1)
	                         |			ТОГДА ДОБАВИТЬКДАТЕ(ПодтвержденныеРазряды.ДатаПодтверждения, ГОД, 2)
	                         |		ИНАЧЕ ДОБАВИТЬКДАТЕ(ПодтвержденныеРазряды.ДатаПрисвоения, ГОД, 2)
	                         |	КОНЕЦ КАК ДатаСледующегоПодтверждения
	                         |ИЗ
	                         |	РегистрСведений.ПодтвержденныеРазрядыСпортсменов.СрезПоследних(
	                         |			&ДатаПриказа,
	                         |			(Спортсмен, ВидСпорта) В
	                         |				(ВЫБРАТЬ
	                         |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                         |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                         |				ИЗ
	                         |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК ПодтвержденныеРазряды
	                         |
	                         |УПОРЯДОЧИТЬ ПО
	                         |	ПодтвержденныеРазряды.Регистратор.Дата УБЫВ
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	                         |	МеждународныеВозрастныеГруппа.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа,
	                         |	МеждународныеВозрастныеГруппа.Регистратор КАК Регистратор
	                         |ИЗ
	                         |	РегистрСведений.МеждународныеВозрастныеГруппы.СрезПоследних(
	                         |			&ДатаПриказа,
	                         |			(Спортсмен, ВидСпорта) В
	                         |				(ВЫБРАТЬ
	                         |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                         |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                         |				ИЗ
	                         |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК МеждународныеВозрастныеГруппа
	                         |
	                         |УПОРЯДОЧИТЬ ПО
	                         |	МеждународныеВозрастныеГруппа.Регистратор.Дата УБЫВ
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	ЕСТЬNULL(РегистрацияДопусков.ДействуетДо, ДАТАВРЕМЯ(1, 1, 1)) КАК ДействуетДо,
	                         |	РегистрацияДопусков.Регистратор КАК Регистратор
	                         |ИЗ
	                         |	РегистрСведений.РегистрацияДопусковКСпортивнымСоревнованиям.СрезПоследних(
	                         |			&ДатаПриказа,
	                         |			(Спортсмен, ВидСпорта) В
	                         |				(ВЫБРАТЬ
	                         |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                         |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                         |				ИЗ
	                         |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК РегистрацияДопусков
	                         |ГДЕ
	                         |	РегистрацияДопусков.ВидДопуска = ЗНАЧЕНИЕ(Перечисление.ВидыДопусковКСпортивнойДеятельности.ДопускКСпортивнымСоревнованиям)
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	РегистрацияСтраховыхПолисов.ВидСпорта КАК ВидСпорта,
	                         |	РегистрацияСтраховыхПолисов.СтраховаяКомпания КАК СтраховаяКомпания,
	                         |	РегистрацияСтраховыхПолисов.НомерСтраховогоПолиса КАК НомерСтраховогоПолиса,
	                         |	РегистрацияСтраховыхПолисов.ДатаНачала КАК ДатаНачала,
	                         |	РегистрацияСтраховыхПолисов.ДатаОкончания КАК ДатаОкончания,
	                         |	РегистрацияСтраховыхПолисов.ДатаВыдачиПолиса КАК ДатаВыдачиПолиса,
	                         |	РегистрацияСтраховыхПолисов.Регистратор КАК Регистратор
	                         |ИЗ
	                         |	РегистрСведений.РегистрацияСтраховыхПолисовСпортсменов.СрезПоследних(
	                         |			&ДатаПриказа,
	                         |			(Спортсмен, ВидСпорта) В
	                         |				(ВЫБРАТЬ
	                         |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                         |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                         |				ИЗ
	                         |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК РегистрацияСтраховыхПолисов
	                         |
	                         |УПОРЯДОЧИТЬ ПО
	                         |	ДатаОкончания УБЫВ
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта,
	                         |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап,
	                         |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Регистратор КАК Регистратор
	                         |ПОМЕСТИТЬ ВТ_Этапы
	                         |ИЗ
	                         |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(
	                         |			&ДатаПриказа,
	                         |			(Спортсмен, ВидСпорта) В
	                         |				(ВЫБРАТЬ
	                         |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                         |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                         |				ИЗ
	                         |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
	                         |
	                         |ИНДЕКСИРОВАТЬ ПО
	                         |	ВидСпорта,
	                         |	Этап,
	                         |	Регистратор
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	ВТ_Этапы.ВидСпорта КАК ВидСпорта,
	                         |	ВТ_Этапы.Этап КАК Этап,
	                         |	ВТ_Этапы.Регистратор КАК Регистратор
	                         |ИЗ
	                         |	ВТ_Этапы КАК ВТ_Этапы
	                         |
	                         |УПОРЯДОЧИТЬ ПО
	                         |	ВТ_Этапы.Регистратор.Дата УБЫВ
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	                         |	СборныеСпортсменовСрезПоследних.Сборная КАК Сборная,
	                         |	СборныеСпортсменовСрезПоследних.ВключитьВСборную КАК ВключитьВСборную
	                         |ИЗ
	                         |	РегистрСведений.СборныеСпортсменов.СрезПоследних(
	                         |			&ДатаПриказа,
	                         |			(Спортсмен, ВидСпорта) В
	                         |				(ВЫБРАТЬ
	                         |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                         |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                         |				ИЗ
	                         |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК СборныеСпортсменовСрезПоследних
	                         |ГДЕ
	                         |	СборныеСпортсменовСрезПоследних.ВключитьВСборную = ИСТИНА
	                         |
	                         |УПОРЯДОЧИТЬ ПО
	                         |	СборныеСпортсменовСрезПоследних.Период УБЫВ
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	                         |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Регистратор КАК Регистратор,
	                         |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.НомерПриказа КАК НомерПриказа,
	                         |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаПриказа КАК ДатаПриказа,
	                         |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта,
	                         |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен
	                         |ИЗ
	                         |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(&ТекущаяДата, Спортсмен = &Спортсмен) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
	                         |ГДЕ
	                         |	ТИПЗНАЧЕНИЯ(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Регистратор) = ТИП(Документ.ИсключениеИзСпортивногоУчреждения)
	                         |	И СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения <= &ТекущаяДата
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	ЕСТЬNULL(РегистрацияДопусков.ДействуетДо, ДАТАВРЕМЯ(1, 1, 1)) КАК ДействуетДо,
	                         |	РегистрацияДопусков.Регистратор КАК Регистратор
	                         |ИЗ
	                         |	РегистрСведений.РегистрацияДопусковКСпортивнымСоревнованиям.СрезПоследних(
	                         |			&ДатаПриказа,
	                         |			(Спортсмен, ВидСпорта) В
	                         |				(ВЫБРАТЬ
	                         |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                         |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                         |				ИЗ
	                         |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК РегистрацияДопусков
	                         |ГДЕ
	                         |	РегистрацияДопусков.ВидДопуска = ЗНАЧЕНИЕ(Перечисление.ВидыДопусковКСпортивнойДеятельности.ДопускКТренировочномуПроцессу)";
	 
	ТекстЗапросаАктуальное =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                          |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен,
	                          |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта
	                          |ПОМЕСТИТЬ ВТ_СоставУчащихся
	                          |ИЗ
	                          |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, Спортсмен = &Спортсмен) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
	                          |ГДЕ
	                          |	(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения > &ТекущаяДата
	                          |			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
	                          |;
	                          |
	                          |////////////////////////////////////////////////////////////////////////////////
	                          |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                          |	ПодтвержденныеРазряды.Разряд КАК Разряд,
	                          |	ПодтвержденныеРазряды.ДатаПрисвоения КАК ДатаПрисвоения,
	                          |	ПодтвержденныеРазряды.ДатаПодтверждения КАК ДатаПодтверждения,
	                          |	ПодтвержденныеРазряды.Регистратор КАК Регистратор,
	                          |	ВЫБОР
	                          |		КОГДА НЕ ПодтвержденныеРазряды.ДатаПодтверждения = ДАТАВРЕМЯ(1, 1, 1)
	                          |			ТОГДА РАЗНОСТЬДАТ(ПодтвержденныеРазряды.ДатаПрисвоения, ПодтвержденныеРазряды.ДатаПодтверждения, ГОД)
	                          |	КОНЕЦ КАК ДатаПодтвержденияразрядаВГодах,
	                          |	ВЫБОР
	                          |		КОГДА НЕ ПодтвержденныеРазряды.ДатаПодтверждения = ДАТАВРЕМЯ(1, 1, 1)
	                          |			ТОГДА ДОБАВИТЬКДАТЕ(ПодтвержденныеРазряды.ДатаПодтверждения, ГОД, 2)
	                          |		ИНАЧЕ ДОБАВИТЬКДАТЕ(ПодтвержденныеРазряды.ДатаПрисвоения, ГОД, 2)
	                          |	КОНЕЦ КАК ДатаСледующегоПодтверждения
	                          |ИЗ
	                          |	РегистрСведений.ПодтвержденныеРазрядыСпортсменов.СрезПоследних(
	                          |			,
	                          |			(Спортсмен, ВидСпорта) В
	                          |				(ВЫБРАТЬ
	                          |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                          |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                          |				ИЗ
	                          |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК ПодтвержденныеРазряды
	                          |
	                          |УПОРЯДОЧИТЬ ПО
	                          |	ПодтвержденныеРазряды.Регистратор.Дата УБЫВ
	                          |;
	                          |
	                          |////////////////////////////////////////////////////////////////////////////////
	                          |ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	                          |	МеждународныеВозрастныеГруппа.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа,
	                          |	МеждународныеВозрастныеГруппа.Регистратор КАК Регистратор
	                          |ИЗ
	                          |	РегистрСведений.МеждународныеВозрастныеГруппы.СрезПоследних(
	                          |			,
	                          |			(Спортсмен, ВидСпорта) В
	                          |				(ВЫБРАТЬ
	                          |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                          |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                          |				ИЗ
	                          |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК МеждународныеВозрастныеГруппа
	                          |
	                          |УПОРЯДОЧИТЬ ПО
	                          |	МеждународныеВозрастныеГруппа.Регистратор.Дата УБЫВ
	                          |;
	                          |
	                          |////////////////////////////////////////////////////////////////////////////////
	                          |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                          |	ЕСТЬNULL(РегистрацияДопусков.ДействуетДо, ДАТАВРЕМЯ(1, 1, 1)) КАК ДействуетДо,
	                          |	РегистрацияДопусков.Регистратор КАК Регистратор
	                          |ИЗ
	                          |	РегистрСведений.РегистрацияДопусковКСпортивнымСоревнованиям.СрезПоследних(
	                          |			,
	                          |			(Спортсмен, ВидСпорта) В
	                          |				(ВЫБРАТЬ
	                          |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                          |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                          |				ИЗ
	                          |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК РегистрацияДопусков
	                          |ГДЕ
	                          |	РегистрацияДопусков.ВидДопуска = ЗНАЧЕНИЕ(Перечисление.ВидыДопусковКСпортивнойДеятельности.ДопускКСпортивнымСоревнованиям)
	                          |;
	                          |
	                          |////////////////////////////////////////////////////////////////////////////////
	                          |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                          |	РегистрацияСтраховыхПолисов.ВидСпорта КАК ВидСпорта,
	                          |	РегистрацияСтраховыхПолисов.СтраховаяКомпания КАК СтраховаяКомпания,
	                          |	РегистрацияСтраховыхПолисов.НомерСтраховогоПолиса КАК НомерСтраховогоПолиса,
	                          |	РегистрацияСтраховыхПолисов.ДатаНачала КАК ДатаНачала,
	                          |	РегистрацияСтраховыхПолисов.ДатаОкончания КАК ДатаОкончания,
	                          |	РегистрацияСтраховыхПолисов.ДатаВыдачиПолиса КАК ДатаВыдачиПолиса,
	                          |	РегистрацияСтраховыхПолисов.Регистратор КАК Регистратор
	                          |ИЗ
	                          |	РегистрСведений.РегистрацияСтраховыхПолисовСпортсменов.СрезПоследних(
	                          |			,
	                          |			Спортсмен В
	                          |				(ВЫБРАТЬ
	                          |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен
	                          |				ИЗ
	                          |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК РегистрацияСтраховыхПолисов
	                          |
	                          |УПОРЯДОЧИТЬ ПО
	                          |	ДатаОкончания УБЫВ
	                          |;
	                          |
	                          |////////////////////////////////////////////////////////////////////////////////
	                          |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                          |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта,
	                          |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап,
	                          |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Регистратор КАК Регистратор
	                          |ПОМЕСТИТЬ ВТ_Этапы
	                          |ИЗ
	                          |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(
	                          |			,
	                          |			(Спортсмен, ВидСпорта) В
	                          |				(ВЫБРАТЬ
	                          |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                          |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                          |				ИЗ
	                          |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
	                          |
	                          |ИНДЕКСИРОВАТЬ ПО
	                          |	ВидСпорта,
	                          |	Этап,
	                          |	Регистратор
	                          |;
	                          |
	                          |////////////////////////////////////////////////////////////////////////////////
	                          |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                          |	ВТ_Этапы.ВидСпорта КАК ВидСпорта,
	                          |	ВТ_Этапы.Этап КАК Этап,
	                          |	ВТ_Этапы.Регистратор КАК Регистратор
	                          |ИЗ
	                          |	ВТ_Этапы КАК ВТ_Этапы
	                          |
	                          |УПОРЯДОЧИТЬ ПО
	                          |	ВТ_Этапы.Регистратор.Дата УБЫВ
	                          |;
	                          |
	                          |////////////////////////////////////////////////////////////////////////////////
	                          |ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	                          |	СборныеСпортсменовСрезПоследних.Сборная КАК Сборная,
	                          |	СборныеСпортсменовСрезПоследних.ВключитьВСборную КАК ВключитьВСборную
	                          |ИЗ
	                          |	РегистрСведений.СборныеСпортсменов.СрезПоследних(
	                          |			,
	                          |			(Спортсмен, ВидСпорта) В
	                          |				(ВЫБРАТЬ
	                          |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                          |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                          |				ИЗ
	                          |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК СборныеСпортсменовСрезПоследних
	                          |ГДЕ
	                          |	СборныеСпортсменовСрезПоследних.ВключитьВСборную = ИСТИНА
	                          |
	                          |УПОРЯДОЧИТЬ ПО
	                          |	СборныеСпортсменовСрезПоследних.Период УБЫВ
	                          |;
	                          |
	                          |////////////////////////////////////////////////////////////////////////////////
	                          |ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	                          |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Регистратор КАК Регистратор,
	                          |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.НомерПриказа КАК НомерПриказа,
	                          |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаПриказа КАК ДатаПриказа,
	                          |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта,
	                          |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен,
	                          |	ТИПЗНАЧЕНИЯ(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Регистратор) КАК Тип
	                          |ИЗ
	                          |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, Спортсмен = &Спортсмен) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
	                          |ГДЕ
	                          |	ТИПЗНАЧЕНИЯ(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Регистратор) = ТИП(Документ.ИсключениеИзСпортивногоУчреждения)
	                          |	И СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения <= &ТекущаяДата
	                          |;
	                          |
	                          |////////////////////////////////////////////////////////////////////////////////
	                          |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                          |	ЕСТЬNULL(РегистрацияДопусков.ДействуетДо, ДАТАВРЕМЯ(1, 1, 1)) КАК ДействуетДо,
	                          |	РегистрацияДопусков.Регистратор КАК Регистратор
	                          |ИЗ
	                          |	РегистрСведений.РегистрацияДопусковКСпортивнымСоревнованиям.СрезПоследних(
	                          |			,
	                          |			(Спортсмен, ВидСпорта) В
	                          |				(ВЫБРАТЬ
	                          |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	                          |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	                          |				ИЗ
	                          |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК РегистрацияДопусков
	                          |ГДЕ
	                          |	РегистрацияДопусков.ВидДопуска = ЗНАЧЕНИЕ(Перечисление.ВидыДопусковКСпортивнойДеятельности.ДопускКТренировочномуПроцессу)";
	               // }Рарус dotere #20994 -Учитывается когда был отчислен и поступил вновь 2021.10.01
	// }Рарус adilas #16312 -Информация об отчислении спортсмена 2021.05.24
	//Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", ?(ЗначениеЗаполнено(ТекущаяОрганизация), " ГДЕ ВидыСпорта.Владелец = &Организация", ""));
	// }Рарус dotere #20994 -В запросе убраны параметры Орагнизаии 2021.10.12
	Запрос.Текст = ?(ЗначениеЗаполнено(ДатаПриказа), ТекстЗапросаОтчисление, ТекстЗапросаАктуальное);
	// {Рарус dotere #20994 -В запросе убраны параметры Орагнизаии 2021.10.12
	//Запрос.УстановитьПараметр("Организация", ТекущаяОрганизация);
	Запрос.УстановитьПараметр("Спортсмен", Объект.Ссылка);	
	// {Рарус dotere #20994 -Учитывается когда был отчислен и поступил вновь 2021.10.01
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	// }Рарус adilas #21306 -Тестирование релиза Альфа СПОРТ 1.0.0.4. Спортсмены 2021.10.13
	Запрос.УстановитьПараметр("ДатаПриказа", ДатаПриказа);
	// }Рарус adilas #21487 -Карточка спортсмена. Данные по спортсмену. 2021.10.14
	
	Пакет = Запрос.ВыполнитьПакет();
	
	тзРазряд = Пакет[1].Выгрузить();
	Разряд = "";
	Если тзРазряд.Количество() = 0 Тогда
		Разряд = НСтр("ru = 'Не присвоен'"); 
		РазрядСсылка = Документы.ПрисвоениеРазряда.ПустаяСсылка();
	Иначе 
		Для Каждого СтрокаРазряд Из тзРазряд Цикл
			// {Рарус dotere #22179 -Выводит только разряд если нету срока подтверждения или разряд с датой подтверждения 2021.11.11
			Разряд = СтрШаблон(НСтр("ru = '%1'"), СокрЛП(СтрокаРазряд.Разряд));
			Если Не Число(СтрокаРазряд.ДатаПодтвержденияразрядаВГодах) > 2 Тогда
				Если СтрокаРазряд.ДатаПодтверждения > ТекущаяДатаСеанса() Тогда
					Разряд =  Разряд + СтрШаблон(НСтр("ru = ', действует до %1'"), Формат(СтрокаРазряд.ДатаПодтверждения,"ДЛФ=Д"));
					Элементы.Разряд.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
				Иначе
					Разряд =  Разряд + СтрШаблон(НСтр("ru = ', действует до %1'"), Формат(СтрокаРазряд.ДатаПодтверждения, "ДЛФ=Д"));
					Элементы.Разряд.ЦветТекста = ЦветаСтиля.ПросроченныеДанныеЦвет;
				КонецЕсли;
			КонецЕсли;
			// }Рарус dotere #22179 -Выводит только разряд если нету срока подтверждения или разряд с датой подтверждения 2021.11.11
			Разряд = Разряд + Символы.ПС;
			// {Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22
			РазрядСсылка = тзРазряд[0].Регистратор;
			// }Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22
		КонецЦикла;
	КонецЕсли;
	
	// {Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	Если ИспользоватьВГ Тогда
		
		тзВозрГруппа = Пакет[2].Выгрузить();
		ВозрастнаяГруппа = "";                                  
		Если тзВозрГруппа.Количество() =0 Тогда
			ВозрастнаяГруппа = НСтр("ru = 'У спортсмена не указана возрастная группа!'");
			ВозрастнаяГруппаСсылка = Документы.УстановкаМеждународнойВозрастнойГруппы.ПустаяСсылка();
        Иначе
            // {Рарус kotana -Исправление ошибок Sonar 2021.06.22
            //Для Каждого СтрокаВозГруппа Из тзВозрГруппа Цикл
            // }Рарус kotana -Исправление ошибок Sonar 2021.06.22
				ВозрастнаяГруппа = ВозрастнаяГруппа + тзВозрГруппа[0].МеждународнаяВозрастнаяГруппа;
				// {Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22
				ВозрастнаяГруппаСсылка = тзВозрГруппа[0].Регистратор;
				// }Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22
                
            // {Рарус kotana -Исправление ошибок Sonar 2021.06.22
            //КонецЦикла;
            // }Рарус kotana -Исправление ошибок Sonar 2021.06.22
		КонецЕсли;
	КонецЕсли;
	// }Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	
	тзДопускиКСоревнованиям = Пакет[3].Выгрузить();
	ДопускКСоревнованиям = "";
	
	Если тзДопускиКСоревнованиям.Количество() = 0 Тогда
		ДопускКСоревнованиям = НСтр("ru = 'Не введен'");
		ДопускКСоревнованиямСсылка = Документы.ДопускиУчастниковКСпортивнымСоревнованиям.ПустаяСсылка();
		// {Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.20
		Элементы.ДопускКСоревнованиям.ЦветТекста = ЦветаСтиля.ПросроченныеДанныеЦвет;
		// }Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.20
	Иначе

		Для Каждого СтрокаДопуск Из тзДопускиКСоревнованиям Цикл
			ДопускДата = тзДопускиКСоревнованиям[0].ДействуетДо;
			Если ДопускДата < ТекущаяДатаСеанса() Тогда
				
				ДопускКСоревнованиям = СтрШаблон(НСтр("ru = 'Действует до %1'"), Формат(ДопускДата, "ДЛФ=Д"));
				ДопускКСоревнованиямСсылка = СтрокаДопуск.Регистратор;
				Элементы.ДопускКСоревнованиям.ЦветТекста = ЦветаСтиля.ПросроченныеДанныеЦвет;
				
			Иначе
				ДопускКСоревнованиям = СтрШаблон(НСтр("ru = 'Действует до %1'"), Формат(ДопускДата, "ДЛФ=Д"));
				ДопускКСоревнованиямСсылка = СтрокаДопуск.Регистратор;
				Элементы.ДопускКСоревнованиям.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
			КонецЕсли;
			
			ДопускКСоревнованиям = ДопускКСоревнованиям + Символы.ПС;
			ДопускКСоревнованиямСсылка = СтрокаДопуск.Регистратор;
			
		КонецЦикла;
	КонецЕсли;
	
	// {Рарус adilas #21625 -Карточка спортсмена. Допуски 2021.10.20
	тзДопускиКТренировочному = Пакет[9].Выгрузить();
	ДопускКТренировочному = "";
	
	Если тзДопускиКТренировочному.Количество()=0 Тогда
		
		ДопускКТренировочному = НСтр("ru = 'Не введен'");
		Элементы.ДопускКТренировочному.ЦветТекста = ЦветаСтиля.ПросроченныеДанныеЦвет;
		ДопускКТренировочномуСсылка = Документы.ДопускиУчастниковКСпортивнымСоревнованиям.ПустаяСсылка();
		
	Иначе
		
		Для Каждого СтрокаДопуск Из тзДопускиКТренировочному Цикл
			
			ДопускКТренеровочномуДата = тзДопускиКТренировочному[0].ДействуетДо;
			Если ДопускКТренеровочномуДата < ТекущаяДатаСеанса() Тогда
				
				ДопускКТренировочному = СтрШаблон(НСтр("ru = 'Действует до %1'"), Формат(ДопускКТренеровочномуДата, "ДЛФ=Д"));	
				ДопускКТренировочномуСсылка = СтрокаДопуск.Регистратор;
				Элементы.ДопускКТренировочному.ЦветТекста = ЦветаСтиля.ПросроченныеДанныеЦвет;
				
			Иначе
				ДопускКТренировочному = СтрШаблон(НСтр("ru = 'Действует до %1'"), Формат(ДопускКТренеровочномуДата, "ДЛФ=Д"));
				ДопускКТренировочномуСсылка = СтрокаДопуск.Регистратор;
				Элементы.ДопускКТренировочному.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
			КонецЕсли;
			
			ДопускКТренировочному = ДопускКТренировочному + Символы.ПС;	
			ДопускКТренировочномуСсылка = СтрокаДопуск.Регистратор;
			
		КонецЦикла;
	КонецЕсли;
	// }Рарус adilas #21625 -Карточка спортсмена. Допуски 2021.10.20
	
	// {Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	Если ИспользоватьСтрахование Тогда
		
		тзПолис = Пакет[4].Выгрузить();
		СтраховойПолис = "";
		Если тзПолис.Количество() = 0 Тогда
			СтраховойПолис = НСтр("ru = 'Не введён'");
			СтраховойПолисСсылка = Документы.СтраховойПолисСпортсмена.ПустаяСсылка();
		Иначе                                                                         
			Для Каждого строкаПолис Из тзПолис Цикл
			    // {Рарус dotere #20490 -Выводить только период действия 2021.09.17
				СтраховойПолис = СтрШаблон(НСтр("ru = 'Действует: %1 - %2'"), 
				//СокрЛП(строкаПолис.ВидСпорта), СокрЛП(строкаПолис.СтраховаяКомпания), СокрЛП(строкаПолис.НомерСтраховогоПолиса),
				СокрЛП(Формат(строкаПолис.ДатаНачала, "ДЛФ=Д")), СокрЛП(Формат(строкаПолис.ДатаОкончания, "ДЛФ=Д")));
				Если строкаПолис.ДатаОкончания < ТекущаяДатаСеанса() Тогда
					//СтраховойПолис = СтраховойПолис + НСтр("ru = ' - ПРОСРОЧЕН'");
					Элементы.СтраховойПолис.ЦветТекста = ЦветаСтиля.ПросроченныеДанныеЦвет;;
				Иначе
					 // {Рарус dotere #22137 -Меняет цвет если не просрочен 2021.11.08
					Элементы.СтраховойПолис.ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
					 // }Рарус dotere #22137 -Меняет цвет если не просрочен 2021.11.08
				КонецЕсли;
				// }Рарус dotere #20490 -Выводить только период действия 2021.09.17

				СтраховойПолис = СтраховойПолис + Символы.ПС;
				// {Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22
				СтраховойПолисСсылка = строкаПолис.Регистратор;
				// }Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	// }Рарус adilas #9705 -Страхование спортсмена скрывать тем организациям, которым это не нужно 2020.10.07
	
	// {Рарус adilas #9851 -Выводить на первую закладку "Данные по спортсмену" этап, вид спорта 2020.10.05
	тзВидСпортаИТекущийЭтап = Пакет[6].Выгрузить();
	ВидСпорта = "";
	ТекущийЭтап = "";
	Если тзВидСпортаИТекущийЭтап.Количество() = 0 Тогда
		ВидСпорта = НСтр("ru = 'Вид спорта не выбран'");
		ТекущийЭтап	  = НСтр("ru = 'Спортсмен не зачислен на этап'");
		ТекущийЭтапСсылка = Документы.ЗачислениеСпортсменовНаЭтап.ПустаяСсылка();
	Иначе 
		Для Каждого СтрокаВидСпортаИЭтап Из тзВидСпортаИТекущийЭтап Цикл
			ВидСпорта = СокрЛП(СтрокаВидСпортаИЭтап.ВидСпорта);
			ТекущийЭтап = СокрЛП(СтрокаВидСпортаИЭтап.Этап);
		КонецЦикла;
		
		// {Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22
		ТекущийЭтапСсылка = тзВидСпортаИТекущийЭтап[0].Регистратор;
		// }Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22
			
	КонецЕсли;
	// }Рарус adilas #9851 -Выводить на первую закладку "Данные по спортсмену" этап, вид спорта 2020.10.05
	// {Рарус adilas #10373 -Сборные спортсмена 2020.10.19
	тзСборная = Пакет[7].Выгрузить();
	Сборная = "";
	Если тзСборная.Количество() = 0 Тогда
		Сборная	  = НСтр("ru = 'Спортсмен не включен в состав сборной'");
	Иначе
		Для Каждого СтрокаСборной Из тзСборная Цикл
			Если СтрокаСборной.ВключитьВСборную = Истина Тогда
				Сборная = НСтр("ru = 'Включен в состав сборной'");
			Иначе
				Сборная	= НСтр("ru = 'Спортсмен не включен в состав сборной'");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	// }Рарус adilas #10373 -Сборные спортсмена 2020.10.19

	// {Рарус adilas #16312 -Информация об отчислении спортсмена 2021.05.24
	// {Рарус ivaart IN-21105 -При повторном приеме спортсмена скрывает информацию об исключении. Доработка 2021.10.14
	тзСтатусИсключения = Пакет[8].Выгрузить();
	СтатусИсключения = НСтр("ru = ''");	
	Если тзСтатусИсключения.Количество() > 0 Тогда
		// {Рарус dotere #20629 -При повторном приеме спортсмена скрывает информацию об исключении 2021.09.23
		// {Рарус adilas #21487 -Карточка спортсмена. Данные по спортсмену. 2021.10.15
		Для Каждого СтрокаСтатус Из тзСтатусИсключения Цикл
			Если ТипЗнч(СтрокаСтатус.Регистратор) = ТИП("ДокументСсылка.ИсключениеИзСпортивногоУчреждения") Тогда
				 
					Элементы.СтатусИсключения.Видимость = Истина;
					Элементы.СтатусИсключения.ЦветТекста = ЦветаСтиля.ПросроченныеДанныеЦвет;;
					СтатусИсключения = СтрШаблон(НСтр("ru = '%1, номер приказа %2'"), СокрЛП(Формат(СтрокаСтатус.ДатаПриказа, "ДЛФ=D")), СокрЛП(СтрокаСтатус.НомерПриказа));
					//ВидСпорта = СтрШаблон(НСтр("ru = 'Отчислен(-а) с вида спорта %1'"), СокрЛП(СтрокаСтатус.ВидСпорта));
					//Элементы.ВидСпорта.Доступность = Ложь; 
					СтатусИсключенияСсылка = тзСтатусИсключения[0].Регистратор;
					
            КонецЕсли;
		КонецЦикла;
		// }Рарус adilas #21487 -Карточка спортсмена. Данные по спортсмену. 2021.10.14
	Иначе	 
		Элементы.СтатусИсключения.Видимость = Ложь;
	КонецЕсли;
	// }Рарус dotere #20629 -При повторном приеме спортсмена скрывает информацию об исключении 2021.09.23
	// }Рарус ivaart IN-21105 -При повторном приеме спортсмена скрывает информацию об исключении. Доработка 2021.10.14
	// }Рарус adilas #16312 -Информация об отчислении спортсмена 2021.05.24
	
    // {Рарус kotana -Если до записи нового спортсмена не указан статус - нет возможности указать его позже. 2021.06.16
    СтатусСпортсменаСтр = Объект.СтатусСпортсмена;
    
    Если НЕ ЗначениеЗаполнено(СтатусСпортсменаСтр) Тогда
        
        СтатусСпортсменаСтр = НСтр("ru = 'Укажите статус спортсмена'");
        
    КонецЕсли; 
    
	// }Рарус kotana -Если до записи нового спортсмена не указан статус - нет возможности указать его позже. 2021.06.16
	
 КонецПроцедуры
 
&НаКлиенте
Процедура ОбновитьОтображениеЭлементовНаФорме()
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры

//{Рарус Lobash IN-9499 16.09.20 
&НаКлиенте
Процедура ПоискПоФизическимЛицамЗавершение(Результат, ДопПараметры) Экспорт
	Если ЗначениеЗаполнено(Результат) Тогда
		Объект.ФизическоеЛицо = Результат;
		ФизическоеЛицоПриИзменении(ЭтаФорма.Элементы.ФизическоеЛицо);
	КонецЕсли;
	
КонецПроцедуры
//}Рарус Lobash IN-9499 16.09.20

// {Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22
&НаСервере
Функция НажатиеГиперссылкиСервер()
		
	ОтборДляСписка = Новый Структура;
	ОтборДляСписка.Вставить("Спортсмен", Объект.Ссылка);
	ОтборДляСписка.Вставить("Организация", ТекущаяОрганизация);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ОтборДляСписка);
	
	Возврат ПараметрыФормы;
	 
КонецФункции
// }Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22

&НаСервере
Функция ПроверкаПравДляДопускаКСоревнованиям()
	Если ПравоДоступа("Просмотр", Метаданные.Документы.ДопускиУчастниковКСпортивнымСоревнованиям) Тогда
		Доступ = Истина;
		Возврат Доступ;
	Иначе
		Доступ = Ложь;
		Возврат Доступ;
	КонецЕсли;		
КонецФункции

// {Рарус adilas #17291 -Особенности развития 2021.07.01
&НаКлиенте
Процедура УстановитьВидимостьОсобенностей()

	Если Объект.ЕстьОсобенностиЗдоровья Тогда 
    	Элементы.ГруппаНастройкиОсобенностейРазвития.Видимость = Истина;     
    Иначе     
        Элементы.ГруппаНастройкиОсобенностейРазвития.Видимость = Ложь; 
    КонецЕсли;
	
КонецПроцедуры
// }Рарус adilas #17291 -Особенности развития 2021.07.01

#КонецОбласти

#Область ОбработчикиСменыСтраниц

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница.Имя = "Разряды" Тогда
		Если Элементы.Найти("СписокРазрядов") = Неопределено Тогда
			Элементы.ЗаглушкаРазряды.Видимость = Ложь;
			СформироватьДинамическийСписокПоРазрядам();
		Иначе
			Возврат
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница.Имя = "Допуски" Тогда
		Если Элементы.Найти("СписокДопусков") = Неопределено Тогда
			Элементы.ЗаглушкаДопуски.Видимость = Ложь;
			СформироватьДинамическийСписокПоДопускам();
		Иначе
			Возврат
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница.Имя = "ДокументыУдостоверяющиеЛичность" Тогда
		Если Элементы.Найти("СписокДокументовФизЛиц") = Неопределено Тогда
			Элементы.ЗаглушкаДокументыФизЛица.Видимость = Ложь;
			СформироватьДинамическийСписокПоДокументамУдостоверяющиеЛичность();
		Иначе
			Возврат
		КонецЕсли;
	
	ИначеЕсли ТекущаяСтраница.Имя = "Полис" Тогда
		Если Элементы.Найти("СписокСтраховыхПолисов") = Неопределено Тогда
			Элементы.ЗаглушкаПолис.Видимость = Ложь;
			СформироватьДинамическийСписокСтраховыхПолисов();
		Иначе
			Возврат;
		КонецЕсли;
	
	ИначеЕсли ТекущаяСтраница.Имя = "МеждународнаяВозрастнаяГруппа" Тогда
		Если ИспользоватьВГ Тогда
			Если Элементы.Найти("СписокМеждународныхВозрастныхГрупп") = Неопределено Тогда
				Элементы.ЗаглушкаМеждународнаяВозрастнаяГруппа.Видимость = Ложь;
				СформироватьДинамическийСписокМеждународныхВозрастныхГрупп();
			Иначе
				Возврат;
			КонецЕсли;			
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница.Имя = "СоставСемьи" Тогда
		Если Элементы.Найти("СписокСоставСемьи") = Неопределено Тогда
			Элементы.ЗаглушкаСоставСемьи.Видимость = Ложь;
			СформироватьДинамическийСписокСоставСемьи();
		Иначе
			Возврат
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница.Имя = "История" Тогда
		Если Элементы.Найти("СписокИстория") = Неопределено Тогда
			Элементы.ЗаглушкаИстория.Видимость = Ложь;
			СформироватьДинамическийСписокИстория();
		Иначе
			Возврат
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница.Имя = "СогласиеНаОбработкуПД" Тогда
		Если Элементы.Найти("СписокСогласиеНаОбработкуПД") = Неопределено Тогда
			Элементы.ЗаглушкаСогласиеНаОбработкуПД.Видимость = Ложь;
			СформироватьДинамическийСписокСогласиеНаОбработкуПД();
		Иначе
			Возврат
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница.Имя = "Этапы" Тогда
		Если Элементы.Найти("СписокЭтапыСпортсменов") = Неопределено Тогда
			Элементы.ЗаглушкаЭтапы.Видимость = Ложь;
			СформироватьДинамическийСписокЭтапыСпортсменов();
		Иначе
			Возврат
		КонецЕсли;
	// {Рарус adilas #10101 -Учебные учреждения спортсменов 2020.10.09
	ИначеЕсли ТекущаяСтраница.Имя = "УчебныеУчреждения" Тогда
		Если Элементы.Найти("СписокУчебныеУчреждения") = Неопределено Тогда
			Элементы.ЗаглушкаУчебноеУчреждение.Видимость = Ложь;
			СформироватьДинамическийСписокУчебныеУчреждения();
		Иначе
			Возврат;
		КонецЕсли;
	// }Рарус adilas #10101 -Учебные учреждения спортсменов 2020.10.09
	// {Рарус adilas -Обновление основной информации при смене страницы на основную 2020.10.16
	ИначеЕсли ТекущаяСтраница.Имя = "Основное" Тогда
		ОбновитьФормуПриСменеСтраниц();
	Иначе
		Возврат;
	// }Рарус adilas -Обновление основной информации при смене страницы на основную 2020.10.16
	КонецЕсли;	
	                                                   
КонецПроцедуры

&НаСервере
Процедура СформироватьДинамическийСписокИстория()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
                   |    ВключениеСпортсменовВГруппу.Ссылка КАК Ссылка
                   |ПОМЕСТИТЬ ВТ_Документы
                   |ИЗ
                   |    Документ.ВключениеСпортсменовВГруппу.Спортсмены КАК ВключениеСпортсменовВГруппу
                   |ГДЕ
                   |    ВключениеСпортсменовВГруппу.Спортсмен = &Спортсмен
                   |
                   |ОБЪЕДИНИТЬ ВСЕ
                   |
                   |ВЫБРАТЬ
                   |    ИсключениеИзСпортивногоУчрежденияСпортсмены.Ссылка
                   |ИЗ
                   |    Документ.ИсключениеИзСпортивногоУчреждения.Спортсмены КАК ИсключениеИзСпортивногоУчрежденияСпортсмены
                   |ГДЕ
                   |    ИсключениеИзСпортивногоУчрежденияСпортсмены.Спортсмен = &Спортсмен
                   |
                   |ОБЪЕДИНИТЬ ВСЕ
                   |
                   |ВЫБРАТЬ
                   |    ИсключениеСпортсменовИзГруппы.Ссылка
                   |ИЗ
                   |    Документ.ИсключениеСпортсменовИзГруппы.Спортсмены КАК ИсключениеСпортсменовИзГруппы
                   |ГДЕ
                   |    ИсключениеСпортсменовИзГруппы.Спортсмен = &Спортсмен
                   |
                   |ОБЪЕДИНИТЬ ВСЕ
                   |
                   |ВЫБРАТЬ
                   |    ЗаявленияНаПриемВСпортивноеУчреждение.Ссылка
                   |ИЗ
                   |    Документ.ЗаявленияНаПриемВСпортивноеУчреждение КАК ЗаявленияНаПриемВСпортивноеУчреждение
                   |ГДЕ
                   |    ЗаявленияНаПриемВСпортивноеУчреждение.Спортсмен = &Спортсмен
                   |
                   |ОБЪЕДИНИТЬ ВСЕ
                   |
                   |ВЫБРАТЬ
                   |    ПереводСпортсменовМеждуГруппами.Ссылка
                   |ИЗ
                   |    Документ.ПереводСпортсменовМеждуГруппами.Спортсмены КАК ПереводСпортсменовМеждуГруппами
                   |ГДЕ
                   |    ПереводСпортсменовМеждуГруппами.Спортсмен = &Спортсмен
                   |
                   |ОБЪЕДИНИТЬ ВСЕ
                   |
                   |ВЫБРАТЬ
                   |    ФормированиеГруппыСпортсмены.Ссылка
                   |ИЗ
                   |    Документ.ФормированиеГруппы.Спортсмены КАК ФормированиеГруппыСпортсмены
                   |ГДЕ
                   |    ФормированиеГруппыСпортсмены.Спортсмен = &Спортсмен
                   |;
                   |
                   |////////////////////////////////////////////////////////////////////////////////
                   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
                   |    ДвиженияСпортсменов.Ссылка КАК Ссылка,
                   |    ДвиженияСпортсменов.Дата КАК Дата,
                   |    ДвиженияСпортсменов.Номер КАК Номер,
                   |    ДвиженияСпортсменов.Тип КАК Тип,
                   |    ДвиженияСпортсменов.Организация КАК Организация,
                   |    ДвиженияСпортсменов.ВидСпорта КАК ВидСпорта,
                   |    ДвиженияСпортсменов.ДатаПриказа КАК ДатаПриказа,
                   |    ДвиженияСпортсменов.НомерПриказа КАК НомерПриказа,
                   |    ДвиженияСпортсменов.ДатаСобытия КАК ДатаСобытия
                   |ИЗ
                   |    ЖурналДокументов.ДвиженияСпортсменов КАК ДвиженияСпортсменов
                   |ГДЕ
                   |    ДвиженияСпортсменов.Ссылка В
                   |            (ВЫБРАТЬ
                   |                ВТ_Документы.Ссылка
                   |            ИЗ
                   |                ВТ_Документы)";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Дата приказа,ДатаПриказа");
	МассивКолонок.Добавить("Номер приказа,НомерПриказа");
	//МассивКолонок.Добавить("Номер,Номер");
    // {Рарус kotana #IN-17702 -Добавила колонку с датой события, модифицировала запрос 2021.07.06
    МассивКолонок.Добавить("Дата события,ДатаСобытия");
    // }Рарус kotana #IN-17702 -Добавила колонку с датой события, модифицировала запрос 2021.07.06
	МассивКолонок.Добавить("Спортивное учреждение,Организация");
	МассивКолонок.Добавить("Вид спорта,ВидСпорта");
	МассивКолонок.Добавить("Тип,Тип");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокИстория", ТекстЗапроса, МассивКолонок,,"ЖурналДокументов.ДвиженияСпортсменов", "История",,, Новый Структура("Спортсмен",Объект.Ссылка));
	// {Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	Элементы["СписокИстория"].УстановитьДействие("ПередНачаломДобавления", "Подключаемый_ПередНачаломДобавленияПрограммноСозданныйСписок");
	// }Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	ОбновитьФотографиюНаСервере();
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьДинамическийСписокСоставСемьи()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СоставыСемейСпортсменов.Родитель КАК Родитель,
	               |	СоставыСемейСпортсменов.СтепеньРодства КАК СтепеньРодства
	               |ИЗ
	               |	РегистрСведений.СоставыСемейСпортсменов КАК СоставыСемейСпортсменов
	               |ГДЕ
	               |	СоставыСемейСпортсменов.Спортсмен = &Спортсмен";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Родитель,Родитель");
	МассивКолонок.Добавить("Кем приходится,СтепеньРодства");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокСоставСемьи", ТекстЗапроса, МассивКолонок,,"РегистрСведений.СоставыСемейСпортсменов", "СоставСемьи",,, Новый Структура("Спортсмен",Объект.Ссылка));
	// {Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	//
	Элементы["СписокСоставСемьи"].УстановитьДействие("ПередНачаломДобавления", "Подключаемый_ПередНачаломДобавленияПрограммноСозданныйСписок");
	// }Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	ОбновитьФотографиюНаСервере();
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьДинамическийСписокМеждународныхВозрастныхГрупп()
	
	МассивСпортсменов = Новый Массив;
	МассивСпортсменов.Добавить(Объект.Ссылка);	
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	УстановкаМеждународнойВозрастнойГруппы.Ссылка КАК Ссылка,
	               |	УстановкаМеждународнойВозрастнойГруппы.Дата КАК Дата,
	               |	УстановкаМеждународнойВозрастнойГруппы.Номер КАК Номер,
	               |	УстановкаМеждународнойВозрастнойГруппы.УчебныйГод КАК УчебныйГод,
	               |	УстановкаМеждународнойВозрастнойГруппы.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа
	               |ИЗ
	               |	Документ.УстановкаМеждународнойВозрастнойГруппы КАК УстановкаМеждународнойВозрастнойГруппы
	               |ГДЕ
	               |	УстановкаМеждународнойВозрастнойГруппы.Спортсмены.Спортсмен В(&МассивСпортсменов)";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Дата,Дата");
	МассивКолонок.Добавить("Номер,Номер");
	МассивКолонок.Добавить("Учебный год,УчебныйГод");
	МассивКолонок.Добавить("Возрастная группа,МеждународнаяВозрастнаяГруппа");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокМеждународныхВозрастныхГрупп", ТекстЗапроса, МассивКолонок, ,"Документ.УстановкаМеждународнойВозрастнойГруппы", "МеждународнаяВозрастнаяГруппа", , , Новый Структура("МассивСпортсменов", МассивСпортсменов));	
	// {Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	Элементы["СписокМеждународныхВозрастныхГрупп"].УстановитьДействие("ПередНачаломДобавления", "Подключаемый_ПередНачаломДобавленияПрограммноСозданныйСписок");
	// }Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	ОбновитьФотографиюНаСервере();
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьДинамическийСписокСтраховыхПолисов()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СтраховойПолисСпортсмена.Номер КАК Номер,
	               |	СтраховойПолисСпортсмена.Дата КАК Дата,
	               |	СтраховойПолисСпортсмена.Ссылка КАК Ссылка,
	               |	СтраховойПолисСпортсмена.СтраховаяКомпания КАК СтраховаяКомпания,
	               |	СтраховойПолисСпортсмена.ДатаНачала КАК ДатаНачала,
	               |	СтраховойПолисСпортсмена.ДатаОкончания КАК ДатаОкончания,
	               |	СтраховойПолисСпортсмена.ДатаВыдачиПолиса КАК ДатаВыдачиПолиса,
	               |	СтраховойПолисСпортсмена.СерияСтраховогоПолиса КАК СерияСтраховогоПолиса,
	               |	СтраховойПолисСпортсмена.НомерСтраховогоПолиса КАК НомерСтраховогоПолиса,
	               |	СтраховойПолисСпортсмена.СтраховаяСумма КАК СтраховаяСумма,
	               |	СтраховойПолисСпортсмена.СтраховаяПремия КАК СтраховаяПремия
	               |ИЗ
	               |	Документ.СтраховойПолисСпортсмена КАК СтраховойПолисСпортсмена
	               |ГДЕ
	               |	СтраховойПолисСпортсмена.Спортсмен = &Спортсмен";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Дата,Дата");
	МассивКолонок.Добавить("Номер,Номер");
	МассивКолонок.Добавить("Страховая компания,СтраховаяКомпания");
	МассивКолонок.Добавить("Дата начала действия,ДатаНачала");
	МассивКолонок.Добавить("Дата окончания действия,ДатаОкончания");
	МассивКолонок.Добавить("Серия страхового полиса,СерияСтраховогоПолиса");
	МассивКолонок.Добавить("Номер страхового полиса,НомерСтраховогоПолиса");
	МассивКолонок.Добавить("Страховая сумма,СтраховаяСумма");
	МассивКолонок.Добавить("СтраховаяПремия,СтраховаяПремия");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокСтраховыхПолисов", ТекстЗапроса, МассивКолонок,,"Документ.СтраховойПолисСпортсмена", "Полис",,, Новый Структура("Спортсмен",Объект.Ссылка));
	// {Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	Элементы["СписокСтраховыхПолисов"].УстановитьДействие("ПередНачаломДобавления", "Подключаемый_ПередНачаломДобавленияПрограммноСозданныйСписок");
	// }Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	ОбновитьФотографиюНаСервере();
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьДинамическийСписокПоДокументамУдостоверяющиеЛичность()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДокументыФизическихЛиц.ВидДокумента КАК ВидДокумента,
	               |	ДокументыФизическихЛиц.Серия КАК Серия,
	               |	ДокументыФизическихЛиц.Номер КАК Номер,
	               |	ДокументыФизическихЛиц.ДатаВыдачи КАК ДатаВыдачи,
	               |	ДокументыФизическихЛиц.СрокДействия КАК СрокДействия,
	               |	ДокументыФизическихЛиц.КемВыдан КАК КемВыдан,
	               |	ДокументыФизическихЛиц.КодПодразделения КАК КодПодразделения,
	               |	ДокументыФизическихЛиц.Документ КАК Документ,
	               |	ДокументыФизическихЛиц.Гражданство КАК Гражданство
	               |ИЗ
	               |	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	               |ГДЕ
	               |	ДокументыФизическихЛиц.ФизическоеЛицо = &ФизическоеЛицо";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Вид документа,ВидДокумента");
	МассивКолонок.Добавить("Серия,Серия");
	МассивКолонок.Добавить("Номер,Номер");
	МассивКолонок.Добавить("Дата выдачи,ДатаВыдачи");
	МассивКолонок.Добавить("Срок действия,СрокДействия");
	МассивКолонок.Добавить("Кем выдан,КемВыдан");
	МассивКолонок.Добавить("Код подразделения,КодПодразделения");
	МассивКолонок.Добавить("Документ,Документ");
	МассивКолонок.Добавить("Гражданство,Гражданство");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокДокументовФизЛиц", ТекстЗапроса, МассивКолонок,,"РегистрСведений.ДокументыФизическихЛиц", "ДокументыУдостоверяющиеЛичность",,, Новый Структура("ФизическоеЛицо",Объект.ФизическоеЛицо));
	// {Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	//
	Элементы["СписокДокументовФизЛиц"].УстановитьДействие("ПередНачаломДобавления", "Подключаемый_ПередНачаломДобавленияПрограммноСозданныйСписок");
	// }Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	ОбновитьФотографиюНаСервере();
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьДинамическийСписокПоДопускам()
	
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ДопускиУчастниковКСпортивнымСоревнованиям.Ссылка КАК Ссылка,
		               |	ДопускиУчастниковКСпортивнымСоревнованиям.ПометкаУдаления КАК ПометкаУдаления,
		               |	ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.Ссылка.Номер КАК Номер,
		               |	ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.Ссылка.Дата КАК Дата,
		               |	ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.Ссылка.Проведен КАК Проведен,
		               |	ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.Ссылка.Комментарий КАК Комментарий,
		               |	ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.Ссылка.Ответственный КАК Ответственный,
		               |	ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.Спортсмен КАК Спортсмен,
		               |	ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.ДатаПолученияДопуска КАК ДатаПолученияДопуска,
		               |	ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.ДействуетДо КАК ДействуетДо,
		               |	ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.Ссылка.ВидСпорта КАК ВидСпорта,
		               |	ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.Ссылка.ВидДопуска КАК ВидДопуска
		               |ИЗ
		               |	Документ.ДопускиУчастниковКСпортивнымСоревнованиям КАК ДопускиУчастниковКСпортивнымСоревнованиям
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДопускиУчастниковКСпортивнымСоревнованиям.Спортсмены КАК ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены
		               |		ПО ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.Ссылка = ДопускиУчастниковКСпортивнымСоревнованиям.Ссылка
		               |ГДЕ
		               |	ДопускиУчастниковКСпортивнымСоревнованиямСпортсмены.Спортсмен = &Спортсмен";
		МассивКолонок = Новый Массив;
		//МассивКолонок.Добавить("Дата,Дата");
		//МассивКолонок.Добавить("Номер,Номер");
		МассивКолонок.Добавить("Дата получения допуска,ДатаПолученияДопуска");
		МассивКолонок.Добавить("Действует до,ДействуетДо");
		МассивКолонок.Добавить("Вид допуска,ВидДопуска");
		УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокДопусков", ТекстЗапроса, МассивКолонок,,"Документ.ДопускиУчастниковКСпортивнымСоревнованиям", "Допуски",,, Новый Структура("Спортсмен",Объект.Ссылка));
		// {Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
		//
		Элементы["СписокДопусков"].УстановитьДействие("ПередНачаломДобавления", "Подключаемый_ПередНачаломДобавленияПрограммноСозданныйСписок");
		// }Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
		ОбновитьФотографиюНаСервере();
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьДинамическийСписокПоРазрядам()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Ссылка КАК Ссылка,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Дата КАК Дата,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.ПометкаУдаления КАК ПометкаУдаления,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Номер КАК Номер,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Проведен КАК Проведен,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Тип КАК Тип,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Ссылка.Спортсмен КАК Спортсмен,
	               |	ПрисвоениеРазрядаСпортсмены.Разряд КАК Разряд,
	               |	ПрисвоениеРазрядаСпортсмены.ДатаПрисвоения КАК ДатаПрисвоенияПодтверждения,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.ДатаПриказа КАК ДатаПриказа,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.НомерПриказа КАК НомерПриказа
	               |ИЗ
	               |	ЖурналДокументов.РазрядыИЗванияСпортсменов КАК ЖурналДокументовРазрядыИЗванияСпортсменов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрисвоениеРазряда.Спортсмены КАК ПрисвоениеРазрядаСпортсмены
	               |		ПО ЖурналДокументовРазрядыИЗванияСпортсменов.Ссылка = ПрисвоениеРазрядаСпортсмены.Ссылка
	               |ГДЕ
	               |	ПрисвоениеРазрядаСпортсмены.Спортсмен = &Спортсмен
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Ссылка,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Дата,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.ПометкаУдаления,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Номер,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Проведен,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Тип,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.Ссылка.Спортсмен,
	               |	ПодтверждениеРазрядаСпортсменаСпортсмены.Разряд,
	               |	ПодтверждениеРазрядаСпортсменаСпортсмены.ДатаПодтверждения,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.ДатаПриказа,
	               |	ЖурналДокументовРазрядыИЗванияСпортсменов.НомерПриказа
	               |ИЗ
	               |	ЖурналДокументов.РазрядыИЗванияСпортсменов КАК ЖурналДокументовРазрядыИЗванияСпортсменов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодтверждениеРазрядаСпортсмена.Спортсмены КАК ПодтверждениеРазрядаСпортсменаСпортсмены
	               |		ПО ЖурналДокументовРазрядыИЗванияСпортсменов.Ссылка = ПодтверждениеРазрядаСпортсменаСпортсмены.Ссылка
	               |ГДЕ
	               |	ПодтверждениеРазрядаСпортсменаСпортсмены.Спортсмен = &Спортсмен";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Дата приказа,ДатаПриказа");
	МассивКолонок.Добавить("Номер приказа,НомерПриказа");
	МассивКолонок.Добавить("Разряд,Разряд");
	МассивКолонок.Добавить("Дата присвоения/ Подтверждения,ДатаПрисвоенияПодтверждения");
	МассивКолонок.Добавить("Тип,Тип");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокРазрядов", ТекстЗапроса, МассивКолонок,,"ЖурналДокументов.РазрядыИЗванияСпортсменов", "Разряды",,, Новый Структура("Спортсмен",Объект.Ссылка));
	// {Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	//
	Элементы["СписокРазрядов"].УстановитьДействие("ПередНачаломДобавления", "Подключаемый_ПередНачаломДобавленияПрограммноСозданныйСписок");
	// }Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	ОбновитьФотографиюНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДинамическийСписокСогласиеНаОбработкуПД()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СогласияНаОбработкуПД.Ссылка КАК Ссылка,
	               |	СогласияНаОбработкуПД.Дата КАК Дата,
	               |	СогласияНаОбработкуПД.Номер КАК Номер,
	               |	СогласияНаОбработкуПД.Субъект КАК Спортсмен,
	               |	СогласияНаОбработкуПД.Тип КАК Тип,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(СогласияНаОбработкуПД.Ссылка) = ТИП(документ.СогласиеНаОбработкуПерсональныхДанных)
	               |			ТОГДА СогласияНаОбработкуПД.Ссылка.ДатаПолучения
	               |		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	               |	КОНЕЦ КАК ДатаПолучения,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(СогласияНаОбработкуПД.Ссылка) = ТИП(документ.ОтзывСогласияНаОбработкуПерсональныхДанных)
	               |			ТОГДА СогласияНаОбработкуПД.Ссылка.ДатаОтзыва
	               |		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	               |	КОНЕЦ КАК ДатаОтзыва
	               |ИЗ
	               |	ЖурналДокументов.СогласияНаОбработкуПД КАК СогласияНаОбработкуПД
	               |ГДЕ
	               |	СогласияНаОбработкуПД.Субъект = &Субъект";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Дата,Дата");
	МассивКолонок.Добавить("Номер,Номер");
	МассивКолонок.Добавить("Спортсмен,Спортсмен");
	МассивКолонок.Добавить("Тип,Тип");
	МассивКолонок.Добавить("Дата получения,ДатаПолучения");
	МассивКолонок.Добавить("Дата отзыва,ДатаОтзыва");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокСогласиеНаОбработкуПД", ТекстЗапроса, МассивКолонок,,"ЖурналДокументов.СогласияНаОбработкуПД", "СогласиеНаОбработкуПД",,, Новый Структура("Субъект",Объект.Ссылка));
	// {Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	//
	Элементы["СписокСогласиеНаОбработкуПД"].УстановитьДействие("ПередНачаломДобавления", "Подключаемый_ПередНачаломДобавленияПрограммноСозданныйСписок");
	// }Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
	ОбновитьФотографиюНаСервере();
	
КонецПроцедуры		

&НаСервере
Процедура СформироватьДинамическийСписокЭтапыСпортсменов()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗачислениеСпортсменовНаЭтап.Ссылка КАК Документ
	               |ПОМЕСТИТЬ ВТ_СписокДокументов
	               |ИЗ
	               |	Документ.ЗачислениеСпортсменовНаЭтап.Спортсмены КАК ЗачислениеСпортсменовНаЭтап
	               |ГДЕ
	               |	ЗачислениеСпортсменовНаЭтап.Спортсмен = &Спортсмен
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПереводСпортсменовНаЭтап.Ссылка
	               |ИЗ
	               |	Документ.ПереводСпортсменовНаЭтап.Спортсмены КАК ПереводСпортсменовНаЭтап
	               |ГДЕ
	               |	ПереводСпортсменовНаЭтап.Спортсмен = &Спортсмен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЭтапыСпортивнойПодготовкиСпортсменов.Ссылка КАК Ссылка,
	               |	ЭтапыСпортивнойПодготовкиСпортсменов.Дата КАК Дата,
	               |	ЭтапыСпортивнойПодготовкиСпортсменов.Номер КАК Номер,
	               |	ЭтапыСпортивнойПодготовкиСпортсменов.Организация КАК Организация,
	               |	ЭтапыСпортивнойПодготовкиСпортсменов.ВидСпорта КАК ВидСпорта,
	               |	ЭтапыСпортивнойПодготовкиСпортсменов.Этап КАК Этап,
	               |	ЭтапыСпортивнойПодготовкиСпортсменов.Тренер КАК Тренер,
	               |	ЭтапыСпортивнойПодготовкиСпортсменов.Тип КАК Тип,
	               |	ЭтапыСпортивнойПодготовкиСпортсменов.ДатаПриказа КАК ДатаПриказа,
	               |	ЭтапыСпортивнойПодготовкиСпортсменов.НомерПриказа КАК НомерПриказа,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ЭтапыСпортивнойПодготовкиСпортсменов.Ссылка) = ТИП(Документ.ЗачислениеСпортсменовНаЭтап)
	               |			ТОГДА ЭтапыСпортивнойПодготовкиСпортсменов.Ссылка.ДатаЗачисления
	               |		ИНАЧЕ ЭтапыСпортивнойПодготовкиСпортсменов.Ссылка.ДатаПеревода
	               |	КОНЕЦ КАК ДатаСобытия
	               |ИЗ
	               |	ЖурналДокументов.ЭтапыСпортивнойПодготовкиСпортсменов КАК ЭтапыСпортивнойПодготовкиСпортсменов
	               |ГДЕ
	               |	ЭтапыСпортивнойПодготовкиСпортсменов.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ВТ_СписокДокументов.Документ
	               |			ИЗ
	               |				ВТ_СписокДокументов)";
	
	МассивКолонок = Новый Массив;
	//МассивКолонок.Добавить("Дата,Дата");
	//МассивКолонок.Добавить("Номер,Номер");
	МассивКолонок.Добавить("Дата зачисления/ перевода,ДатаСобытия");
	МассивКолонок.Добавить("Дата приказа,ДатаПриказа");
	МассивКолонок.Добавить("Номер приказа,НомерПриказа");
	МассивКолонок.Добавить("Организация,Организация");
	МассивКолонок.Добавить("Вид спорта,ВидСпорта");
	МассивКолонок.Добавить("Этап,Этап");
	МассивКолонок.Добавить("Тренер,Тренер");
	МассивКолонок.Добавить("Тип,Тип");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокЭтапыСпортсменов", ТекстЗапроса, МассивКолонок,,"ЖурналДокументов.ЭтапыСпортивнойПодготовкиСпортсменов", "Этапы",,, Новый Структура("Спортсмен",Объект.Ссылка));
	Элементы["СписокЭтапыСпортсменов"].УстановитьДействие("ПередНачаломДобавления", "Подключаемый_ПередНачаломДобавленияПрограммноСозданныйСписок");
	ОбновитьФотографиюНаСервере()
	
КонецПроцедуры

// {Рарус adilas #10101 -Учебные учреждения спортсменов 2020.10.09
//
&НаСервере
Процедура СформироватьДинамическийСписокУчебныеУчреждения()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	УчебныеУчрежденияСпортсменов.Спортсмен КАК Спортсмен,
	               |	УчебныеУчрежденияСпортсменов.Организация КАК Организация,
	               |	УчебныеУчрежденияСпортсменов.Класс КАК Класс,
	               |	УчебныеУчрежденияСпортсменов.Курс КАК Курс,
	               |	УчебныеУчрежденияСпортсменов.Факультет КАК Факультет
	               |ИЗ
	               |	РегистрСведений.УчебныеУчрежденияСпортсменов КАК УчебныеУчрежденияСпортсменов
	               |ГДЕ
	               |	УчебныеУчрежденияСпортсменов.Спортсмен = &Спортсмен";
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Спортсмена,Спортсмен");
	МассивКолонок.Добавить("Организация,Организация");
	МассивКолонок.Добавить("Класс,Класс");
	МассивКолонок.Добавить("Курс,Курс");
	МассивКолонок.Добавить("Факультет,Факультет");
	УчетСпортсменовВызовСервера.СозданиеДинамическогоСписка(ЭтотОбъект, "СписокУчебныеУчреждения", ТекстЗапроса, МассивКолонок,,"РегистрСведений.УчебныеУчрежденияСпортсменов", "УчебныеУчреждения",,, Новый Структура("Спортсмен",Объект.Ссылка));
	Элементы["СписокУчебныеУчреждения"].УстановитьДействие("ПередНачаломДобавления", "Подключаемый_ПередНачаломДобавленияПрограммноСозданныйСписок");
	ОбновитьФотографиюНаСервере()
	
КонецПроцедуры

// }Рарус adilas #10101 -Учебные учреждения спортсменов 2020.10.09
// {Рарус adilas -Обновление основной информации при смене страницы на основную 2020.10.16
&НаКлиенте
Процедура ОбновитьФормуПриСменеСтраниц()
	
	ЗаполнитьДопДанныеНаФорме();
	УстановитьОтборНаРегистрФизическойПодготовки();
	
КонецПроцедуры
// }Рарус adilas -Обновление основной информации при смене страницы на основную 2020.10.16

#КонецОбласти

#Область ОбработчикиСтраницыОсновное

// {Рарус adilas #17291 -Особенности развития 2021.07.01
#Область ОбработчикиГруппыДанныеПоСпортсмену

// {Рарус adilas #-10373 -Сборные спортсмена 2020.10.22
&НаКлиенте
Процедура СборнаяНажатиеКлиент(Элемент, СтандартнаяОбработка)
	
	Если Объект.СтатусСпортсмена = ПредопределенноеЗначение("Перечисление.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения") Тогда
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю("Нельзя включать в сборную спортсмена другого спортивного учреждения!");	
	Иначе
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("РегистрСведений.СборныеСпортсменов.ФормаСписка", НажатиеГиперссылкиСервер(), ЭтаФорма);	
	КонецЕсли;
	
КонецПроцедуры
// }Рарус adilas #-10373 -Сборные спортсмена 2020.10.22 

// {Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22
&НаКлиенте
Процедура СтраховойПолисНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не СтраховойПолисСсылка.Пустая() Тогда  
		ПоказатьЗначение(, СтраховойПолисСсылка);
	Иначе
		// {Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
		ОткрытьФорму("Документ.СтраховойПолисСпортсмена.Форма.ФормаДокумента", НажатиеГиперссылкиСервер(), ЭтаФорма);
		// }Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазрядНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	// {Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
	Если ЗначениеЗаполнено(РазрядСсылка) Тогда  
		ПоказатьЗначение(, РазрядСсылка);
	Иначе	
		ОткрытьФорму("Документ.ПрисвоениеРазряда.Форма.ФормаДокумента", НажатиеГиперссылкиСервер(), ЭтаФорма);
	КонецЕсли;
	// }Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийЭтапНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; 
	Если ЗначениеЗаполнено(ТекущийЭтапСсылка) Тогда
		
		ПоказатьЗначение(, ТекущийЭтапСсылка);
	Иначе
		// {Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
		ОткрытьФорму("Документ.ЗачислениеСпортсменовНаЭтап.Форма.ФормаДокумента", НажатиеГиперссылкиСервер(), ЭтаФорма);
		
		// }Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСпортаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ТекущийЭтапСсылка) Тогда
		Если ТипЗнч(ТекущийЭтапСсылка) = Тип("ДокументСсылка.ЗачислениеСпортсменовНаЭтап") Тогда
			ПоказатьЗначение(, ТекущийЭтапСсылка);
		ИначеЕсли ТипЗнч(ТекущийЭтапСсылка) = Тип("ДокументСсылка.ПереводСпортсменовНаЭтап") Тогда
			ПоказатьЗначение(, ТекущийЭтапСсылка);
		КонецЕсли;
	Иначе
		// {Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
		ОткрытьФорму("Документ.ЗачислениеСпортсменовНаЭтап.Форма.ФормаДокумента", НажатиеГиперссылкиСервер(), ЭтаФорма);
		// }Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВозрастнаяГруппаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ВозрастнаяГруппаСсылка.Пустая() Тогда  
		ПоказатьЗначение(, ВозрастнаяГруппаСсылка);
	Иначе
		// {Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
		ОткрытьФорму("Документ.УстановкаМеждународнойВозрастнойГруппы.Форма.ФормаДокумента", НажатиеГиперссылкиСервер(), ЭтаФорма);
		// }Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДопускКСоревнованиямНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; 
	
	Если Не ДопускКСоревнованиямСсылка.Пустая() Тогда  
		ПоказатьЗначение(, ДопускКСоревнованиямСсылка);
	Иначе
		// {Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
		Доступ = ПроверкаПравДляДопускаКСоревнованиям();
		
		Если Доступ Тогда
			ОткрытьФорму("Документ.ДопускиУчастниковКСпортивнымСоревнованиям.Форма.ФормаДокумента", НажатиеГиперссылкиСервер(), ЭтаФорма);
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю("Недостаточно прав! Обратитесть к администратору!");
		// }Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДопускКТренировочномуНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; 
	
	Если Не ДопускКТренировочномуСсылка.Пустая() Тогда  
		ПоказатьЗначение(, ДопускКТренировочномуСсылка);
	Иначе
		// {Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
		Доступ = ПроверкаПравДляДопускаКСоревнованиям();
		
		Если Доступ Тогда
			ОткрытьФорму("Документ.ДопускиУчастниковКСпортивнымСоревнованиям.Форма.ФормаДокумента", НажатиеГиперссылкиСервер(), ЭтаФорма);
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю("Недостаточно прав! Обратитесть к администратору!");
		// }Рарус adilas #10751 -Ноывй документ в карточке спортсмена если не заданы основные значения 2020.11.03
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

// {Рарус adilas #10727 -Статус спортсмена 2020.11.03
&НаКлиенте
Процедура СтатусСпортсменаНажатие(Элемент, СтандартнаяОбработка) 
	
	Если УчетСпортсменовВызовСервера.ЭтоРуководитель() Тогда
		Возврат;		
	КонецЕсли;	
		
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
	
		СтандартнаяОбработка = Ложь;
		Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтотОбъект);
		ПоказатьВводЗначения(Оповещение, , НСтр("ru = 'Выберете статус спортсмена'"), Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыСпортсменов"));
	
	Иначе
		СтандартнаяОбработка = Ложь;
		ОповещениеОЗаписи = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Спортсмен должен быть записан. Записать?'");
		ПоказатьВопрос(ОповещениеОЗаписи, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 0, КодВозвратаДиалога.Да, НСтр("ru = 'Запись карточки'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЭтотОбъект.Записать();     
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Статус можно указывать только для записанного спортсмена!'"));
		Возврат;
    КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначения(Результат, Параметры) Экспорт
    ПослеВводаЗначенияНаСервере(Результат);
КонецПроцедуры

&НаСервере
Процедура ПослеВводаЗначенияНаСервере(Результат) Экспорт	
	
	Если Не Результат = Неопределено Тогда
		ОбъектСпортсмен = РеквизитФормыВЗначение("Объект");
		ОбъектСпортсмен.СтатусСпортсмена = Результат;
		СтатусСпортсменаСтр = ОбъектСпортсмен.СтатусСпортсмена;
        
        // {Рарус kotana -После установки статуса нет пометки изменения формы. Если закрыть форму, то новый статус не сохраняется. 2021.06.16
        ОбъектСпортсмен.Записать();
        // }Рарус kotana -После установки статуса нет пометки изменения формы. Если закрыть форму, то новый статус не сохраняется. 2021.06.16
        
		ЗначениеВРеквизитФормы(ОбъектСпортсмен, "Объект");
		// {Рарус adilas #16864 -Спортсмен другого спорт. учреждения в сборной команде. 2021.06.02
		Если ОбъектСпортсмен.СтатусСпортсмена <> ПредопределенноеЗначение("Перечисление.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения") Тогда
			УстановитьВидимостьДляЗаписаннойКарточки();
			ЗаполнитьДопДанныеНаФорме();
		Иначе
			УстановитьВидимостьДляНовойКарточки();
		КонецЕсли;
		// }Рарус adilas #16864 -Спортсмен другого спорт. учреждения в сборной команде. 2021.06.02
		
	КонецЕсли;
	
КонецПроцедуры
// }Рарус adilas #10727 -Статус спортсмена 2020.11.03
// }Рарус adilas #10484 -При нажатии на гиперссылки открывать документы 2020.10.22

// {Рарус adilas #16312 -Информация об отчислении спортсмена 2021.05.24
&НаКлиенте
Процедура СтатусИсключенияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(СтатусИсключенияСсылка) Тогда  
		ПоказатьЗначение(, СтатусИсключенияСсылка);
	КонецЕсли;	
	
КонецПроцедуры
// }Рарус adilas #16312 -Информация об отчислении спортсмена 2021.05.24

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСтраницаКонтактнаяИнформация
// {Рарус adilas #15377 -Копирование адреса 2021.08.20
&НаКлиенте
Процедура СовпадаетАдресПриИзменении(Элемент)

	Если Объект.СовпадаетАдрес Тогда	
		Если ЗначениеЗаполнено(ЭтаФорма.КонтактнаяИнформацияПоле3e584fc6x6e57x11eaxa218x00155d1eed181) Тогда
		
			ВопросОКопировании = Новый ОписаниеОповещения("ПослеЗакрытияВопросаКопирование", ЭтотОбъект);	
			
			ПоказатьВопрос(ВопросОКопировании,
								НСтр("ru='Адрес места проживания будет заполнен из адреса по прописке, продолжить?'"), 
								РежимДиалогаВопрос.ДаНетОтмена, 
								0, КодВозвратаДиалога.Да, 
								НСтр("ru='Копирование адреса'"));
		Иначе						
			//Имя состоит из МенюПодменюАдресКонтактная + Имя поля формы для замещения _ Имя поля формы значением которого будет замещено поле формы 
			ИмяКоманды = "МенюПодменюАдресКонтактнаяИнформацияПоле3e584fc6x6e57x11eaxa218x00155d1eed181_КонтактнаяИнформацияПоле3e584fc7x6e57x11eaxa218x00155d1eed181";	
			УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, ИмяКоманды);
		КонецЕсли;						
	КонецЕсли;
 
КонецПроцедуры
// {Рарус adilas #15377 -Копирование адреса 2021.08.20
#КонецОбласти

#Область ОбработчикиГруппыОсобенностиРазвития

&НаКлиенте
Процедура ЕстьОсобенностиЗдоровьяПриИзменении(Элемент)
	
	УстановитьВидимостьОсобенностей(); 
	
КонецПроцедуры

#КонецОбласти
// }Рарус adilas #17291 -Особенности развития 2021.07.01

// {Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10
#Область ОбработчикиСобытийДинамическихСписков

&НаКлиенте
Процедура Подключаемый_ПередНачаломДобавленияПрограммноСозданныйСписок(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Если Не Копирование Тогда
		Отказ = Истина;	
        // {Рарус kotana #IN-18142 -Из закладки История по любому пункту открывается согласие на обработку данных 2021.07.07
        //Если Элемент.Имя 			= "СписокСпортивноеУчреждение" Тогда
        //	ИмяОбъектаОткрытия		= "СоставУчащихсяСпортивногоУчреждения";
        Если Элемент.Имя       = "СписокИстория" Тогда
            ИмяОбъектаОткрытия 		= "ДвиженияСпортсменов";
        // }Рарус kotana #IN-18142 -Из закладки История по любому пункту открывается согласие на обработку данных 2021.07.07
		ИначеЕсли Элемент.Имя 		= "СписокСоставСемьи" Тогда
			ИмяОбъектаОткрытия	    = "СоставыСемейСпортсменов";
		ИначеЕсли Элемент.Имя 		= "СписокМеждународныхВозрастныхГрупп" Тогда
			ИмяОбъектаОткрытия 		= "УстановкаМеждународнойВозрастнойГруппы";
		ИначеЕсли Элемент.Имя 		= "СписокСтраховыхПолисов" Тогда
			ИмяОбъектаОткрытия 		= "СтраховойПолисСпортсмена";
		ИначеЕсли Элемент.Имя 		= "СписокДокументовФизЛиц" Тогда
			ИмяОбъектаОткрытия 		= "ДокументыФизическихЛиц";
		ИначеЕсли Элемент.Имя 		= "СписокДопусков" Тогда
			ИмяОбъектаОткрытия		= "ДопускиУчастниковКСпортивнымСоревнованиям";
		ИначеЕсли Элемент.Имя 		= "СписокРазрядов" Тогда
			ИмяОбъектаОткрытия 		= "РазрядыИЗванияСпортсменов";
		ИначеЕсли Элемент.Имя 		= "СписокЭтапыСпортсменов" Тогда
			ИмяОбъектаОткрытия 		= "ЭтапыСпортивнойПодготовкиСпортсменов";
		ИначеЕсли Элемент.Имя       = "СписокУчебныеУчреждения" Тогда
			ИмяОбъектаОткрытия 		= "УчебныеУчрежденияСпортсменов";
		Иначе
			ИмяОбъектаОткрытия = "СогласиеНаОбработкуПД";
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Спортсмен", Объект.Ссылка);
        
        // {Рарус kotana #IN-18142 -Из закладки История по любому пункту открывается согласие на обработку данных 2021.07.07
        //Если ИмяОбъектаОткрытия = "СоставУчащихсяСпортивногоУчреждения" Тогда
        Если ИмяОбъектаОткрытия = "ДвиженияСпортсменов" Тогда    
        // }Рарус kotana #IN-18142 -Из закладки История по любому пункту открывается согласие на обработку данных 2021.07.07    
			Если Параметр = Тип("ДокументСсылка.ЗаявленияНаПриемВСпортивноеУчреждение") Тогда
				ОткрытьФорму("Документ.ЗаявленияНаПриемВСпортивноеУчреждение.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
			ИначеЕсли Параметр = Тип("ДокументСсылка.ВключениеСпортсменовВГруппу") Тогда
				ОткрытьФорму("Документ.ВключениеСпортсменовВГруппу.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
			ИначеЕсли Параметр = Тип("ДокументСсылка.ИсключениеСпортсменовИзГруппы") Тогда
				ОткрытьФорму("Документ.ИсключениеСпортсменовИзГруппы.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
			ИначеЕсли Параметр = Тип("ДокументСсылка.ФормированиеГруппы") Тогда
				ОткрытьФорму("Документ.ФормированиеГруппы.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
			ИначеЕсли Параметр = Тип("ДокументСсылка.ПереводСпортсменовМеждуГруппами") Тогда
				ОткрытьФорму("Документ.ПереводСпортсменовМеждуГруппами.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);	
			Иначе
				ОткрытьФорму("Документ.ИсключениеИзСпортивногоУчреждения.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
			КонецЕсли;
		ИначеЕсли ИмяОбъектаОткрытия = "СоставыСемейСпортсменов" Тогда	
			ОткрытьФорму("РегистрСведений." + ИмяОбъектаОткрытия + ".Форма.ФормаЗаписи", ПараметрыФормы,ЭтаФорма);
		ИначеЕсли ИмяОбъектаОткрытия = "УстановкаМеждународнойВозрастнойГруппы" Тогда	
			ОткрытьФорму("Документ." + ИмяОбъектаОткрытия + ".Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
		ИначеЕсли ИмяОбъектаОткрытия = "СтраховойПолисСпортсмена" Тогда	
			ОткрытьФорму("Документ." + ИмяОбъектаОткрытия + ".Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
		ИначеЕсли ИмяОбъектаОткрытия = "ДокументыФизическихЛиц" Тогда
			ПараметрыФормы = Новый Структура("ФизическоеЛицо",Объект.ФизическоеЛицо);
			ОткрытьФорму("РегистрСведений." + ИмяОбъектаОткрытия + ".Форма.ФормаЗаписи", ПараметрыФормы,ЭтаФорма);
		ИначеЕсли ИмяОбъектаОткрытия = "ДопускиУчастниковКСпортивнымСоревнованиям" Тогда	
			ОткрытьФорму("Документ." + ИмяОбъектаОткрытия + ".Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
		ИначеЕсли ИмяОбъектаОткрытия = "РазрядыИЗванияСпортсменов" Тогда	
			Если Параметр = Тип("ДокументСсылка.ПрисвоениеРазряда") Тогда
				ОткрытьФорму("Документ.ПрисвоениеРазряда.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
			Иначе
				ОткрытьФорму("Документ.ПодтверждениеРазрядаСпортсмена.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
			КонецЕсли;
		ИначеЕсли ИмяОбъектаОткрытия = "СогласиеНаОбработкуПД" Тогда
			// {Рарус lobash IN-9370 11.09.20
			Если Параметр = Тип("ДокументСсылка.ОтзывСогласияНаОбработкуПерсональныхДанных") Тогда
				ОткрытьФорму("Документ.ОтзывСогласияНаОбработкуПерсональныхДанных.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
			Иначе
				ОткрытьФорму("Документ.СогласиеНаОбработкуПерсональныхДанных.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
				// }Рарус lobash IN-9370 11.09.20		
			КонецЕсли;
		ИначеЕсли ИмяОбъектаОткрытия = "ЭтапыСпортивнойПодготовкиСпортсменов" Тогда
			Если Параметр = Тип("ДокументСсылка.ПереводСпортсменовНаЭтап") Тогда
				ОткрытьФорму("Документ.ПереводСпортсменовНаЭтап.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
			Иначе
				ОткрытьФорму("Документ.ЗачислениеСпортсменовНаЭтап.Форма.ФормаДокумента", ПараметрыФормы,ЭтаФорма);
			КонецЕсли;
		ИначеЕсли ИмяОбъектаОткрытия = "УчебныеУчрежденияСпортсменов" Тогда
			ОткрытьФорму("РегистрСведений." + ИмяОбъектаОткрытия + ".Форма.ФормаЗаписи", ПараметрыФормы,ЭтаФорма);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти
// }Рарус adilas #9220 -Заполнение реквизита Спортсмен в документах 2020.09.10