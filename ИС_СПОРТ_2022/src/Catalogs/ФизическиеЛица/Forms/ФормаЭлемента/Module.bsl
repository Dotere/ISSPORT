#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	ДополнительныеПараметры = УправлениеКонтактнойИнформацией.ПараметрыКонтактнойИнформации();
	ДополнительныеПараметры.ИмяЭлементаДляРазмещения = "ГруппаКонтактнаяИнформация";
	ДополнительныеПараметры.ПоложениеЗаголовкаКИ = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, ФизическоеЛицо, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	ОбновитьФотографиюНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ФизическоеЛицо);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СтруктураФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(ФизическоеЛицо.Наименование);
	Если не ЗначениеЗаполнено(СтруктураФИО.Фамилия) ИЛИ не ЗначениеЗаполнено(СтруктураФИО.Имя) Тогда
		ПоказатьПредупреждение(,"Необходимо заполнить Фамилию, Имя, Отчество физического лица!");
		Возврат;
	КонецЕсли;
	
	СНИЛС_ДляУсловия = СтрЗаменить(СтрЗаменить(ФизическоеЛицо.СНИЛС,"-","")," ","");
	Если ЗначениеЗаполнено(СНИЛС_ДляУсловия) Тогда
		ТекстСообщения = "";
		КорректныйСНИСЛ = РегламентированныеДанныеКлиентСервер.СтраховойНомерПФРСоответствуетТребованиям(ФизическоеЛицо.СНИЛС, ТекстСообщения);
		Если НЕ КорректныйСНИСЛ Тогда
			Сообщить(ТекстСообщения);
			Отказ = Истина;
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)		
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ФизическоеЛицо);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, ФизическоеЛицо, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзменениеФизическогоЛицаВФорме");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
    // СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтотОбъект, ФизическоеЛицо);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры
// {Рарус dotere #17314 -При изменении даты рождения менять год рождения 2021.06.30
&НаКлиенте
Процедура ДатаРожденияПриИзменении(Элемент)
	ФизическоеЛицо.ГодРождения = СтрЗаменить(Строка(Год(ФизическоеЛицо.ДатаРождения)), Символы.НПП, "");
КонецПроцедуры
// }Рарус dotere #17314 -При изменении даты рождения менять год рождения 2021.06.30

#КонецОбласти

#Область РаботаСФайлами

&НаКлиенте
Процедура АдресФотографииПриИзменении(Элемент)
	Если Не ФизическоеЛицо.Фото.Пустая() Тогда
		ТекущаяВерсияКартинки = ПолучитьТекущуюВерсиюКартинки(ФизическоеЛицо.Фото);
		АдресФотографии = РаботаСФайламиСлужебныйВызовСервера.ПолучитьНавигационнуюСсылкуДляОткрытия(ТекущаяВерсияКартинки);
	Иначе 	
		АдресФотографии = "";
	Конецесли;
    Модифицированность=Истина;
КонецПроцедуры

&НаКлиенте
Процедура АдресФотографииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Если ФизическоеЛицо.Ссылка.Пустая() ИЛИ Модифицированность Тогда 
		
		Оповещение = Новый ОписаниеОповещения("АдресФотографииНажатиеЗавершение", ЭтотОбъект, Новый Структура("Элемент",Элемент));
		
		ПоказатьВопрос(Оповещение,
		"Физическое лицо не записано. Записать?",
        РежимДиалогаВопрос.ДаНет,
        0,
        КодВозвратаДиалога.Да);
		Возврат;
		
	КонецЕсли;
	
	АдресФотографииОткрыть(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФотографию(Команда)
	
	Если ЗначениеЗаполнено(ФизическоеЛицо.Фото) Тогда
		
		Оповещение = Новый ОписаниеОповещения("УдалитьФотографиюЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Удалить фотографию?",
		РежимДиалогаВопрос.ДаНет,
		0,
		КодВозвратаДиалога.Да);
		
		Возврат;
		
	КонецЕсли;
	
	УдалитьФотографиюПродолжить();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФотографиюНаСервере()
	Если Не ФизическоеЛицо.Фото.Пустая() Тогда
		АдресФотографии = РаботаСФайламиСлужебныйВызовСервера.ПолучитьНавигационнуюСсылкуДляОткрытия(ФизическоеЛицо.Фото.ТекущаяВерсия);
	Иначе
		АдресФотографии = "";
	КонецЕсли;	
	Элементы.АдресФотографии.РазмерКартинки = РазмерКартинки.АвтоРазмер;
КонецПроцедуры	

&НаКлиенте
Процедура АдресФотографииОткрыть(Элемент)
	ОткрытьФормуВыбораФайла(ФизическоеЛицо.Фото,Элемент);
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьФормуВыбораФайла(ТекущийФайл,ЭлементВладелец)
	
	ПараметрыФайла = Новый Структура;
	//ПараметрыФайла.Вставить("ВладелецФайла", Объект.Ссылка);
	ПараметрыФайла.Вставить("ЗаголовокФормы", НСтр("ru = 'Присоединенные файлы'"));
	ПараметрыФайла.Вставить("РежимВыбора", истина);
	ПараметрыФайла.Вставить("ТекущаяСтрока", ТекущийФайл);
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьФормуВыбораФайлаЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.Файлы.Форма.ФормаВыбора",	ПараметрыФайла, ЭлементВладелец,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресФотографииНажатиеЗавершение(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Записать();
		Если НЕ ФизическоеЛицо.Ссылка.Пустая() И НЕ Модифицированность Тогда
			АдресФотографииОткрыть(Параметры.Элемент);
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораФайлаЗавершение(Результат, Параметры) Экспорт
	Если НЕ Результат = Неопределено Тогда
		ФизическоеЛицо.Фото = Результат;
		ФайлФотографииПриИзменении();
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ФайлФотографииПриИзменении()	
	Если Не ФизическоеЛицо.Фото.Пустая() Тогда
		ТекущаяВерсияКартинки = ПолучитьТекущуюВерсиюКартинки(ФизическоеЛицо.Фото);
		АдресФотографии = РаботаСФайламиСлужебныйВызовСервера.ПолучитьНавигационнуюСсылкуДляОткрытия(ТекущаяВерсияКартинки);
	Иначе 	
		АдресФотографии = "";
	Конецесли;
    Модифицированность = Истина;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущуюВерсиюКартинки(ФайлКартинки)

	Возврат ФайлКартинки.ТекущаяВерсия; 	

КонецФункции

&НаКлиенте
Процедура УдалитьФотографиюЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		УдалитьФотографиюПродолжить();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УдалитьФотографиюПродолжить()
	
   ФизическоеЛицо.Фото = Справочники.Файлы.ПустаяСсылка();
   ОбновитьФотографиюНаСервере();
   
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	СтруктураФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(ФизическоеЛицо.Наименование);
	ЗаполнитьЗначенияСвойств(ФизическоеЛицо,СтруктураФИО);  
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// {Рарус adilas #9299 -Вести историю изменений физлица (какая организация когда изменила) 2020.09.11
//
&НаКлиенте
Процедура ИсторияИзменений(Команда)
	
	ПараметрыФизЛица = Новый Структура;
	ОтборПоФизЛицу = Новый Структура;
	
	ОтборПоФизЛицу.Вставить("ФизическоеЛицо", ФизическоеЛицо.Ссылка); 
	ПараметрыФизЛица.Вставить("Отбор", ОтборПоФизЛицу);
	
	ОткрытьФорму("РегистрСведений.ИсторияИзмененийФизическогоЛица.ФормаСписка", ПараметрыФизЛица);

КонецПроцедуры
//}Рарус adilas #9299 -Вести историю изменений физлица (какая организация когда изменила) 2020.09.11

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область КонтактнаяИнформация
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "КОНТАКТНАЯ ИНФОРМАЦИЯ"

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
        УправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьОчистку(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьОбработкуНавигационнойСсылки(ЭтотОбъект, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
    ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры

&НаСервере
Процедура ОбновитьКонтактнуюИнформацию(Результат)
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, ФизическоеЛицо, Результат);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат) Экспорт	
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, ФизическоеЛицо, Результат);		
КонецПроцедуры
// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти

#КонецОбласти