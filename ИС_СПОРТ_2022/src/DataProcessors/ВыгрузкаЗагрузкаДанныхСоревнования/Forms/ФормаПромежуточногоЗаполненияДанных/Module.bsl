#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбрабатыватьКоманды = Параметры.ИмяПараметра = "Команды";

	Элементы.ГруппаЗаполнениеКоманд.Видимость = ОбрабатыватьКоманды;
	
	Если ОбрабатыватьКоманды Тогда
		ЗаполнитьНастройки(Параметры.МассивДанных, "Команда", "ВТ_Команды", "ТаблицаКоманд");	
	КонецЕсли;
	
	ОбрабатыватьОрганизации = Параметры.ИмяПараметра = "Организации";

	Элементы.ГруппаЗаполнениеОрганизаций.Видимость = ОбрабатыватьОрганизации;
	
	Если ОбрабатыватьОрганизации Тогда
		ЗаполнитьНастройки(Параметры.МассивДанных, "СпортивноеУчреждение", "ВТ_СпортивныеУчреждения", "ТаблицаОрганизаций");	
	КонецЕсли;
	
	ОбрабатыватьТренеров = Параметры.ИмяПараметра = "Тренеры";
	
	Если ОбрабатыватьТренеров Тогда
		ЗаполнитьНастройки(Параметры.МассивДанных, "Тренер", "ВТ_Тренеры", "ТаблицаТренеров");	
	КонецЕсли;
	
	Элементы.ГруппаЗаполнениеТренеров.Видимость = ОбрабатыватьТренеров;
	
	ОбрабатыватьРазряды = Параметры.ИмяПараметра = "Разряды";
	
	Если ОбрабатыватьРазряды Тогда
		ЗаполнитьНастройки(Параметры.МассивДанных, "Разряд", "ВТ_Разряды", "ТаблицаРазрядов");	
	КонецЕсли;
	
	Элементы.ГруппаЗаполнениеРазрядов.Видимость = ОбрабатыватьРазряды;
	
	ОбрабатыватьСпортсменов = Параметры.ИмяПараметра = "Спортсмены";
	
	Если ОбрабатыватьСпортсменов Тогда
		Для Каждого СтруктураДанных Из Параметры.МассивДанных Цикл
			строкаТаблицаСпортсменов = ТаблицаСпортсменов.Добавить();
			строкаТаблицаСпортсменов.СоздатьВБазе = Истина;
			строкаТаблицаСпортсменов.СоздатьДопускВБазе = Истина;
			строкаТаблицаСпортсменов.СоздатьРазрядВБазе = Истина;
			ЗаполнитьЗначенияСвойств(строкаТаблицаСпортсменов,СтруктураДанных); 
		КонецЦикла;	
	КонецЕсли;
	
	Элементы.ГруппаЗаполнениеСпортсменов.Видимость = ОбрабатыватьСпортсменов;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура СоздатьКоманды(Команда)
	
	массивКоманд = ТаблицаКоманд.НайтиСтроки(Новый Структура("СоздатьВБазе",Истина));
	Если массивКоманд.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбраны команды для создания!",,,"ТаблицаКоманд");
		Возврат;
	Иначе	
	    СоздатьЗаписьВСправочникеНаСервере("ТаблицаКоманд", "Команда", "КомандаСсылка", "Команды");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьУчреждения(Команда)
	
	массивКоманд = ТаблицаОрганизаций.НайтиСтроки(Новый Структура("СоздатьВБазе",Истина));
	Если массивКоманд.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбраны спортивные учреждения для создания!",,,"ТаблицаОрганизаций");
		Возврат;
	Иначе	
	    СоздатьЗаписьВСправочникеНаСервере("ТаблицаОрганизаций", "СпортивноеУчреждение", "СпортивноеУчреждениеСсылка", "Организации");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьТренера(Команда)
	
	массивТренеров = ТаблицаТренеров.НайтиСтроки(Новый Структура("СоздатьВБазе",Истина));
	Если массивТренеров.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбраны тренеры для создания!",,,"ТаблицаТренеров");
		Возврат;
	Иначе	
	    СоздатьЗаписьВСправочникеНаСервере("ТаблицаТренеров", "Тренер", "ТренерСсылка", "Тренеры");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРазряд(Команда)
	
	массивРазрядов = ТаблицаРазрядов.НайтиСтроки(Новый Структура("СоздатьВБазе",Истина));
	Если массивРазрядов.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбраны разряды для создания!",,,"ТаблицаРазрядов");
		Возврат;
	Иначе	
	    СоздатьЗаписьВСправочникеНаСервере("ТаблицаРазрядов", "Разряд", "РазрядСсылка", "СпортивнаяКлассификация");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСпортсменов(Команда)
	
	массивСпортсменовДляСоздания = ТаблицаСпортсменов.НайтиСтроки(Новый Структура("СоздатьВБазе",Истина));
	Если массивСпортсменовДляСоздания.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбраны спортсмены для создания!",,,"ТаблицаСпортсменов");
		Возврат;
		
	Иначе	
		
		Оповещение = Новый ОписаниеОповещения("СоздатьСпортсменовЗавершение",
		 ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		  "Установить международные возрастные группы спортсменам?",
		   РежимДиалогаВопрос.ДаНет,
		   0);
		   
		 СоздатьСпортсменовНаСервере(массивСпортсменовДляСоздания);  
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиДанные(Команда)
	
	Если ОбрабатыватьКоманды Тогда
		
		Оповестить("АнализДанныхПоКомандамЗавершен");
		ЭтаФорма.Закрыть(Новый Структура("МассивДанных", СформироватьСтруктуруВозвратаНаФорму("ТаблицаКоманд", "КомандаСсылка")));
		
	КонецЕсли;
	
	Если ОбрабатыватьОрганизации Тогда
		
		Оповестить("АнализДанныхПоСпортивнымУчреждениямЗавершен");
		ЭтаФорма.Закрыть(Новый Структура("МассивДанных", СформироватьСтруктуруВозвратаНаФорму("ТаблицаОрганизаций", "СпортивноеУчреждениеСсылка")));
		
	КонецЕсли;
	
	Если ОбрабатыватьТренеров Тогда
		
		Оповестить("АнализДанныхПоТренерамЗавершен");
		ЭтаФорма.Закрыть(Новый Структура("МассивДанных", СформироватьСтруктуруВозвратаНаФорму("ТаблицаТренеров", "ТренерСсылка")));
		
	КонецЕсли;
	
	Если ОбрабатыватьРазряды Тогда
		
		Оповестить("АнализДанныхПоРазрядамЗавершен");
		ЭтаФорма.Закрыть(Новый Структура("МассивДанных", СформироватьСтруктуруВозвратаНаФорму("ТаблицаРазрядов", "РазрядСсылка")));
		
	КонецЕсли;
	
	Если ОбрабатыватьСпортсменов Тогда
		
		Оповестить("АнализДанныхСпортсменовЗавершен");
		ЭтаФорма.Закрыть(Новый Структура("МассивДанных", СформироватьСтруктуруВозвратаНаФорму("ТаблицаСпортсменов", "СпортсменСсылка")));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыСозданияЗаписейВСправочнике

&НаСервере
Процедура ЗаполнитьНастройки(МассивДанных, ИмяКолонки, ИмяВременнойТаблицы, ИмяТаблицыДанных)
	
	ТаблицаКопия = Новый ТаблицаЗначений;
	ТаблицаКопия.Колонки.Добавить("Индекс" , Новый ОписаниеТипов("Число"));
	ТаблицаКопия.Колонки.Добавить(ИмяКолонки, Новый ОписаниеТипов("Строка"));
	Для Каждого СтруктураДанных Из МассивДанных Цикл
		СтрокаДанных = ТаблицаКопия.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДанных,СтруктураДанных); 
	КонецЦикла;
		
	Запрос = Новый Запрос;
	
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("Индекс");
	СтруктураПолей.Вставить(ИмяКолонки);
	
	ТекстЗапроса = "";
	// {Рарус adilas #- -Sonar 2021.06.29
	УчетСпортсменовВызовСервера.ВвестиСтруктуруВоВременнуюТаблицу(
	ТекстЗапроса, 
	СтруктураПолей,
	ИмяВременнойТаблицы,
	"ТаблицаДанных");
	 
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаКопия); 
	
	Запрос.Текст = ТекстЗапроса + "
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	%1.Индекс КАК Индекс,
	               |	ВЫРАЗИТЬ(%1.%2 КАК СТРОКА(150)) КАК %2
	               |ИЗ
	               |	%1 КАК %1
	               |ИТОГИ ПО
	               |	%2" ;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", ИмяВременнойТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%2", ИмяКолонки);
	ВыборкаГруппировка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаГруппировка.Следующий() Цикл
		строкаДанных = ЭтотОбъект[ИмяТаблицыДанных].Добавить();
		строкаДанных[ИмяКолонки] = ВыборкаГруппировка[ИмяКолонки];
		МассивИндексов = Новый Массив;
		Выборка = ВыборкаГруппировка.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивИндексов.Добавить(Выборка.Индекс);
		КонецЦикла;
		строкаДанных.Индекс = ПоместитьВоВременноеХранилище(МассивИндексов, Новый УникальныйИдентификатор());
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура СоздатьЗаписьВСправочникеНаСервере(ИмяТаблицы, ИмяКолонки, ИмяКолонкиСсылка, ИмяСправочника)
	
	Для Индекс  = 0 По ЭтотОбъект[ИмяТаблицы].Количество()-1 Цикл
		
		Если НЕ ЭтотОбъект[ИмяТаблицы][Индекс].СоздатьВБазе Тогда
			Продолжить;
		КонецЕсли;	
		
		Объект_ = Справочники[ИмяСправочника].СоздатьЭлемент();
		Объект_.Наименование = ЭтотОбъект[ИмяТаблицы][Индекс][ИмяКолонки];
		Если ИмяКолонки = "Тренер" ИЛИ ИмяКолонки = "Спортсмен" Тогда
			ОбъектФизЛицо = Справочники.ФизическиеЛица.СоздатьЭлемент();
			ОбъектФизЛицо.Наименование = ЭтотОбъект[ИмяТаблицы][Индекс][ИмяКолонки];
			ЗаполнитьЗначенияСвойств(ОбъектФизЛицо,ЭтотОбъект[ИмяТаблицы][Индекс]); 
			Попытка	
				ОбъектФизЛицо.Записать();
				Объект_.ФизическоеЛицо = ОбъектФизЛицо.Ссылка;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось создать запись в справочнике. Создайте ее вручную!",,, ИмяТаблицы + "[" + Индекс + "]." + ИмяКолонки);
				Возврат;
			КонецПопытки; 
		КонецЕсли;	
		Попытка
			Объект_.Записать();
			ЭтотОбъект[ИмяТаблицы][Индекс][ИмяКолонкиСсылка] = Объект_.Ссылка;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось создать запись в справочнике. Создайте ее вручную!",,, ИмяТаблицы + "[" + Индекс + "]." + ИмяКолонки);
		КонецПопытки;	
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура СоздатьСпортсменовЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		УстанавливатьВозратсныеГруппы = Истина;
	Иначе
		УстанавливатьВозратсныеГруппы = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСпортсменовНаСервере(массивСпортсменов)
	
	МассивРезультат = Новый Массив;
	РеквизитФормыВЗначение("Объект").СоздатьСпортсменовВБазе(массивСпортсменов, МассивРезультат);	
	
КонецПроцедуры	

#КонецОбласти

&НаКлиенте
Функция СформироватьСтруктуруВозвратаНаФорму(ИмяТаблицы, ИмяКолонки)
	
	МассивВозврат = Новый Массив;
	Для Каждого СтрокаДанных Из ЭтотОбъект[ИмяТаблицы] Цикл
		Если ИмяКолонки = "СпортсменСсылка" Тогда 
			МассивВозврат.Добавить(Новый Структура("Индекс, СпортсменСсылка", СтрокаДанных.Индекс, СтрокаДанных.СпортсменСсылка));
		Иначе	
			Для Каждого ИндексПозиции Из ПолучитьИзВременногоХранилища(СтрокаДанных.Индекс) Цикл
				СтруктураВозврат = Новый Структура;
				СтруктураВозврат.Вставить("Индекс", ИндексПозиции);
				СтруктураВозврат.Вставить(ИмяКолонки,СтрокаДанных[ИмяКолонки]); 
				МассивВозврат.Добавить(СтруктураВозврат);
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивВозврат
	
КонецФункции	

#КонецОбласти
