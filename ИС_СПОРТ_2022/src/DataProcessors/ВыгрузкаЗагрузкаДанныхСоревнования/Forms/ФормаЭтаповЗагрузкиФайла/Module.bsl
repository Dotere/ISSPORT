#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ДокументСоревнование = Параметры.ДокументСоревнование;
	
	Адрес = Параметры.Адрес;
	Таблицаданных = ПолучитьИзВременногоХранилища(Адрес);
	Если НЕ Таблицаданных = Неопределено Тогда
		ТаблицаДанныхЗагрузка.Загрузить(Таблицаданных);
		Если НЕ ТаблицаДанныхЗагрузка.Количество() = 0 Тогда
		   МаксимальныйИндекс = ТаблицаДанныхЗагрузка[ТаблицаДанныхЗагрузка.Количество()-1].Индекс;
		КонецЕсли;   
	КонецЕсли;	
	
	ИмяТекущейСтраницы = "ТаблицаExel";
	УстановитьВидимостьДоступность(ИмяТекущейСтраницы);
	
	Вид_КИ = Справочники.ВидыКонтактнойИнформации.Город;
	Тип_КИ = Перечисления.ТипыКонтактнойИнформации.Адрес;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовФормы

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ИмяТекущейСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;
	УстановитьВидимостьДоступность(ИмяТекущейСтраницы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличныйЧастей

&НаКлиенте
Процедура ТаблицаДанныхЗагрузкаПередУдалением(Элемент, Отказ)
	
	Индекс = Элемент.ТекущиеДанные.Индекс;
	УдалитьСтрокуИзПодчиненнойТаблицы("ТаблицаОрганизаций", Индекс);
	УдалитьСтрокуИзПодчиненнойТаблицы("ТаблицаТренерскийСостав", Индекс);
	УдалитьСтрокуИзПодчиненнойТаблицы("ТаблицаОрганизацияТренерДокумент", Индекс);
	УдалитьСтрокуИзПодчиненнойТаблицы("ТаблицаСпортсменов", Индекс);
	УдалитьСтрокуИзПодчиненнойТаблицы("ТаблицаСпортсменДокумент", Индекс);
	УдалитьСтрокуИзПодчиненнойТаблицы("ТаблицаСоответствияВозрастныхГрупп", Индекс);
	УдалитьСтрокуИзПодчиненнойТаблицы("ТаблицаРазрядовСпортсменов", Индекс);
	УдалитьСтрокуИзПодчиненнойТаблицы("ТаблицаДопусков", Индекс);
	УдалитьСтрокуИзПодчиненнойТаблицы("ТаблицаФормированияКоманд", Индекс);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхЗагрузкаПриИзменении(Элемент)
	
	Если МаксимальныйИндекс <> ТаблицаДанныхЗагрузка.Количество()-1 Тогда
		Для Индекс = 0 По ТаблицаДанныхЗагрузка.Количество()-1 Цикл
			ТаблицаДанныхЗагрузка[Индекс].Индекс = Индекс;
		КонецЦикла;
		ПереиндексацияТаблицДанных();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОрганизацийОрганизацияПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаОрганизаций.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТаблицаДанныхЗагрузка[ТекДанные.Индекс].СпортивноеУчреждениеСсылка = ТекДанные.Организация;
	
	УстановитьВидимостьДоступность(ИмяТекущейСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТренерскийСоставТренерПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаТренерскийСостав.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТаблицаДанныхЗагрузка[ТекДанные.Индекс].ТренерССылка = ТекДанные.Тренер;
	
	УстановитьВидимостьДоступность(ИмяТекущейСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОрганизацияТренерДокументДокументСсылкаПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность(ИмяТекущейСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСпортсменовСпортсменПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаСпортсменов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТаблицаДанныхЗагрузка[ТекДанные.Индекс].СпортсменСсылка = ТекДанные.Спортсмен;
	
	УстановитьВидимостьДоступность(ИмяТекущейСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаФормированияКомандДокументСсылкаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаФормированияКоманд.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТаблицаДанныхЗагрузка[ТекДанные.Индекс].ФормированиеКомандыСсылка = ТекДанные.ДокументСсылка;
	
	УстановитьВидимостьДоступность(ИмяТекущейСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствияВозрастныхГруппМеждународнаяВозрастнаяГруппаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаСоответствияВозрастныхГрупп.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТаблицаДанныхЗагрузка[ТекДанные.Индекс].МеждународнаяВозрастнаяГруппаСсылка = ТекДанные.МеждународнаяВозрастнаяГруппа;
	Если НЕ ЗначениеЗаполнено(ТекДанные.МеждународнаяВозрастнаяГруппа) Тогда
		ТекДанные.ДокументСсылка = "";
	КонецЕсли;	
	УстановитьДокументВозрастнаяГруппаНаСервере(ТекДанные.Индекс, ТекДанные.МеждународнаяВозрастнаяГруппа); 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствияВозрастныхГруппДокументСсылкаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаСоответствияВозрастныхГрупп.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТекДанные.ДокументСсылка) Тогда
		ТекДанные.МеждународнаяВозрастнаяГруппаСсылка = "";
	Иначе
		МеждународнаяВозрастнаяГруппа = ПолучитьМеждународнуюВозрастнуюГруппуПоДокументу(ТекДанные.ДокументСсылка);
		ТекДанные.МеждународнаяВозрастнаяГруппа = МеждународнаяВозрастнаяГруппа;
		ТаблицаДанныхЗагрузка[ТекДанные.Индекс].МеждународнаяВозрастнаяГруппаСсылка = МеждународнаяВозрастнаяГруппа;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРазрядовСпортсменовДокументСсылкаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаРазрядовСпортсменов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекДанные.ДокументСсылка) Тогда
		ТекДанные.ДатаПрисвоения = Дата(1,1,1); 
	КонецЕсли;	
	
	ЗаполнитьДатуПрисвоенияРазряда(ТекДанные.Индекс);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Далее(Команда)
	
	Если ИмяТекущейСтраницы = "СпортивноеУчреждение" Тогда
		ЗаполнитьТабличнуюЧасть("ТаблицаОрганизаций");
	ИначеЕсли ИмяТекущейСтраницы = "ТренерскийСостав" Тогда
		ЗаполнитьТабличнуюЧасть("ТаблицаТренерскийСостав");
	ИначеЕсли ИмяТекущейСтраницы = "ФормированиеТренерскогоСостава" Тогда
		ЗаполнитьТабличнуюЧасть("ТаблицаОрганизацияТренерДокумент");
	ИначеЕсли ИмяТекущейСтраницы = "Спортсмены" Тогда
		ЗаполнитьТабличнуюЧасть("ТаблицаСпортсменов");
	ИначеЕсли ИмяТекущейСтраницы = "ПриемВспортивноеУчреждение" Тогда
		ЗаполнитьТабличнуюЧасть("ТаблицаСпортсменДокумент");
	ИначеЕсли ИмяТекущейСтраницы = "УстановкаВозрастнойГруппы" Тогда
		ЗаполнитьТабличнуюЧасть("ТаблицаСоответствияВозрастныхГрупп");
	ИначеЕсли ИмяТекущейСтраницы = "УстановкаРазрядовИЗваний" Тогда
		ЗаполнитьТабличнуюЧасть("ТаблицаРазрядовСпортсменов");
	ИначеЕсли ИмяТекущейСтраницы = "ДопускиКСоревнованиям" Тогда
		ЗаполнитьТабличнуюЧасть("ТаблицаДопусков");
	ИначеЕсли ИмяТекущейСтраницы = "ФормированиеГруппы" Тогда
		ЗаполнитьТабличнуюЧасть("ТаблицаФормированияКоманд");	
	КонецЕсли;
	
	УстановитьВидимостьДоступность(ИмяТекущейСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначением(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьЗначениемПоТипуСтраницы",
		ЭтотОбъект);
		
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить(КодВозвратаДиалога.Да     , "Все строки");
	СписокКнопок.Добавить(КодВозвратаДиалога.Нет    , "Только незаполненные");
	СписокКнопок.Добавить(КодВозвратаДиалога.Отмена , "Отмена");	
		
	ПоказатьВопрос(Оповещение,
		"Выберите тип заполнения:",
		СписокКнопок,
		0);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОрганизации(Команда)
	
	Состояние("Выполняется создание спортивных учреждений....");
	СоздатьОрганизацииНаСервере();
	Состояние("Спортивные учреждения созданы.");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьТренеров()
	
	Состояние("Выполняется создание тренеров....");
	СоздатьТренеровНаСервере();
	Состояние("Тренера созданы.");
	УстановитьВидимостьДоступность("ТренерскийСостав");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументФормированиеТренерскогоСоставаУчреждения(Команда)	
	
	Состояние("Выполняется формирование тренерского состава....");
	СоздатьДокументФормированиеТренерскогоСоставаУчрежденияНаСервере();
	Состояние("Документы созданы.");
	УстановитьВидимостьДоступность("ФормированиеТренерскогоСостава");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСпортсменнов(Команда)
	
	Состояние("Выполняется создание спортсменов....");
	СоздатьСпортсменновНаСервере();
	Состояние("Спортсмены созданы.");
	УстановитьВидимостьДоступность("Спортсмены");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПриемВСпортивноеУчреждение(Команда)
	
	Состояние("Выполняется создание документов 'Прием в спортивное учреждение'....");
	СоздатьПриемВСпортивноеУчреждениеНаСервере();
	Состояние("Документы созданы.");
	УстановитьВидимостьДоступность("ПриемВспортивноеУчреждение");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументУстановкаВозрастнойГруппы(Команда)
	
	Состояние("Выполняется создание возрастных групп....");
	СоздатьДокументУстановкаВозрастнойГруппыНаСервере();
	Состояние("Документы созданы.");
	УстановитьВидимостьДоступность("УстановкаВозрастнойГруппы");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументПрисвоениеРазряда(Команда)
	
	Состояние("Выполняется регистрация разрядов....");
	СоздатьДокументПрисвоениеРазрядаНаСервере();
	Состояние("Документы созданы.");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументДопуск(Команда)
	
	Состояние("Выполняется регистрация допусков....");
	СоздатьДокументДопускНаСервере();
	Состояние("Документы созданы.");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФормированиеКоманды(Команда)
	
	Состояние("Выполняется формирование команд....");
	СоздатьФормированиеКомандыНаСервере();
	Состояние("Документы созданы.");
	УстановитьВидимостьДоступность("ФормированиеГруппы");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументыЗаявки(Команда)
	
	Состояние("Выполняется формирование заявок....");
	СоздатьДокументыЗаявкиНаСервере();
	Состояние("Документы созданы. Заполните заявки в соревнование.");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедураИФункции

&НаСервере
Процедура УстановитьВидимостьДоступность(ИмяСтраницы)
	
	Элементы.Далее.Доступность = НЕ ИмяСтраницы = "ТаблицаExel";
	
	Если ИмяСтраницы = "СпортивноеУчреждение" Тогда
		Если НЕ ТаблицаОрганизаций.Количество() = 0 Тогда
			Элементы.ТренерскийСостав.Доступность  = ТаблицаОрганизаций.НайтиСтроки(Новый Структура("Организация", Справочники.Организации.ПустаяСсылка())).Количество()= 0;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСтраницы = "ТренерскийСостав" Тогда
		Если НЕ ТаблицаТренерскийСостав.Количество() = 0 Тогда
			Элементы.ФормированиеТренерскогоСостава.Доступность = ТаблицаТренерскийСостав.НайтиСтроки(Новый Структура("Тренер", Справочники.Тренеры.ПустаяСсылка())).Количество() = 0;
		КонецЕсли;
	КонецЕсли;
	
	Отказ = Ложь;
	Если ИмяСтраницы = "ФормированиеТренерскогоСостава" Тогда
		Если НЕ ТаблицаОрганизацияТренерДокумент.Количество() = 0 Тогда
			Для Каждого СтрокаТренерДокумент Из ТаблицаОрганизацияТренерДокумент Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТренерДокумент.ДокументСсылка) ИЛИ НЕ СтрокаТренерДокумент.ДокументСсылка.Проведен Тогда
					Отказ = Истина;
				КонецЕсли;	
			КонецЦикла;	
			Элементы.Спортсмены.Доступность = НЕ Отказ;
		КонецЕсли;
	КонецЕсли;	
	
	Если ИмяСтраницы = "Спортсмены" Тогда
		Если НЕ ТаблицаСпортсменов.Количество() = 0 Тогда
			Доступность_ = ТаблицаСпортсменов.НайтиСтроки(Новый Структура("Спортсмен", Справочники.Спортсмены.ПустаяСсылка())).Количество() = 0;
			Элементы.УстановкаВозрастнойГруппы.Доступность   = Доступность_;
			Элементы.УстановкаРазрядовИЗваний.Доступность    = Доступность_;
			Элементы.ДопускиКСоревнованиям.Доступность       = Доступность_;
			Элементы.ПриемВспортивноеУчреждение.Доступность  = Доступность_;
		КонецЕсли;
	КонецЕсли;	
	
	Отказ = Ложь;
	Если ИмяСтраницы = "ПриемВспортивноеУчреждение" Тогда
		Если НЕ ТаблицаСпортсменДокумент.Количество() = 0 Тогда
			Для КАждого СтрокаТренерДокумент Из ТаблицаСпортсменДокумент Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТренерДокумент.ДокументСсылка) ИЛИ НЕ СтрокаТренерДокумент.ДокументСсылка.Проведен Тогда
					Отказ = Истина;
				КонецЕсли;	
			КонецЦикла;	
			Элементы.ФормированиеКоманды.Доступность = Не Отказ;
		КонецЕсли;
	КонецЕсли;
	
	Отказ = Ложь;
	Если НЕ ТаблицаФормированияКоманд.Количество() = 0 Тогда 
		Для КАждого СтрокаТренерДокумент Из ТаблицаФормированияКоманд Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТренерДокумент.ДокументСсылка) ИЛИ НЕ СтрокаТренерДокумент.ДокументСсылка.Проведен Тогда
				Отказ = Истина;
			КонецЕсли;	
		КонецЦикла;	
		Элементы.ТаблицаЗаявокСоздатьДокументыЗаявки.Доступность  = НЕ Отказ;
	Иначе
		Элементы.ТаблицаЗаявокСоздатьДокументыЗаявки.Доступность  = Отказ;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПереиндексацияТаблицДанных()
	
	ПроиндексироватьТаблицу("ТаблицаОрганизаций");
	ПроиндексироватьТаблицу("ТаблицаТренерскийСостав");
	ПроиндексироватьТаблицу("ТаблицаОрганизацияТренерДокумент");
	ПроиндексироватьТаблицу("ТаблицаСпортсменов");
	ПроиндексироватьТаблицу("ТаблицаСпортсменДокумент");
	ПроиндексироватьТаблицу("ТаблицаСоответствияВозрастныхГрупп");
	ПроиндексироватьТаблицу("ТаблицаРазрядовСпортсменов");
	ПроиндексироватьТаблицу("ТаблицаДопусков");
	ПроиндексироватьТаблицу("ТаблицаФормированияКоманд");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроиндексироватьТаблицу(ИмяТаблицы)
	
	Для Индекс = 0 По ЭтотОбъект[ИмяТаблицы].Количество()-1 Цикл
		ЭтотОбъект[ИмяТаблицы][Индекс].Индекс = Индекс;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуИзПодчиненнойТаблицы(ИмяТаблицы, Индекс)
	
	Если ЭтотОбъект[ИмяТаблицы].Количество() > 0 Тогда
		ЭтотОбъект[ИмяТаблицы].Удалить(Индекс);
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть(Имятаблицы)
	
	Если ИмяТаблицы = "ТаблицаОрганизаций" Тогда
		ЗаполнитьТабличнуюЧасть_Организации();
	ИначеЕсли ИмяТаблицы = "ТаблицаТренерскийСостав" Тогда
		ЗаполнитьТабличнуюЧасть_ТренерскийСостав();
	ИначеЕсли ИмяТаблицы = "ТаблицаОрганизацияТренерДокумент" Тогда
		ЗаполнитьТабличнуюЧасть_ТаблицаОрганизацияТренерДокумент();
	ИначеЕсли ИмяТаблицы = "ТаблицаСпортсменов" Тогда
		ЗаполнитьТабличнуюЧасть_ТаблицаСпортсменов();
	ИначеЕсли ИмяТаблицы = "ТаблицаСпортсменДокумент" Тогда
		ЗаполнитьТабличнуюЧасть_ТаблицаСпортсменДокумент();
	ИначеЕсли ИмяТаблицы = "ТаблицаСоответствияВозрастныхГрупп" Тогда
		ЗаполнитьТабличнуюЧасть_ТаблицаСоответствияВозрастныхГрупп();
	ИначеЕсли ИмяТаблицы = "ТаблицаРазрядовСпортсменов" Тогда
		ЗаполнитьТабличнуюЧасть_ТаблицаРазрядовСпортсменов();
	ИначеЕсли ИмяТаблицы = "ТаблицаДопусков" Тогда
		ЗаполнитьТабличнуюЧасть_ТаблицаДопусков();
	ИначеЕсли ИмяТаблицы = "ТаблицаФормированияКоманд" Тогда
		ЗаполнитьТабличнуюЧасть_ТаблицаФормированияКоманд();	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначениемПоТипуСтраницы(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьЗначениемПоТипуСтраницыЗавершение",
	      ЭтотОбъект, Новый Структура("Результат",Результат));
	
	Если ИмяТекущейСтраницы = "СпортивноеУчреждение" Тогда
		ОткрытьФорму("Справочник.Организации.ФормаВыбора",,,,,,Оповещение);
	КонецЕсли;
	
	Если ИмяТекущейСтраницы = "ТренерскийСостав" Тогда
		ОткрытьФорму("Справочник.Тренеры.ФормаВыбора",,,,,,Оповещение);
	КонецЕсли;
	
	Если ИмяТекущейСтраницы = "ФормированиеТренерскогоСостава" Тогда
		ОткрытьФорму("Документ.ФормированиеТренерскогоСоставаСпортивногоУчреждения.ФормаВыбора",,,,,,Оповещение);
	КонецЕсли;
	
	Если ИмяТекущейСтраницы = "ФормированиеГруппы" Тогда
		ОткрытьФорму("Документ.ФормированиеГруппы.ФормаВыбора",,,,,,Оповещение);
	КонецЕсли;
	
	Если ИмяТекущейСтраницы = "УстановкаРазрядовИЗваний" Тогда
		ОткрытьФорму("Документ.ПрисвоениеРазряда.ФормаВыбора",,,,,,Оповещение);
	КонецЕсли;
	
	Если ИмяТекущейСтраницы = "ДопускиКСоревнованиям" Тогда
		ОткрытьФорму("Документ.ДопускиУчастниковКСпортивнымСоревнованиям.ФормаВыбора",,,,,,Оповещение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначениемПоТипуСтраницыЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнятьВсеСтроки = ДопПараметры.Результат = КодВозвратаДиалога.Да; 
	
	Если ИмяТекущейСтраницы = "СпортивноеУчреждение" Тогда
		ЗаполнитьЗначениеСтроки("Организация", "СпортивноеУчреждениеСсылка", "ТаблицаОрганизаций", Результат, ЗаполнятьВсеСтроки);
	КонецЕсли;
	
	Если ИмяТекущейСтраницы = "ТренерскийСостав" Тогда
		ЗаполнитьЗначениеСтроки("Тренер", "ТренерССылка", "ТаблицаТренерскийСостав", Результат, ЗаполнятьВсеСтроки); 	
	КонецЕсли;
	
	Если ИмяТекущейСтраницы = "ФормированиеТренерскогоСостава" Тогда
		ЗаполнитьЗначениеСтроки("ДокументСсылка", "", "ТаблицаОрганизацияТренерДокумент", Результат, ЗаполнятьВсеСтроки); 	
	КонецЕсли;
	
	Если ИмяТекущейСтраницы = "ФормированиеГруппы" Тогда
		ЗаполнитьЗначениеСтроки("ДокументСсылка", "ФормированиеКомандыСсылка", "ТаблицаФормированияКоманд", Результат, ЗаполнятьВсеСтроки); 	
	КонецЕсли;
	
	Если ИмяТекущейСтраницы = "УстановкаРазрядовИЗваний" Тогда
		ЗаполнитьЗначениеСтроки("ДокументСсылка", "", "ТаблицаРазрядовСпортсменов", Результат, ЗаполнятьВсеСтроки);
		ЗаполнитьДатуПрисвоенияРазряда();
	КонецЕсли;
	
	Если ИмяТекущейСтраницы = "ДопускиКСоревнованиям" Тогда
		ЗаполнитьЗначениеСтроки("ДокументСсылка", "", "ТаблицаДопусков", Результат, ЗаполнятьВсеСтроки); 	
	КонецЕсли;
	
	УстановитьВидимостьДоступность(ИмяТекущейСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначениеСтроки(ИмяКолонки, ИмяКолонкиТаблицыДанных, ИмяТаблицы, Значение, ЗаполнятьВсеСтроки)
	
	Если НЕ ИмяКолонкиТаблицыДанных = "" Тогда
		Для Каждого строкаТаблицаДанныхЗагрузка Из ТаблицаДанныхЗагрузка Цикл
			Если ЗаполнятьВсеСтроки Тогда
				строкаТаблицаДанныхЗагрузка[ИмяКолонкиТаблицыДанных] = Значение;
			ИначеЕсли НЕ ЗначениеЗаполнено(строкаТаблицаДанныхЗагрузка[ИмяКолонкиТаблицыДанных]) Тогда
				строкаТаблицаДанныхЗагрузка[ИмяКолонкиТаблицыДанных] = Значение;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого строкаТаблицаДанных Из ЭтотОбъект[ИмяТаблицы] Цикл
		Если ЗаполнятьВсеСтроки Тогда
			строкаТаблицаДанных[ИмяКолонки] = Значение;
		ИначеЕсли НЕ ЗначениеЗаполнено(строкаТаблицаДанных[ИмяКолонки]) Тогда
			строкаТаблицаДанных[ИмяКолонки] = Значение;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДокументВозрастнаяГруппаНаСервере(Индекс, МеждународнаяВозрастнаяГруппа)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МеждународнаяВозрастнаяГруппа", МеждународнаяВозрастнаяГруппа);
	Запрос.УстановитьПараметр("Спортсмен", ТаблицаДанныхЗагрузка[Индекс].СпортсменСсылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ДокументСоревнование.ДатаНачалаСоревнования);
	Запрос.Текст = "ВЫБРАТЬ
	               |	МеждународныеВозрастныеГруппы.Регистратор КАК ДокументСсылка
	               |ИЗ
	               |	РегистрСведений.МеждународныеВозрастныеГруппы.СрезПоследних(
	               |			&ДатаДокумента,
	               |			МеждународнаяВозрастнаяГруппа = &МеждународнаяВозрастнаяГруппа
	               |				И Спортсмен = &Спортсмен) КАК МеждународныеВозрастныеГруппы";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ТаблицаСоответствияВозрастныхГрупп[Индекс], Выборка);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМеждународнуюВозрастнуюГруппуПоДокументу(ДокументСсылка)
	Возврат ДокументСсылка.МеждународнаяВозрастнаяГруппа
КонецФункции

&НаСервере
Процедура ЗаполнитьДатуПрисвоенияРазряда(Индекс = Неопределено)
	
	Спортсмен = Неопределено;
	Документ  = Неопределено;
	Если НЕ Индекс = Неопределено Тогда
		Спортсмен = ТаблицаДанныхЗагрузка[Индекс].СпортсменСсылка;
		Документ  = ТаблицаРазрядовСпортсменов[Индекс].ДокументСсылка;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаРазрядовСпортсменов.Выгрузить());
	Запрос.УстановитьПараметр("Спортсмен"    , Спортсмен);
	Запрос.УстановитьПараметр("Документ"     , Документ);
	Запрос.Текст =  "ВЫБРАТЬ
	                |	ТаблицаДанных.ДокументСсылка КАК ДокументСсылка,
	                |	ТаблицаДанных.Спортсмен КАК Спортсмен,
	                |	ТаблицаДанных.Индекс КАК Индекс
	                |ПОМЕСТИТЬ ВТ_Данные
	                |ИЗ
	                |	&ТаблицаДанных КАК ТаблицаДанных
	                |ГДЕ
	                |	%1
	                |	И %2
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_Данные.Индекс КАК Индекс,
	                |	естьnull(СоставУчастников.ДатаПрисвоения, ДатаВремя(1,1,1)) КАК ДатаПрисвоения
	                |ИЗ
	                |	ВТ_Данные КАК ВТ_Данные
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрисвоениеРазряда.СоставУчастников КАК СоставУчастников
	                |		ПО ВТ_Данные.ДокументСсылка = СоставУчастников.Ссылка
	                |			И ВТ_Данные.Спортсмен = СоставУчастников.Спортсмен";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", ?(НЕ Спортсмен  = Неопределено, " ТаблицаДанных.Спортсмен = &Спортсмен", " Истина"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%2", ?(НЕ Документ = Неопределено, " ТаблицаДанных.ДокументСсылка = &Документ", " Истина"));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТаблицаРазрядовСпортсменов[Выборка.Индекс].ДатаПрисвоения = Выборка.ДатаПрисвоения;
	КонецЦикла;	
	
КонецПроцедуры	

#Область Заполнениетаблиц

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть_Организации()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанныхЗагрузка.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Индекс КАК Индекс,
	               |	ВЫРАЗИТЬ(ТаблицаДанных.СпортивноеУчреждение КАК СТРОКА(150)) КАК НаименованиеИзФайла
	               |ПОМЕСТИТЬ ВТ_ВнешниеДанные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВнешниеДанные.Индекс КАК Индекс,
	               |	ВТ_ВнешниеДанные.НаименованиеИзФайла КАК НаименованиеИзФайла,
	               |	Организации.Ссылка КАК Организация
	               |ИЗ
	               |	ВТ_ВнешниеДанные КАК ВТ_ВнешниеДанные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	               |		ПО ВТ_ВнешниеДанные.НаименованиеИзФайла = Организации.Наименование";
	ТаблицаОрганизаций.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого строкаОрганизация Из ТаблицаОрганизаций Цикл
		ТаблицаДанныхЗагрузка[строкаОрганизация.Индекс].СпортивноеУчреждениеСсылка = строкаОрганизация.Организация;
	КонецЦикла;	
	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть_ТренерскийСостав()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанныхЗагрузка.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Индекс КАК Индекс,
	               |	ВЫРАЗИТЬ(ТаблицаДанных.Тренер КАК СТРОКА(150)) КАК НаименованиеИзФайла
	               |ПОМЕСТИТЬ ВТ_ВнешниеДанные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВнешниеДанные.Индекс КАК Индекс,
	               |	ВТ_ВнешниеДанные.НаименованиеИзФайла КАК НаименованиеИзФайла,
	               |	Тренеры.Ссылка КАК Тренер
	               |ИЗ
	               |	ВТ_ВнешниеДанные КАК ВТ_ВнешниеДанные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Тренеры КАК Тренеры
	               |		ПО ВТ_ВнешниеДанные.НаименованиеИзФайла = Тренеры.Наименование";
	ТаблицаТренерскийСостав.Очистить();
	ТаблицаТренерскийСостав.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого строкаТренер Из ТаблицаТренерскийСостав Цикл
		ТаблицаДанныхЗагрузка[строкаТренер.Индекс].ТренерСсылка = строкаТренер.Тренер;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть_ТаблицаОрганизацияТренерДокумент()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанныхЗагрузка.Выгрузить());
	Запрос.УстановитьПараметр("ДатаДокумента", ДокументСоревнование.ДатаНачалаСоревнования);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Индекс КАК Индекс,
	               |	ТаблицаДанных.ТренерСсылка КАК ТренерСсылка,
	               |	ТаблицаДанных.СпортивноеУчреждениеСсылка КАК ОрганизацияСсылка
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТренерскийСоставСпортивногоУчреждения.Организация КАК Организация,
	               |	ТренерскийСоставСпортивногоУчреждения.Тренер КАК Тренер,
	               |	ТренерскийСоставСпортивногоУчреждения.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ ВТ_НаличиеДокументов
	               |ИЗ
	               |	РегистрСведений.ТренерскийСоставСпортивногоУчреждения КАК ТренерскийСоставСпортивногоУчреждения
	               |ГДЕ
	               |	(ТренерскийСоставСпортивногоУчреждения.Организация, ТренерскийСоставСпортивногоУчреждения.Тренер) В
	               |			(ВЫБРАТЬ
	               |				ВТ_Данные.ОрганизацияСсылка,
	               |				ВТ_Данные.ТренерСсылка
	               |			ИЗ
	               |				ВТ_Данные)
	               |	И (ТренерскийСоставСпортивногоУчреждения.ДействуетДо >= &ДатаДокумента
	               |			ИЛИ ТренерскийСоставСпортивногоУчреждения.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Данные.Индекс КАК Индекс,
	               |	ВТ_Данные.ТренерСсылка КАК Тренер,
	               |	ВТ_Данные.ОрганизацияСсылка КАК Организация,
	               |	ВТ_НаличиеДокументов.Регистратор КАК ДокументСсылка,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ВТ_НаличиеДокументов.Регистратор, ЗНАЧЕНИЕ(документ.формированиетренерскогосоставаспортивногоучреждения.пустаяссылка)) = ЗНАЧЕНИЕ(документ.формированиетренерскогосоставаспортивногоучреждения.пустаяссылка)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК СоздатьДокумент
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НаличиеДокументов КАК ВТ_НаличиеДокументов
	               |		ПО ВТ_Данные.ТренерСсылка = ВТ_НаличиеДокументов.Тренер
	               |			И ВТ_Данные.ОрганизацияСсылка = ВТ_НаличиеДокументов.Организация";
	
	ТаблицаОрганизацияТренерДокумент.Очистить();
	
	ТаблицаОрганизацияТренерДокумент.Загрузить(Запрос.Выполнить().Выгрузить());
	ТаблицаОрганизацияТренерДокумент.Сортировать("Индекс возр");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть_ТаблицаСпортсменов()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанныхЗагрузка.Выгрузить());
	Запрос.УстановитьПараметр("ПустаяСтрока" , "");
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Индекс КАК Индекс,
	               |	ВЫРАЗИТЬ(ТаблицаДанных.Фамилия КАК СТРОКА(100)) КАК Фамилия,
	               |	ВЫРАЗИТЬ(ТаблицаДанных.Имя КАК СТРОКА(100)) КАК Имя,
	               |	ВЫРАЗИТЬ(ТаблицаДанных.Отчество КАК СТРОКА(100)) КАК Отчество,
	               |	ТаблицаДанных.ДатаРождения КАК ДатаРождения,
	               |	ТаблицаДанных.ГодРождения КАК ГодРождения
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Данные.Индекс КАК Индекс,
	               |	ВТ_Данные.Фамилия КАК Фамилия,
	               |	ВТ_Данные.Имя КАК Имя,
	               |	ВТ_Данные.Отчество КАК Отчество,
	               |	ВТ_Данные.ДатаРождения КАК ДатаРождения,
	               |	ВТ_Данные.ГодРождения КАК ГодРождения,
	               |	ФизическиеЛица.Ссылка КАК ФизЛицо
	               |ПОМЕСТИТЬ ВТ_ДанныеПоФизЛицам
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |		ПО ВТ_Данные.Фамилия = ФизическиеЛица.Фамилия
	               |			И ВТ_Данные.Имя = ФизическиеЛица.Имя
	               |			И (ВЫБОР
	               |				КОГДА ВТ_Данные.Отчество <> (ВЫРАЗИТЬ(&ПустаяСтрока КАК СТРОКА(100)))
	               |					ТОГДА ВТ_Данные.Отчество = ФизическиеЛица.Отчество
	               |				ИНАЧЕ ИСТИНА
	               |			КОНЕЦ)
	               |			И (ВЫБОР
	               |				КОГДА ВТ_Данные.ДатаРождения <> ДАТАВРЕМЯ(1, 1, 1)
	               |					ТОГДА ВТ_Данные.ДатаРождения = ФизическиеЛица.ДатаРождения
	               |				ИНАЧЕ ВТ_Данные.ГодРождения = ФизическиеЛица.ГодРождения
	               |			КОНЕЦ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеПоФизЛицам.Индекс КАК Индекс,
	               |	ВТ_ДанныеПоФизЛицам.Фамилия КАК Фамилия,
	               |	ВТ_ДанныеПоФизЛицам.Имя КАК Имя,
	               |	ВТ_ДанныеПоФизЛицам.Отчество КАК Отчество,
	               |	ВТ_ДанныеПоФизЛицам.ДатаРождения КАК ДатаРождения,
	               |	ВТ_ДанныеПоФизЛицам.ГодРождения КАК ГодРождения,
	               |	Спортсмены.Ссылка КАК Спортсмен
	               |ИЗ
	               |	ВТ_ДанныеПоФизЛицам КАК ВТ_ДанныеПоФизЛицам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спортсмены КАК Спортсмены
	               |		ПО ВТ_ДанныеПоФизЛицам.ФизЛицо = Спортсмены.ФизическоеЛицо
	               |			И (ВТ_ДанныеПоФизЛицам.ФизЛицо <> ЗНАЧЕНИЕ(справочник.спортсмены.пустаяссылка))";
	
	ТаблицаСпортсменов.Очистить();
	ТаблицаСпортсменов.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого строкаСпортсмен Из ТаблицаСпортсменов Цикл
		ТаблицаДанныхЗагрузка[строкаСпортсмен.Индекс].СпортсменСсылка = строкаСпортсмен.Спортсмен;
	Конеццикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть_ТаблицаСпортсменДокумент()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанныхЗагрузка.Выгрузить());
	Запрос.УстановитьПараметр("ДатаДокумента", ДокументСоревнование.ДатаНачалаСоревнования);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Индекс КАК Индекс,
	               |	ТаблицаДанных.СпортсменСсылка КАК СпортсменСсылка,
	               |	ТаблицаДанных.СпортивноеУчреждениеСсылка КАК СпортивноеУчреждениеСсылка
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СоставУчащихсяСпортивногоУчреждения.Спортсмен КАК Спортсмен,
	               |	СоставУчащихсяСпортивногоУчреждения.Организация КАК Организация,
	               |	СоставУчащихсяСпортивногоУчреждения.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ ВТ_ВнесенныеДанные
	               |ИЗ
	               |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения КАК СоставУчащихсяСпортивногоУчреждения
	               |ГДЕ
	               |	(СоставУчащихсяСпортивногоУчреждения.Организация, СоставУчащихсяСпортивногоУчреждения.Спортсмен) В
	               |				(ВЫБРАТЬ
	               |					ВТ_Данные.СпортивноеУчреждениеСсылка,
	               |					ВТ_Данные.СпортсменСсылка
	               |				ИЗ
	               |					ВТ_Данные)
	               |			И СоставУчащихсяСпортивногоУчреждения.ДатаНачалаОбучения <= &ДатаДокумента
	               |			И (СоставУчащихсяСпортивногоУчреждения.ДатаОкончанияОбучения >= &ДатаДокумента
	               |				ИЛИ СоставУчащихсяСпортивногоУчреждения.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Данные.Индекс КАК Индекс,
	               |	ВТ_Данные.СпортсменСсылка КАК Спортсмен,
	               |	ВТ_Данные.СпортивноеУчреждениеСсылка КАК Организация,
	               |	ВТ_ВнесенныеДанные.Регистратор КАК ДокументССылка
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВнесенныеДанные КАК ВТ_ВнесенныеДанные
	               |		ПО ВТ_Данные.СпортсменСсылка = ВТ_ВнесенныеДанные.Спортсмен
	               |			И ВТ_Данные.СпортивноеУчреждениеСсылка = ВТ_ВнесенныеДанные.Организация";
	
	ТаблицаСпортсменДокумент.Очистить();
	ТаблицаСпортсменДокумент.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть_ТаблицаСоответствияВозрастныхГрупп()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблицаданных", ТаблицаДанныхЗагрузка.Выгрузить());
	Запрос.УстановитьПараметр("ДатаДокумента",ДокументСоревнование.ДатаНачалаСоревнования);
	Запрос.Текст =  "ВЫБРАТЬ
	                |	Таблицаданных.Индекс КАК Индекс,
	                |	Таблицаданных.СпортсменСсылка КАК Спортсмен
	                |ПОМЕСТИТЬ ВТ_Данные
	                |ИЗ
	                |	&Таблицаданных КАК Таблицаданных
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_Данные.Индекс КАК Индекс,
	                |	ВТ_Данные.Спортсмен КАК Спортсмен,
	                |	ФизическиеЛица.Ссылка КАК ФизЛицо
	                |ПОМЕСТИТЬ ВТ_ФизЛица
	                |ИЗ
	                |	ВТ_Данные КАК ВТ_Данные
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
					|		ПО ВТ_Данные.Спортсмен.ФизическоеЛицо = ФизическиеЛица.Ссылка
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_ФизЛица.Индекс КАК Индекс,
	                |	ВТ_ФизЛица.Спортсмен КАК Спортсмен,
	                |	МеждународныеВозрастныеГруппы.Ссылка КАК МеждународнаяВозрастнаяГруппа
	                |ПОМЕСТИТЬ ВТ_данныеПоГруппам
	                |ИЗ
	                |	ВТ_ФизЛица КАК ВТ_ФизЛица
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МеждународныеВозрастныеГруппы КАК МеждународныеВозрастныеГруппы
	                |		ПО  (ВТ_ФизЛица.ФизЛицо.ГодРождения >= ГОД(МеждународныеВозрастныеГруппы.ДатаНачала)
				    |                  И ВТ_ФизЛица.ФизЛицо.ГодРождения <= ГОД(МеждународныеВозрастныеГруппы.ДатаОкончания))
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_данныеПоГруппам.Индекс КАК Индекс,
	                |	ВТ_данныеПоГруппам.Спортсмен КАК Спортсмен,
	                |	ВТ_данныеПоГруппам.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа,
	                |	естьNull(МеждународныеВозрастныеГруппы.Регистратор, Значение(Документ.УстановкаМеждународнойВозрастнойГруппы.ПустаяСсылка)) КАК ДокументСсылка
	                |ИЗ
	                |	ВТ_данныеПоГруппам КАК ВТ_данныеПоГруппам
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МеждународныеВозрастныеГруппы.СрезПоследних(
					|       &ДатаДокумента, ) КАК МеждународныеВозрастныеГруппы
	                |		ПО ВТ_данныеПоГруппам.Спортсмен = МеждународныеВозрастныеГруппы.Спортсмен
	                |			И ВТ_данныеПоГруппам.МеждународнаяВозрастнаяГруппа = МеждународныеВозрастныеГруппы.МеждународнаяВозрастнаяГруппа";
	
	таблицаРезультат = Запрос.Выполнить().Выгрузить();
	ТаблицаСоответствияВозрастныхГрупп.Очистить();
	ТаблицаСоответствияВозрастныхГрупп.Загрузить(таблицаРезультат);
	
	Для Каждого строкаРезультат Из таблицаРезультат Цикл
		ТаблицаДанныхЗагрузка[строкаРезультат.Индекс].МеждународнаяВозрастнаяГруппаСсылка = строкаРезультат.ДокументСсылка.МеждународнаяВозрастнаяГруппа;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть_ТаблицаРазрядовСпортсменов()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанныхЗагрузка.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Индекс КАК Индекс,
	               |	ТаблицаДанных.СпортсменСсылка КАК СпортсменСсылка,
	               |	ВЫРАЗИТЬ(ТаблицаДанных.Разряд КАК СТРОКА(15)) КАК Разряд
	               |ПОМЕСТИТЬ ВТ_данные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_данные.Индекс КАК Индекс,
	               |	ВТ_данные.СпортсменСсылка КАК СпортсменСсылка,
	               |	СпортивнаяКлассификация.Ссылка КАК РазрядСсылка
	               |ПОМЕСТИТЬ ВТ_ДанныеПоРазрядам
	               |ИЗ
	               |	ВТ_данные КАК ВТ_данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпортивнаяКлассификация КАК СпортивнаяКлассификация
	               |		ПО ВТ_данные.Разряд = СпортивнаяКлассификация.КодДляИнтеграции
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеПоРазрядам.Индекс КАК Индекс,
	               |	ВТ_ДанныеПоРазрядам.СпортсменСсылка КАК Спортсмен,
	               |	ВТ_ДанныеПоРазрядам.РазрядСсылка КАК Разряд,
	               |	ПодтвержденныеРазрядыСпортсменов.Регистратор КАК ДокументСсылка,
	               |	ПодтвержденныеРазрядыСпортсменов.ДатаПрисвоения КАК ДатаПрисвоения
	               |ИЗ
	               |	ВТ_ДанныеПоРазрядам КАК ВТ_ДанныеПоРазрядам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодтвержденныеРазрядыСпортсменов КАК ПодтвержденныеРазрядыСпортсменов
	               |		ПО ВТ_ДанныеПоРазрядам.СпортсменСсылка = ПодтвержденныеРазрядыСпортсменов.Спортсмен
	               |			И ВТ_ДанныеПоРазрядам.РазрядСсылка = ПодтвержденныеРазрядыСпортсменов.Разряд";
	ТаблицаРазрядовСпортсменов.Очистить();
	ТаблицаРазрядовСпортсменов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть_ТаблицаДопусков()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблицаданных",ТаблицаДанныхЗагрузка.Выгрузить());
	Запрос.УстановитьПараметр("ДатаДокумента",ДокументСоревнование.ДатаНачалаСоревнования);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Индекс КАК Индекс,
	               |	ТаблицаДанных.СпортсменССылка КАК Спортсмен,
	               |	ТаблицаДанных.Допуск КАК Допуск,
	               |	ТаблицаДанных.СрокМедДопуска КАК СрокМедДопуска
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
				   |	ВТ_Данные.Индекс КАК Индекс,
	               |	ВТ_Данные.Спортсмен КАК Спортсмен,
	               |	ВТ_Данные.Допуск КАК Допуск,
	               |	ВТ_Данные.СрокМедДопуска КАК СрокМедДопуска,
	               |	РегистрацияДопусков.Регистратор КАК ДокументССылка
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияДопусковКСпортивнымСоревнованиям.СрезПоследних(
	               |				&ДатаДокумента,
	               |				ДействуетДо >= &ДатаДокумента
	               |					ИЛИ ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)) КАК РегистрацияДопусков
	               |		ПО ВТ_Данные.Спортсмен = РегистрацияДопусков.Спортсмен";
	ТаблицаДопусков.Очистить();
	ТаблицаДопусков.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть_ТаблицаФормированияКоманд()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанныхЗагрузка.Выгрузить());
	Запрос.УстановитьПараметр("УчебныйГод"   , ДокументСоревнование.УчебныйГод);
	Запрос.УстановитьПараметр("ДатаДокумента", ДокументСоревнование.ДатаНачалаСоревнования);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Индекс КАК Индекс,
	               |	ТаблицаДанных.СпортсменСсылка КАК СпортсменСсылка,
	               |	ТаблицаДанных.СпортивноеУчреждениеСсылка КАК СпортивноеУчреждениеСсылка,
	               |	ВЫРАЗИТЬ(ТаблицаДанных.Группа КАК СТРОКА(150)) КАК Группа,
	               |	ТаблицаДанных.ТренерСсылка КАК ТренерСсылка
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Данные.Индекс КАК Индекс,
	               |	ВТ_Данные.СпортсменСсылка КАК СпортсменСсылка,
	               |	ВТ_Данные.СпортивноеУчреждениеСсылка КАК СпортивноеУчреждениеСсылка,
	               |	ВТ_Данные.Группа КАК НаименованиеИзФайла,
	               |	ВТ_Данные.ТренерСсылка КАК ТренерСсылка,
	               |	МАКСИМУМ(ЕСТЬNULL(СсылкаКоманда.Ссылка, ЗНАЧЕНИЕ(справочник.Группа.пустаяссылка))) КАК КомандаСсылка
	               |ПОМЕСТИТЬ ВТ_ДанныеСКомандой
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Группа КАК СсылкаКоманда
	               |		ПО ВТ_Данные.Группа = СсылкаКоманда.Наименование
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Данные.Индекс,
	               |	ВТ_Данные.СпортсменСсылка,
	               |	ВТ_Данные.СпортивноеУчреждениеСсылка,
	               |	ВТ_Данные.Группа,
	               |	ВТ_Данные.ТренерСсылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеСКомандой.Индекс КАК Индекс,
	               |	ВТ_ДанныеСКомандой.СпортсменСсылка КАК СпортсменСсылка,
	               |	ВТ_ДанныеСКомандой.СпортивноеУчреждениеСсылка КАК СпортивноеУчреждениеСсылка,
	               |	ВЫРАЗИТЬ(ВТ_ДанныеСКомандой.НаименованиеИзФайла КАК СТРОКА(150)) КАК НаименованиеИзФайла,
	               |	ВТ_ДанныеСКомандой.ТренерСсылка КАК ТренерСсылка,
	               |	ВТ_ДанныеСКомандой.КомандаСсылка КАК КомандаСсылка,
	               |	СоставГруппы.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ ВТ_ДанныеИтог
	               |ИЗ
	               |	ВТ_ДанныеСКомандой КАК ВТ_ДанныеСКомандой
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставГруппы КАК СоставГруппы
	               |		ПО ВТ_ДанныеСКомандой.СпортсменСсылка = СоставГруппы.Спортсмен
	               |			И ВТ_ДанныеСКомандой.КомандаСсылка = СоставГруппы.Группа
	               |			И ВТ_ДанныеСКомандой.ТренерСсылка = СоставГруппы.ТренерСборной
	               |			И ВТ_ДанныеСКомандой.СпортивноеУчреждениеСсылка = СоставГруппы.Организация
	               |			И (СоставГруппы.УчебныйГод = &УчебныйГод)
				   |			И (СоставГруппы.Период <= &ДатаДокумента)
				   |			И (СоставГруппы.ДатаИсключенияИзГруппы <= &ДатаДокумента
	               |				ИЛИ СоставГруппы.ДатаИсключенияИзГруппы = ДАТАВРЕМЯ(1, 1, 1))
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеСКомандой.Индекс,
	               |	ВТ_ДанныеСКомандой.СпортсменСсылка,
	               |	ВТ_ДанныеСКомандой.СпортивноеУчреждениеСсылка,
	               |	ВЫРАЗИТЬ(ВТ_ДанныеСКомандой.НаименованиеИзФайла КАК СТРОКА(150)),
	               |	ВТ_ДанныеСКомандой.ТренерСсылка,
	               |	ВТ_ДанныеСКомандой.КомандаСсылка,
	               |	ЛичныйТренерСпортсмена.Регистратор
	               |ИЗ
	               |	ВТ_ДанныеСКомандой КАК ВТ_ДанныеСКомандой
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЛичныйТренерСпортсмена КАК ЛичныйТренерСпортсмена
	               |		ПО ВТ_ДанныеСКомандой.СпортсменСсылка = ЛичныйТренерСпортсмена.Спортсмен
	               |			И ВТ_ДанныеСКомандой.СпортивноеУчреждениеСсылка = ЛичныйТренерСпортсмена.Организация
	               |			И ВТ_ДанныеСКомандой.КомандаСсылка = ЛичныйТренерСпортсмена.Группа
	               |			И ВТ_ДанныеСКомандой.ТренерСсылка = ЛичныйТренерСпортсмена.Тренер
	               |			И (ЛичныйТренерСпортсмена.УчебныйГод = &УчебныйГод)
				   |			И (ЛичныйТренерСпортсмена.Период <= &ДатаДокумента)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеИтог.Индекс КАК Индекс,
	               |	ВТ_ДанныеИтог.СпортсменСсылка КАК Спортсмен,
	               |	ВТ_ДанныеИтог.СпортивноеУчреждениеСсылка КАК Организация,
	               |	ВТ_ДанныеИтог.НаименованиеИзФайла КАК НаименованиеКомандыИзФайла,
	               |	ВТ_ДанныеИтог.ТренерСсылка КАК Тренер,
	               |	ВТ_ДанныеИтог.КомандаСсылка КАК Группа,
	               |	МАКСИМУМ(ВТ_ДанныеИтог.Регистратор) КАК ДокументСсылка
	               |ИЗ
	               |	ВТ_ДанныеИтог КАК ВТ_ДанныеИтог
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ДанныеИтог.Индекс,
	               |	ВТ_ДанныеИтог.СпортсменСсылка,
	               |	ВТ_ДанныеИтог.СпортивноеУчреждениеСсылка,
	               |	ВТ_ДанныеИтог.НаименованиеИзФайла,
	               |	ВТ_ДанныеИтог.ТренерСсылка,
	               |	ВТ_ДанныеИтог.КомандаСсылка";
	
	ТаблицаФормированияКоманд.Очистить();
	ТаблицаФормированияКоманд.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеОбъектов

&НаСервере
Процедура СоздатьОрганизацииНаСервере()
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблицаданных",ТаблицаОрганизаций.Выгрузить()); 
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таблицаданных.Индекс КАК Индекс,
	               |	ВЫРАЗИТЬ(Таблицаданных.НаименованиеИзФайла КАК СТРОКА(150)) КАК НаименованиеИзФайла,
	               |	Таблицаданных.Организация КАК Организация
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&Таблицаданных КАК Таблицаданных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Данные.Индекс КАК Индекс,
	               |	ВТ_Данные.НаименованиеИзФайла КАК НаименованиеИзФайла,
	               |	ВТ_Данные.Организация КАК Организация
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |ИТОГИ ПО
	               |	НаименованиеИзФайла" ;
	
	ТаблицаОрганизаций.Очистить();
	
	ВыборкаСпортивноеУчреждение = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСпортивноеУчреждение.Следующий() Цикл
		
		СпортивноеУчреждениеСсылка = Неопределено;
		
		Выборка = ВыборкаСпортивноеУчреждение.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.Организация) Тогда
				СпортивноеУчреждениеСсылка = Выборка.Организация;
			ИначеЕсли НЕ СпортивноеУчреждениеСсылка = Неопределено Тогда
			Иначе
				объектСпортивноеУчреждение              = Справочники.Организации.СоздатьЭлемент();
				объектСпортивноеУчреждение.Наименование = СокрЛП(Выборка.НаименованиеИзФайла);
				объектСпортивноеУчреждение.Записать();
				
				СпортивноеУчреждениеСсылка = объектСпортивноеУчреждение.Ссылка;
			КонецЕсли;
			строка_ = ТаблицаОрганизаций.Добавить();
			ЗаполнитьЗначенияСвойств(строка_,Выборка);
			строка_.Организация = СпортивноеУчреждениеСсылка;
		КонецЦикла;	
		
	КонецЦикла;
	
	ТаблицаОрганизаций.Сортировать("Индекс Возр");
	Для Каждого строкаОрганизация Из ТаблицаОрганизаций Цикл
		ТаблицаДанныхЗагрузка[строкаОрганизация.Индекс].СпортивноеУчреждениеСсылка = строкаОрганизация.Организация;
	КонецЦикла;	
	
	Элементы.ТаблицаОрганизацийСоздатьОрганизации.Доступность = Ложь;
	
КонецПроцедуры	

&НаСервере
Процедура СоздатьТренеровНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблицаданных",ТаблицаТренерскийСостав.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таблицаданных.Индекс КАК Индекс,
	               |	ВЫРАЗИТЬ(Таблицаданных.НаименованиеИзФайла КАК СТРОКА(150)) КАК НаименованиеИзФайла,
	               |	Таблицаданных.Тренер КАК Тренер
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&Таблицаданных КАК Таблицаданных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Данные.Индекс КАК Индекс,
	               |	ВТ_Данные.НаименованиеИзФайла КАК НаименованиеИзФайла,
	               |	ВТ_Данные.Тренер КАК ТренерСсылка
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |ИТОГИ ПО
	               |	НаименованиеИзФайла";
	
	ТаблицаТренерскийСостав.Очистить();
	
	ВыборкаТренер  = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаТренер.Следующий() Цикл
		
		ТренерСсылка = Неопределено;
		
		Выборка = ВыборкаТренер.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если ЗначениеЗаполнено(Выборка.ТренерСсылка) Тогда
				ТренерСсылка = Выборка.ТренерСсылка;
			ИначеЕсли НЕ ТренерСсылка = Неопределено Тогда
				
			Иначе
				объектТренерФизЛицо = Справочники.ФизическиеЛица.СоздатьЭлемент();
				объектТренерФизЛицо.Наименование  = Выборка.НаименованиеИзФайла;
				объектТренерФизЛицо.Комментарий   = "Создан загрузкой из Exel";
				объектТренерФизЛицо.Ответственный = ПараметрыСеанса.ТекущийПользователь;
				объектТренерФизЛицо.ОбменДанными.Загрузка = Истина;
				
				физЛицоТренер = Неопределено;
				
				Попытка
					объектТренерФизЛицо.Записать();
					физЛицоТренер = объектТренерФизЛицо.Ссылка;	
				Исключение
					// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Не удалось создать физ.лицо для тренера %1'"),
					Выборка.НаименованиеИзФайла);
					// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
				КонецПопытки;
				
				
				Если НЕ физЛицоТренер = Неопределено Тогда
					
					объектТренер = Справочники.Тренеры.СоздатьЭлемент();
					объектТренер.Наименование   = физЛицоТренер.Наименование;
					объектТренер.ФизическоеЛицо = физЛицоТренер;
					объектТренер.Комментарий   = "Создан загрузкой из Exel";
					объектТренер.Ответственный = ПараметрыСеанса.ТекущийПользователь;
					
					Попытка
						объектТренер.Записать();
						ТренерСсылка = объектТренер.Ссылка;	
					Исключение
						// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Не удалось создать тренера %1'"),
						Выборка.НаименованиеИзФайла);
						// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
					КонецПопытки;
					
				КонецЕсли;
	
			КонецЕсли;
			
			строка_ = ТаблицаТренерскийСостав.Добавить();
			ЗаполнитьЗначенияСвойств(строка_, Выборка);
			строка_.Тренер = ТренерСсылка;
					
		КонецЦикла;	
		
	КонецЦикла;	
	
	ТаблицаТренерскийСостав.Сортировать("Индекс возр");
	
	Для Каждого строкаТренер Из ТаблицаТренерскийСостав Цикл
		ТаблицаДанныхЗагрузка[строкаТренер.Индекс].ТренерСсылка = строкаТренер.Тренер;
	КонецЦикла;	
	
	Элементы.СоздатьТренеров.Доступность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументФормированиеТренерскогоСоставаУчрежденияНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаОрганизацияТренерДокумент.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Индекс КАК Индекс,
	               |	ТаблицаДанных.СоздатьДокумент КАК СоздатьДокумент,
	               |	ТаблицаДанных.Тренер КАК Тренер,
	               |	ТаблицаДанных.Организация КАК Организация,
	               |	ТаблицаДанных.ДокументСсылка КАК Документ
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Данные.Тренер КАК Тренер,
	               |	ВТ_Данные.Организация КАК Организация
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |ГДЕ
	               |	(ВТ_Данные.СоздатьДокумент
	               |			ИЛИ ВТ_Данные.Документ = ЗНАЧЕНИЕ(документ.формированиетренерскогосоставаспортивногоучреждения.пустаяссылка))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Данные.Организация,
	               |	ВТ_Данные.Тренер
	               |ИТОГИ ПО
	               |	Организация";
	
	ВыборкаОрг = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОрг.Следующий() Цикл
		документОбъект               = Документы.ФормированиеТренерскогоСоставаСпортивногоУчреждения.СоздатьДокумент();
		документОбъект.Организация   = ВыборкаОрг.Организация;
		документОбъект.Дата          = ДокументСоревнование.УчебныйГод.ДатаНачала;
		документОбъект.Комментарий   = "Создан загрузкой из Exel";
		документОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		документОбъект.Записать();
		
		Выборка = ВыборкаОрг.Выбрать();
		Пока Выборка.Следующий() Цикл
			строкаДокументОбъект = документОбъект.ТренерскийСостав.Добавить();
			строкаДокументОбъект.Тренер = Выборка.Тренер;
			
			массивТренер = ТаблицаОрганизацияТренерДокумент.НайтиСтроки(Новый Структура("Тренер",Выборка.Тренер)); 
			Для Каждого строкаТренер Из массивТренер Цикл
				строкаТренер.ДокументСсылка = документОбъект.Ссылка;
			КонецЦикла;	
		КонецЦикла;
		
		документОбъект.Записать();
		
		Попытка
			документОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"Не удалось провести документ. Тренер: %1. Организация: %2. Проведите документ вручную.",
						Выборка.Тренер,
						Выборка.Организация);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		КонецПопытки;
		
	КонецЦикла;
	
	Элементы.ТаблицаОрганизацияТренерДокументСоздатьДокументФормированиеТренерскогоСоставаУчреждения.Доступность = Ложь;
	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСпортсменновНаСервере()
	
	Для Каждого строкаСпортсмен Из ТаблицаСпортсменов Цикл
		
		Если ЗначениеЗаполнено(строкаСпортсмен.Спортсмен) Тогда
			
			Если строкаСпортсмен.Спортсмен.ФизическоеЛицо.ДатаРождения <> ТаблицаДанныхЗагрузка[строкаСпортсмен.Индекс].ДатаРождения Тогда
				Если Месяц(строкаСпортсмен.Спортсмен.ФизическоеЛицо.ДатаРождения) = 1 И День(строкаСпортсмен.Спортсмен.ФизическоеЛицо.ДатаРождения) = 1
					И Месяц(ТаблицаДанныхЗагрузка[строкаСпортсмен.Индекс].ДатаРождения) <> 1 И День(ТаблицаДанныхЗагрузка[строкаСпортсмен.Индекс].ДатаРождения) <> 1 Тогда
					объектФизЛицо = строкаСпортсмен.Спортсмен.ФизическоеЛицо.ПолучитьОбъект();
					объектФизЛицо.ДатаРождения = ТаблицаДанныхЗагрузка[строкаСпортсмен.Индекс].ДатаРождения;
					Попытка
						объектФизЛицо.Записать();
					Исключение
						// {Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
						ЗаписьЖурналаРегистрации(НСтр("ru = 'ЗагрузитьДанныеИзЗаявки()'"), УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
						// }Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
					КонецПопытки;	
				КонецЕсли;	
			КонецЕсли;
			
			Продолжить;
		КонецЕсли;
		
		объектФизическоеЛицо                       = Справочники.ФизическиеЛица.СоздатьЭлемент();
		строкаДанных                               = ТаблицаДанныхЗагрузка[строкаСпортсмен.Индекс];
		ЗаполнитьЗначенияСвойств(объектФизическоеЛицо,строкаДанных);
		объектФизическоеЛицо.Наименование          = строкаДанных.Фамилия + " " + строкаДанных.Имя + ?(строкаДанных.Отчество = "", "", " ") + строкаДанных.Отчество;
		объектФизическоеЛицо.ОбменДанными.Загрузка = Истина;
		объектФизическоеЛицо.Комментарий           = "Создан загрузкой из Exel";
		объектФизическоеЛицо.Ответственный         = ПараметрыСеанса.ТекущийПользователь;
		
		Если ЗначениеЗаполнено(строкаДанных.Город) Тогда
			строкаКИ               = объектФизическоеЛицо.КонтактнаяИнформация.Добавить();
			строкаКИ.Вид           = Вид_КИ;
			строкаКИ.Тип           = Тип_КИ;
			строкаКИ.Представление = строкаДанных.Город;
		КонецЕсли;
		
		Попытка
			объектФизическоеЛицо.Записать();
		Исключение
			// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не удалось создать физ.лицо %1 %2 %3'"),
			строкаДанных.Фамилия,
			строкаДанных.Имя,
			Формат(строкаДанных.ДатаРождения, "ДЛФ=Д"));
			// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			Продолжить;
		КонецПопытки;
		
		объектСпортсмен                       = Справочники.Спортсмены.СоздатьЭлемент();
		объектСпортсмен.Наименование          = объектФизическоеЛицо.Наименование;
		объектСпортсмен.ФизическоеЛицо        = объектФизическоеЛицо.Ссылка;
		объектСпортсмен.ОбменДанными.Загрузка = Истина;
		объектСпортсмен.Комментарий           = "Создан загрузкой из Exel";
		объектСпортсмен.Ответственный         = ПараметрыСеанса.ТекущийПользователь;
		
		Попытка
			объектСпортсмен.Записать();
		Исключение
			// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не удалось создать спортсмена %1 %2 %3. Физ лицо помечено на удаление.'"),
			строкаДанных.Фамилия,
			строкаДанных.Имя,
			Формат(строкаДанных.ДатаРождения, "ДЛФ=Д"));
			// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			
			объектФизическоеЛицо.ПометкаУдаления = Истина;
			объектФизическоеЛицо.Записать();
			Продолжить;
		КонецПопытки;
	
		строкаСпортсмен.Спортсмен = объектСпортсмен.Ссылка;
		
	КонецЦикла;
	
	Элементы.ТаблицаСпортсменовСоздатьСпортсменнов.Доступность = Ложь;
	
	Для КАждого строкаСпортсмен Из ТаблицаСпортсменов Цикл
		ТаблицаДанныхЗагрузка[строкаСпортсмен.Индекс].СпортсменСсылка = строкаСпортсмен.Спортсмен;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПриемВСпортивноеУчреждениеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблицаданных", ТаблицаСпортсменДокумент.Выгрузить());
	Запрос.Текст =  "ВЫБРАТЬ
	                |	Таблицаданных.Индекс КАК Индекс,
	                |	Таблицаданных.Спортсмен КАК Спортсмен,
	                |	Таблицаданных.Организация КАК Организация,
	                |	Таблицаданных.ДокументСсылка КАК ДокументСсылка
	                |ПОМЕСТИТЬ ВТ_Данные
	                |ИЗ
	                |	&Таблицаданных КАК Таблицаданных
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_Данные.Индекс КАК Индекс,
	                |	ВТ_Данные.Спортсмен КАК Спортсмен,
	                |	ВТ_Данные.Организация КАК Организация
	                |ИЗ
	                |	ВТ_Данные КАК ВТ_Данные
	                |ГДЕ
	                |	ВТ_Данные.ДокументСсылка = ЗНАЧЕНИЕ(документ.ПриемВСпортивноеУчреждение.пустаяссылка)
	                |ИТОГИ ПО
	                |	Организация";
	
	ВыборкаОрг = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОрг.Следующий() Цикл
		документОбъект               = Документы.ПриемВСпортивноеУчреждение.СоздатьДокумент();
		документОбъект.Дата          = ДокументСоревнование.УчебныйГод.ДатаНачала;
		документОбъект.Организация   = ВыборкаОрг.Организация;
		документОбъект.Комментарий   = "Создан загрузкой из Exel";
		документОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		документОбъект.Записать();
		
		Выборка = ВыборкаОрг.Выбрать();
		Пока Выборка.Следующий() Цикл
			строкаДокументОбъект                    = документОбъект.СоставУчащихся.Добавить();
			строкаДокументОбъект.Спортсмен          = Выборка.Спортсмен;
			строкаДокументОбъект.ДатаНачалаОбучения = ДокументСоревнование.УчебныйГод.ДатаНачала;
			ТаблицаСпортсменДокумент[Выборка.Индекс].ДокументСсылка = документОбъект.Ссылка; 
		КонецЦикла;
		
		документОбъект.Записать();
		
		Попытка
			документОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Не удалось провести документ. Спортсмен: %1. Организация: %2. Проведите документ вручную.'"),
						Выборка.Спортсмен,
						Выборка.Организация);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23		
		КонецПопытки;
	КонецЦикла;
	
	Элементы.ТаблицаСпортсменДокументСоздатьПриемВСпортивноеУчреждение.Доступность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументУстановкаВозрастнойГруппыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаСоответствияВозрастныхГрупп.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Индекс КАК Индекс,
	               |	ТаблицаДанных.Спортсмен КАК Спортсмен,
	               |	ТаблицаДанных.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа,
	               |	ТаблицаДанных.Документссылка КАК Документссылка
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Данные.Индекс КАК Индекс,
	               |	ВТ_Данные.Спортсмен КАК Спортсмен,
	               |	ВТ_Данные.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |ГДЕ
	               |	ВТ_Данные.Документссылка = ЗНАЧЕНИЕ(документ.УстановкаМеждународнойВозрастнойГруппы.пустаяссылка)
	               |ИТОГИ ПО
	               |	МеждународнаяВозрастнаяГруппа";
	
	ВыборкаМежВозрГруппа = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМежВозрГруппа.Следующий() Цикл
		документОбъект                                 = Документы.УстановкаМеждународнойВозрастнойГруппы.СоздатьДокумент();
		документОбъект.Дата                            = ДокументСоревнование.УчебныйГод.ДатаНачала;
		документОбъект.МеждународнаяВозрастнаяГруппа   = ВыборкаМежВозрГруппа.МеждународнаяВозрастнаяГруппа;
		документОбъект.Комментарий                     = "Создан загрузкой из Exel";
		документОбъект.Ответственный                   = ПараметрыСеанса.ТекущийПользователь;
		документОбъект.Записать();
		
		Выборка = ВыборкаМежВозрГруппа.Выбрать();
		Пока Выборка.Следующий() Цикл
			строкаДокументОбъект                    = документОбъект.Спортсмены.Добавить();
			строкаДокументОбъект.Спортсмен          = Выборка.Спортсмен;
			ТаблицаСоответствияВозрастныхГрупп[Выборка.Индекс].ДокументСсылка = документОбъект.Ссылка; 
		КонецЦикла;
		
		документОбъект.Записать();
		
		Попытка
			документОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"Не удалось провести документ %1. Возрастная группа: %2. Проведите документ вручную.",
			            СокрЛП(документОбъект.Ссылка),
						ВыборкаМежВозрГруппа.МеждународнаяВозрастнаяГруппа);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		КонецПопытки;
	КонецЦикла;
	
	Элементы.ТаблицаСоответствияВозрастныхГруппСоздатьДокументУстановкаВозрастнойГруппы.Доступность = Ложь;
	
	Для Каждого строкаВозрастнаяГруппа Из ТаблицаСоответствияВозрастныхГрупп Цикл
		ТаблицаДанныхЗагрузка[строкаВозрастнаяГруппа.Индекс].МеждународнаяВозрастнаяГруппаСсылка = строкаВозрастнаяГруппа.МеждународнаяВозрастнаяГруппа;
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура СоздатьДокументПрисвоениеРазрядаНаСервере()
	
	массивСпортсменовЗаполнение = ТаблицаРазрядовСпортсменов.НайтиСтроки(Новый Структура("ДокументСсылка", Документы.ПрисвоениеРазряда.ПустаяСсылка()));
	Если массивСпортсменовЗаполнение.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	документОбъект               = Документы.ПрисвоениеРазряда.СоздатьДокумент();
	документОбъект.Дата          = ДокументСоревнование.УчебныйГод.ДатаНачала;
	документОбъект.Комментарий   = "Создан загрузкой из Exel";
	документОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	документОбъект.Записать();
	
	ДатаНачалаУчебногоГода = ДокументСоревнование.УчебныйГод.ДатаНачала;
	Для Каждого строкаЗаполнение Из массивСпортсменовЗаполнение Цикл
		Если НЕ ЗначениеЗаполнено(строкаЗаполнение.Разряд) Тогда
			Продолжить;
		КонецЕсли;
		ТаблицаРазрядовСпортсменов[строкаЗаполнение.Индекс].ДокументССылка = документОбъект.Ссылка; 
		строкаОбъект = документОбъект.СоставУчастников.Добавить();
		ЗаполнитьЗначенияСвойств(строкаОбъект,строкаЗаполнение);
		строкаОбъект.ДатаПрисвоения = ?(строкаЗаполнение.ДатаПрисвоения = Дата(1,1,1),ДатаНачалаУчебногоГода,строкаЗаполнение.ДатаПрисвоения);
		ТаблицаРазрядовСпортсменов[строкаЗаполнение.Индекс].ДатаПрисвоения = строкаОбъект.ДатаПрисвоения;
	КонецЦикла;
	
	документОбъект.Записать();
	
	Попытка
		документОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"Не удалось провести документ: %1. Проведите документ вручную.",
		СокрЛП(документОбъект.Ссылка));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецПопытки;
	
	Элементы.ТаблицаРазрядовСпортсменовСоздатьДокументПрисвоениеРазряда.Доступность = Ложь;
	
КонецПроцедуры	

&НаСервере
Процедура СоздатьДокументДопускНаСервере()
	
	массивСпортсменовЗаполнение = ТаблицаДопусков.НайтиСтроки(Новый Структура("ДокументСсылка", Документы.ДопускиУчастниковКСпортивнымСоревнованиям.ПустаяСсылка()));
	Если массивСпортсменовЗаполнение.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Дата = ДокументСоревнование.УчебныйГод.ДатаНачала;
	
	документОбъект               = Документы.ДопускиУчастниковКСпортивнымСоревнованиям.СоздатьДокумент();
	документОбъект.Дата          = Дата;
	документОбъект.Комментарий   = "Создан загрузкой из Exel";
	документОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	документОбъект.Записать();
	
	Для Каждого строкаЗаполнение Из массивСпортсменовЗаполнение Цикл
		Если НЕ строкаЗаполнение.Допуск Тогда
			Продолжить;
		КонецЕсли;	
		строкаОбъект                      = документОбъект.ДопускиСпортсменов.Добавить();
		строкаОбъект.Спортсмен            = строкаЗаполнение.Спортсмен;
		строкаОбъект.ДействуетДо          = строкаЗаполнение.СрокМедДопуска;
		строкаОбъект.ДатаПолученияДопуска = Дата;
		ТаблицаДопусков[строкаЗаполнение.Индекс].ДокументССылка = документОбъект.Ссылка;
	КонецЦикла;
	
	документОбъект.Записать();
	
	Попытка
		документОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Не удалось провести документ: %1. Проведите документ вручную.'"),
		СокрЛП(документОбъект.Ссылка));
		// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецПопытки;
	
	Элементы.ТаблицаДопусковСоздатьДокументДопуск.Доступность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьФормированиеКомандыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаФормированияКоманд.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Индекс КАК Индекс,
	               |	ТаблицаДанных.Спортсмен КАК Спортсмен,
	               |	ТаблицаДанных.Организация КАК Организация,
	               |	ВЫРАЗИТЬ(ТаблицаДанных.НаименованиеКомандыИзФайла КАК СТРОКА(150)) КАК Группа,
	               |	ТаблицаДанных.Группа КАК КомандаССылка,
	               |	ТаблицаДанных.ДокументСсылка КАК ДокументСсылка,
	               |	ТаблицаДанных.Тренер КАК Тренер
	               |ПОМЕСТИТЬ ВТ_данные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_данные.Индекс КАК Индекс,
	               |	ВТ_данные.Спортсмен КАК Спортсмен,
	               |	ВТ_данные.Организация КАК Организация,
	               |	ВТ_данные.Группа КАК Группа,
	               |	ВТ_данные.КомандаССылка КАК КомандаСсылка,
	               |	ВТ_данные.Тренер КАК Тренер
	               |ИЗ
	               |	ВТ_данные КАК ВТ_данные
	               |ГДЕ
	               |	ВТ_данные.ДокументСсылка = ЗНАЧЕНИЕ(документ.ФормированиеГруппы.пустаяссылка)
	               |ИТОГИ ПО
	               |	Группа,
				   |	Организация,
	               |	Тренер";
	
	ВыборкаКоманда = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаКоманда.Следующий() Цикл
		
		Команда        = Неопределено;
		
		ВыборкаОрганизация = ВыборкаКоманда.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаОрганизация.Следующий() Цикл
			
			ВыборкаТренер = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаТренер.Следующий() Цикл
				
				ДокументОбъект = Неопределено;
				
				Выборка = ВыборкаТренер.Выбрать();
				Пока ВЫборка.Следующий() Цикл
					
					Если НЕ Команда = Неопределено Тогда
					ИначеЕсли НЕ ЗначениеЗаполнено(ВЫборка.КомандаСсылка) Тогда
						ОбъектКоманда = Справочники.Группа.СоздатьЭлемент();
						ОбъектКоманда.Наименование  = СокрЛП(ВЫборка.Команда);
						ОбъектКоманда.Комментарий   = "Создан загрузкой из Exel";
						ОбъектКоманда.Ответственный = ПараметрыСеанса.ТекущийПользователь;
						ОбъектКоманда.Владелец      = 
						ОбъектКоманда.Записать();
						Команда = ОбъектКоманда.Ссылка;
					Иначе
						Команда = ВЫборка.КомандаСсылка;
					КонецЕсли;
					
					Если ДокументОбъект = Неопределено Тогда
						объектФормированиеКоманды               = Документы.ФормированиеГруппы.СоздатьДокумент();
						объектФормированиеКоманды.Дата          = ДокументСоревнование.УчебныйГод.ДатаНачала;
						объектФормированиеКоманды.УчебныйГод         = ДокументСоревнование.УчебныйГод;
						объектФормированиеКоманды.Организация   = ВЫборка.Организация;
						объектФормированиеКоманды.Группа       = Команда;
						объектФормированиеКоманды.Комментарий   = "Создан загрузкой из Exel";
						объектФормированиеКоманды.Ответственный = ПараметрыСеанса.ТекущийПользователь;
						объектФормированиеКоманды.Записать();
						ДокументОбъект = объектФормированиеКоманды.Ссылка;
					КонецЕсли;
					
					строкаСоставКоманды = объектФормированиеКоманды.Спортсмены.Добавить();
					строкаСоставКоманды.КлючСтроки = СокрЛП(ВЫборка.Спортсмен.УникальныйИдентификатор());
					строкаСоставКоманды.Спортсмен  = ВЫборка.Спортсмен;
					
					строкаТренер = объектФормированиеКоманды.СписокЛичныхТренеров.Добавить();
					строкаТренер.КлючСтроки = строкаСоставКоманды.КлючСтроки;
					строкаТренер.Тренер     = ВЫборка.Тренер;
					
					ТаблицаФормированияКоманд[Выборка.Индекс].Группа = Команда;
					ТаблицаФормированияКоманд[Выборка.Индекс].ДокументСсылка = объектФормированиеКоманды.Ссылка;
				КонецЦикла;
				
				Попытка
					объектФормированиеКоманды.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					объектФормированиеКоманды.Записать();
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"Не удалось проверсти документ %1.
					|Проведите документ, сформируйте возрастные группы и заполните заявку вручную.",
					объектФормированиеКоманды.Ссылка);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
				КонецПопытки;
				
			КонецЦикла;
		КонецЦикла;	
	КонецЦикла;
	
	Для Каждого строкаКоманда Из ТаблицаФормированияКоманд Цикл
		ТаблицаДанныхЗагрузка[строкаКоманда.Индекс].КомандаСсылка = строкаКоманда.Группа;
		ТаблицаДанныхЗагрузка[строкаКоманда.Индекс].ФормированиеКомандыСсылка = строкаКоманда.ДокументССылка;
	Конеццикла;	
	
КонецПроцедуры	

&НаСервере
Процедура СоздатьДокументыЗаявкиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанныхЗагрузка.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.ТренерСсылка КАК ТренерСсылка,
	               |	ТаблицаДанных.СпортивноеУчреждениеССылка КАК СпортивноеУчреждениеССылка,
	               |	ТаблицаДанных.СпортсменСсылка КАК СпортсменСсылка,
				   |	ТаблицаДанных.МеждународнаяВозрастнаяГруппаСсылка КАК МеждународнаяВозрастнаяГруппаСсылка,
	               |	ТаблицаДанных.КомандаСсылка КАК КомандаСсылка
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Данные.ТренерСсылка КАК ТренерСсылка,
	               |	ВТ_Данные.СпортивноеУчреждениеССылка КАК СпортивноеУчреждениеССылка,
	               |	ВТ_Данные.СпортсменСсылка КАК СпортсменСсылка,
				   |	ВТ_Данные.МеждународнаяВозрастнаяГруппаСсылка КАК МеждународнаяВозрастнаяГруппаСсылка,
	               |	ВТ_Данные.КомандаСсылка КАК КомандаСсылка
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |ИТОГИ ПО
	               |	ТренерСсылка,
	               |	СпортивноеУчреждениеССылка,
	               |	КомандаСсылка";
	
	ВыборкаТренер = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаТренер.Следующий() Цикл
		ВыборкаОрганизация = ВыборкаТренер.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаОрганизация.Следующий() Цикл
			ВыборкаКоманда = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаКоманда.Следующий() Цикл
				объектЗаявка                       = Документы.ЗаявкаНаПроведениеСоревнования.СоздатьДокумент();
				объектЗаявка.Организация           = ВыборкаОрганизация.СпортивноеУчреждениеССылка;
				объектЗаявка.УчебныйГод                 = ДокументСоревнование.УчебныйГод;
				объектЗаявка.Соревнование          = ДокументСоревнование.Соревнование;
				объектЗаявка.Дата                  = НачалоДня(ДокументСоревнование.ДатаНачалаСоревнования);
				объектЗаявка.Тренер                = ВыборкаТренер.ТренерСсылка;
				объектЗаявка.Комментарий           = "Создан загрузкой Exel";
				объектЗаявка.Ответственный         = ПараметрыСеанса.ТекущийПользователь;
				
				Выборка = ВыборкаКоманда.Выбрать();
				Пока Выборка.Следующий() Цикл
					строкаСоставУчастников = объектЗаявка.СоставУчастников.Добавить();
					строкаСоставУчастников.Спортсмен = Выборка.СпортсменСсылка;
					строкаСоставУчастников.МеждународнаяВозрастнаяГруппа = Выборка.МеждународнаяВозрастнаяГруппаСсылка;
				КонецЦикла;
				
				Попытка
					объектЗаявка.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					объектЗаявка.Записать();
					// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Не удалось проверсти документ %1.
					|Проведите документ, сформируйте возрастные группы и заполните заявку вручную.'"),
					объектЗаявка.Ссылка);
					// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
				КонецПопытки;
				
				строка_ = ТаблицаЗаявок.Добавить();
				строка_.ДокументЗаявка = объектЗаявка.Ссылка;
			КонецЦикла;	
		КонецЦикла;	
	КонецЦикла;	
	
	
КонецПроцедуры	


#КонецОбласти

#КонецОбласти