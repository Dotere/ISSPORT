#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументСоревнование = Параметры.ДокументСоревнование;
	
	Адрес = Параметры.Адрес;
	Таблицаданных = ПолучитьИзВременногоХранилища(Адрес);
	Если НЕ Таблицаданных = Неопределено Тогда
		ТаблицаДанныхЗагрузка.Загрузить(Таблицаданных);
		Если НЕ ТаблицаДанныхЗагрузка.Количество() = 0 Тогда
		   МаксимальныйИндекс = ТаблицаДанныхЗагрузка[ТаблицаДанныхЗагрузка.Количество()-1].Индекс;
		КонецЕсли;   
	КонецЕсли;	
	
	Вид_КИ = Справочники.ВидыКонтактнойИнформации.Город;
	Тип_КИ = Перечисления.ТипыКонтактнойИнформации.Адрес;
	
	ЗаполнитьДанныеВТаблицеExel();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "АнализДанныхПоКомандамЗавершен" Тогда
		АнализДанныхПоКомандамЗавершен = Истина;
	КонецЕсли;
	
	Если ИмяСобытия = "АнализДанныхПоСпортивнымУчреждениямЗавершен" Тогда
		АнализДанныхПоСпортивнымУчреждениямЗавершен = Истина;
	КонецЕсли;
	
	Если ИмяСобытия = "АнализДанныхПоТренерамЗавершен" Тогда
		АнализДанныхПоТренерамЗавершен = Истина;
	КонецЕсли;
	
	Если ИмяСобытия = "АнализДанныхПоРазрядамЗавершен" Тогда
		АнализДанныхПоРазрядамЗавершен = Истина;
	КонецЕсли;
	
	Если ИмяСобытия = "АнализДанныхСпортсменовЗавершен" Тогда
		АнализДанныхСпортсменовЗавершен = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура НачатьФормированиеДанных(Команда)
	
	НачатьФормированиеДанныхПродолжить();	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаверешениеДиалогаСПользователем

&НаКлиенте
Процедура НачатьФормированиеДанныхПродолжить()
	
	Если НЕ АнализДанныхПоКомандамЗавершен И НЕ АнализДанныхПоСпортивнымУчреждениямЗавершен 
		  И НЕ АнализДанныхПоТренерамЗавершен И НЕ АнализДанныхПоРазрядамЗавершен Тогда
		
		МассивПустыхКоманд      = Новый Массив;
		МассивПустыхОрганизаций = Новый Массив;
		МассивПустыхТренеров    = Новый Массив;
		МассивПустыхРазрядов    = Новый Массив;
		
		Для Каждого строкаДанных Из ТаблицаДанныхЗагрузка Цикл
			Если ЗначениеЗаполнено(строкаДанных.Команда) И НЕ ЗначениеЗаполнено(строкаДанных.КомандаСсылка) Тогда
				МассивПустыхКоманд.Добавить(Новый Структура("Индекс, Команда", строкаДанных.Индекс, строкаДанных.Команда)); 
			КонецЕсли;
			Если ЗначениеЗаполнено(строкаДанных.СпортивноеУчреждение) И НЕ ЗначениеЗаполнено(строкаДанных.СпортивноеУчреждениеСсылка) Тогда
				МассивПустыхОрганизаций.Добавить(Новый Структура("Индекс, СпортивноеУчреждение", строкаДанных.Индекс, строкаДанных.СпортивноеУчреждение)); 
			КонецЕсли;
			Если ЗначениеЗаполнено(строкаДанных.Тренер) И НЕ ЗначениеЗаполнено(строкаДанных.ТренерСсылка) Тогда
				МассивПустыхТренеров.Добавить(Новый Структура("Индекс, Тренер", строкаДанных.Индекс, строкаДанных.Тренер)); 
			КонецЕсли;
			Если ЗначениеЗаполнено(строкаДанных.Разряд) И НЕ ЗначениеЗаполнено(строкаДанных.РазрядСсылка) Тогда
				МассивПустыхРазрядов.Добавить(Новый Структура("Индекс, Разряд", строкаДанных.Индекс, строкаДанных.Разряд)); 
			КонецЕсли;
		КонецЦикла;	
		
		Если МассивПустыхКоманд.Количество() > 0 И НЕ АнализДанныхПоКомандамЗавершен Тогда
			
			Оповещение = Новый ОписаниеОповещения("СозданиеНедостающихЗаписейЗавершение",
			ЭтотОбъект,
			Новый Структура("Идентификатор, МассивДанных", "Команды", МассивПустыхКоманд));	
			
			ПоказатьВопрос(Оповещение,
			"В базе не найдены некоторые команды.
			|Открыть список, чтобы создать записи?",
			РежимДиалогаВопрос.ДаНет,
			0);
			
		КонецЕсли;
		
		Если МассивПустыхОрганизаций.Количество() > 0 И НЕ АнализДанныхПоСпортивнымУчреждениямЗавершен Тогда
			
			Оповещение = Новый ОписаниеОповещения("СозданиеНедостающихЗаписейЗавершение",
			ЭтотОбъект,
			Новый Структура("Идентификатор, МассивДанных", "Организации", МассивПустыхОрганизаций));	
			
			ПоказатьВопрос(Оповещение,
			"В базе не найдены некоторые спортивные учреждения.
			|Открыть список, чтобы создать записи?",
			РежимДиалогаВопрос.ДаНет,
			0);
			
		КонецЕсли;
		
		Если МассивПустыхТренеров.Количество() > 0 И НЕ АнализДанныхПоТренерамЗавершен Тогда
			
			Оповещение = Новый ОписаниеОповещения("СозданиеНедостающихЗаписейЗавершение",
			ЭтотОбъект,
			Новый Структура("Идентификатор, МассивДанных", "Тренеры", МассивПустыхТренеров));	
			
			ПоказатьВопрос(Оповещение,
			"В базе не найдены некоторые тренеры.
			|Открыть список, чтобы создать записи?",
			РежимДиалогаВопрос.ДаНет,
			0);
			
		КонецЕсли;
		
		Если МассивПустыхРазрядов.Количество() > 0 И НЕ АнализДанныхПоРазрядамЗавершен Тогда
			
			Оповещение = Новый ОписаниеОповещения("СозданиеНедостающихЗаписейЗавершение",
			ЭтотОбъект,
			Новый Структура("Идентификатор, МассивДанных", "Разряды", МассивПустыхРазрядов));	
			
			ПоказатьВопрос(Оповещение,
			"В базе не найдены некоторые разряды.
			|Открыть список, чтобы создать записи?",
			РежимДиалогаВопрос.ДаНет,
			0);
			
		КонецЕсли;
		
			
	Иначе
		
		массивПустыхСпортсменов = Новый Массив;
		Для Каждого СтрокаДанных Из ТаблицаДанныхЗагрузка Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаДанных.СпортсменСсылка) Тогда
				Продолжить;
			Иначе
				СтруктураДанных = Новый Структура("Индекс, Фамилия, Имя, Отчество, Пол, ДатаРождения, ГодРождения, Город, Допуск, СрокМедДопуска, РазрядСсылка");
				ЗаполнитьЗначенияСвойств(СтруктураДанных,СтрокаДанных);
				массивПустыхСпортсменов.Добавить(СтруктураДанных);
			КонецЕсли;	
		КонецЦикла;	
		
		Если массивПустыхСпортсменов.Количество() > 0 И НЕ АнализДанныхСпортсменовЗавершен Тогда
			
			Оповещение = Новый ОписаниеОповещения("СозданиеНедостающихЗаписейЗавершение",
			ЭтотОбъект,
			Новый Структура("Идентификатор, МассивДанных", "Спортсмены", массивПустыхСпортсменов));	
			
			ПоказатьВопрос(Оповещение,
			"В базе не найдены некоторые спортсмены.
			|Открыть список, чтобы создать записи?",
			РежимДиалогаВопрос.ДаНет,
			0);
			
		Иначе	
			
			
			Оповещение = Новый ОписаниеОповещения("НачатьФормированиеДанныхЗавершение",
			ЭтотОбъект);	
			
			ПоказатьВопрос(Оповещение,
			"Таблица Exel станет недоступна для редактирования.
			|Продолжить?",
			РежимДиалогаВопрос.ДаНет,
			0);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура НачатьФормированиеДанныхЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		НачатьФормированиеДанныхЗавершениеПродолжить();
	Иначе
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьФормированиеДанныхЗавершениеПродолжить()
	
	Элементы.ТаблицаДанныхЗагрузка.ТолькоПросмотр = Истина;
	
КонецПроцедуры	

&НаКлиенте
Процедура СозданиеНедостающихЗаписейЗавершение(Результат,ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ОткрытьФормуСозданияЗаписей(ДопПараметры.МассивДанных, ДопПараметры.Идентификатор);
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		
		Если ДопПараметры.Идентификатор = "Команды" Тогда
			АнализДанныхПоКомандамЗавершен = Истина;
		ИначеЕсли ДопПараметры.Идентификатор = "Организации" Тогда
			АнализДанныхПоСпортивнымУчреждениямЗавершен = Истина;
		ИначеЕсли ДопПараметры.Идентификатор = "Тренеры" Тогда
			АнализДанныхПоТренерамЗавершен = Истина;
		ИначеЕсли ДопПараметры.Идентификатор = "Спортсмены" Тогда
			АнализДанныхСпортсменовЗавершен = Истина;	
		Иначе
			АнализДанныхПоРазрядамЗавершен = Истина;	
		КонецЕсли;
		
		НачатьФормированиеДанныхПродолжить();
		
	Иначе
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеТаблицыExel

&НаСервере
Процедура ЗаполнитьДанныеВТаблицеExel()
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "";
	// {Рарус adilas #- -Sonar 2021.06.29
	УчетСпортсменовВызовСервера.ВвестиСтруктуруВоВременнуюТаблицу(
	ТекстЗапроса, 
	Новый Структура("Индекс, Фамилия, Имя, Отчество, ДатаРождения, ГодРождения, СпортивноеУчреждение, Команда, Тренер, Разряд"),
	"ВТ_ДанныеТаблицы",
	"ТаблицаДанных");
	
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанныхЗагрузка.Выгрузить());
	Запрос.УстановитьПараметр("ПустаяСтрока" , "");
	
	Запрос.Текст = ТекстЗапроса + "
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ДанныеТаблицы.Индекс КАК Индекс,
	               |	Организации.Ссылка КАК СпортивноеУчреждениеСсылка
	               |ИЗ
	               |	ВТ_ДанныеТаблицы КАК ВТ_ДанныеТаблицы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	               |		ПО ((ВЫРАЗИТЬ(ВТ_ДанныеТаблицы.СпортивноеУчреждение КАК СТРОКА(150))) = Организации.Наименование
	               |				ИЛИ (ВЫРАЗИТЬ(ВТ_ДанныеТаблицы.СпортивноеУчреждение КАК СТРОКА(150))) = Организации.ПолноеНаименование)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ДанныеТаблицы.Индекс КАК Индекс,
	               |	Тренеры.Ссылка КАК ТренерСсылка
	               |ИЗ
				   |	ВТ_ДанныеТаблицы КАК ВТ_ДанныеТаблицы
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Тренеры КАК Тренеры
				   |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
				   |			ПО Тренеры.ФизическоеЛицо = ФизическиеЛица.Ссылка
				   |		ПО (ВЫРАЗИТЬ(ВТ_ДанныеТаблицы.Тренер КАК СТРОКА(150)) ПОДОБНО Тренеры.Наименование
				   |				ИЛИ ВЫРАЗИТЬ(ВТ_ДанныеТаблицы.Тренер КАК СТРОКА(100)) ПОДОБНО ФизическиеЛица.Фамилия)  
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   |	ВТ_ДанныеТаблицы.Индекс КАК Индекс,
				   |	ФизическиеЛица.Ссылка КАК ФизЛицо
				   |ПОМЕСТИТЬ ВТ_ДанныеПоФизЛицам
	               |ИЗ
	               |	ВТ_ДанныеТаблицы КАК ВТ_ДанныеТаблицы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |		ПО Выразить(ВТ_ДанныеТаблицы.Фамилия КАК Строка(100)) ПОДОБНО ФизическиеЛица.Фамилия
	               |			И Выразить(ВТ_ДанныеТаблицы.Имя КАК Строка(100)) ПОДОБНО ФизическиеЛица.Имя
	               |			И (ВЫБОР
	               |				КОГДА Выразить(ВТ_ДанныеТаблицы.Отчество КАК Строка(100)) <> (ВЫРАЗИТЬ(&ПустаяСтрока КАК СТРОКА(100)))
	               |					ТОГДА Выразить(ВТ_ДанныеТаблицы.Отчество КАК Строка(100)) ПОДОБНО ФизическиеЛица.Отчество
	               |				ИНАЧЕ ИСТИНА
	               |			КОНЕЦ)
	               |			И (ВЫБОР
	               |				КОГДА ВТ_ДанныеТаблицы.ДатаРождения <> ДАТАВРЕМЯ(1, 1, 1)
	               |					ТОГДА ВТ_ДанныеТаблицы.ДатаРождения = ФизическиеЛица.ДатаРождения
	               |				ИНАЧЕ Выразить(ВТ_ДанныеТаблицы.ГодРождения КАК Строка(4)) = ФизическиеЛица.ГодРождения
	               |			КОНЕЦ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ДанныеПоФизЛицам.Индекс КАК Индекс,
	               |	Спортсмены.Ссылка КАК СпортсменСсылка,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(Спортсмены.Ссылка, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ВнестиСпортсмена
	               |ИЗ
	               |	ВТ_ДанныеПоФизЛицам КАК ВТ_ДанныеПоФизЛицам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спортсмены КАК Спортсмены
	               |		ПО ВТ_ДанныеПоФизЛицам.ФизЛицо = Спортсмены.ФизическоеЛицо
	               |			И (ВТ_ДанныеПоФизЛицам.ФизЛицо <> ЗНАЧЕНИЕ(справочник.спортсмены.пустаяссылка))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ДанныеТаблицы.Индекс КАК Индекс,
	               |	Команды.Ссылка КАК КомандаСсылка
	               |ИЗ
	               |	ВТ_ДанныеТаблицы КАК ВТ_ДанныеТаблицы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
	               |		ПО ((ВЫРАЗИТЬ(ВТ_ДанныеТаблицы.Команда КАК СТРОКА(150))) = Команды.Наименование) 
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ДанныеТаблицы.Индекс КАК Индекс,
	               |	СпортивнаяКлассификация.Ссылка КАК РазрядСсылка,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(СпортивнаяКлассификация.Ссылка, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ВнестиРазряд
	               |ИЗ
	               |	ВТ_ДанныеТаблицы КАК ВТ_ДанныеТаблицы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпортивнаяКлассификация КАК СпортивнаяКлассификация
	               |		ПО ((ВЫРАЗИТЬ(ВТ_ДанныеТаблицы.Разряд КАК СТРОКА(100))) ПОДОБНО СпортивнаяКлассификация.Наименование)";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ЗаполнитьСтрокиПоРезультатуЗапроса(Пакет[1]. Выбрать());
	ЗаполнитьСтрокиПоРезультатуЗапроса(Пакет[2]. Выбрать());
	ЗаполнитьСтрокиПоРезультатуЗапроса(Пакет[4]. Выбрать());
	ЗаполнитьСтрокиПоРезультатуЗапроса(Пакет[5]. Выбрать());
	ЗаполнитьСтрокиПоРезультатуЗапроса(Пакет[6]. Выбрать());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокиПоРезультатуЗапроса(Выборка)
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДанныхЗагрузка[Выборка.Индекс], Выборка,, "Индекс");
	КонецЦикла;
	
КонецПроцедуры	

#КонецОбласти

#Область СозданиеЗаписейВСправочниках

&НаКлиенте
Процедура ОткрытьФормуСозданияЗаписей(МассивДанных, ИмяПараметра)
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьФормуСозданияЗаписейЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.ВыгрузкаЗагрузкаДанныхСоревнования.Форма.ФормаПромежуточногоЗаполненияДанных",
	   Новый Структура("МассивДанных, ИмяПараметра", МассивДанных, ИмяПараметра),
	   ЭтаФорма,
	   Новый УникальныйИдентификатор(),,,
	   Оповещение,
	   РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	   
	
КонецПроцедуры
   
&НаКлиенте
Процедура ОткрытьФормуСозданияЗаписейЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	Иначе
		Для Каждого СтруктураДанных Из Результат.МассивДанных Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаДанныхЗагрузка[СтруктураДанных.Индекс],СтруктураДанных,,"Индекс");
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти




















