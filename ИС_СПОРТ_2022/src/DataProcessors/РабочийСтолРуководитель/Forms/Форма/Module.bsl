
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДатыТаблицы();
	ДекорацияВидыСпортаНажатие(Неопределено);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура СпортивныеОбъектыПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено ИЛИ ТекущийСпортивныйОбъект = ТекущиеДанные.Ссылка Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущийСпортивныйОбъект = ТекущиеДанные.Ссылка;
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ЗаполнитьДанныеСервер(Организация);
    УстановитьОтборыДанных(Организация);
	ОбновитьСписокСпортсменов();
	
	// }Рарус ivaart IN-18238 Заполнение формы пустыми данными при пустом отборе  2021.08.03		
	Если ПустаяСтрока(Организация) тогда
   		ОчиститьДанные();
		ЗаполнитьДанныеТренера();
	КонецЕсли;
	
	// {Рарус ivaart IN-19390 Очистка данных СО при смене организации СО 2021.08.27
	ТекущийСпортивныйОбъект = ПредопределенноеЗначение("Справочник.СпортивныеОбъекты.ПустаяСсылка");
	ТекущийСпортивныйОбъектСписокМест.Очистить();
	ЗаполнитьДанныеСО();
	// }Рарус ivaart IN-19390 Очистка данных СО при смене организации СО 2021.08.27
	
	// {Рарус adilas #22219 -Функциональные опции 2021.12.13
	СтрОрганиз = Новый Структура;
	СтрОрганиз.Вставить("ПараметрОрганизация", Организация);
		
	УстановитьПараметрыФункциональныхОпцийИнтерфейса(СтрОрганиз);
	// }Рарус adilas #22219 -Функциональные опции 2021.12.13
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДанные()
	//Задаём пустое значение для спортсмена и обновляем его данные
	ТекущийСпортсмен = Справочники.Спортсмены.ПустаяСсылка();
	ПолучитьДанныеПоСпортсмену();
	ОбновитьФотографиюНаСервере();
	
	//Задаём пустое значение для текущего тренера, что бы обновить его на клиенте
	ТекущийТренер = Справочники.Тренеры.ПустаяСсылка();
КонецПроцедуры
// }Рарус ivaart IN-18238 Заполнение формы пустыми данными при пустом отборе  2021.08.03

&НаСервере
Процедура ЗаполнитьДанныеСервер(Организация)
    
    ЗаполнитьДанныеВидыСпорта(Организация);
    ЗаполнитьДанныеЭтапыСпортивнойПодготовки(Организация);
	ЗаполнитьДанныеЭтапыСП(Организация);
	
    ЗаполнитьДанныеСпортсменовПоГодам(Организация);
	ЗаполнитьДанныеЭтапыСпортивнойПодготовкиТренера(Организация);
	ЗаполнитьДанныеТренеровПоГодамТаблица(Организация);
	ЗаполнитьДанныеСпортсменовПоГодамТаблица(Организация);
	ЗаполнитьДанныеЭтаповПоГодамТаблица(Организация);
	
    СписокСпортсменыПоРазрядам(Организация);
	
	СписокСпортсменыПоЭтапам(Организация);
	СписокСпортсменыПоТренерам(Организация);
	
	СписокТренеры.Параметры.УстановитьЗначениеПараметра("Организация", Организация);
	СписокСпортсмены.Параметры.УстановитьЗначениеПараметра("Организация", Организация);
	ЗаполнитьКолТренерЗвания(Организация);
	ЗаполнитьКолТренерСпортивныеСудьи(Организация);
	ЗаполнитьКолТренерКвалификационныеКатегории(Организация);
	
	УстановитьОтборКарты(Организация);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКолТренерЗвания(Организация)
	КолТренерЗвания.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СоответствияФизическихЛицИОрганизаций.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ФизЛица
		|ИЗ
		|	РегистрСведений.СоответствияФизическихЛицИОрганизаций КАК СоответствияФизическихЛицИОрганизаций
		|ГДЕ
		|	СоответствияФизическихЛицИОрганизаций.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпортивныеЗванияТренеровСрезПоследних.Звание КАК Звание,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СпортивныеЗванияТренеровСрезПоследних.Тренер) КАК Количество
		|ИЗ
		|	ФизЛица КАК ФизЛица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпортивныеЗванияТренеров.СрезПоследних КАК СпортивныеЗванияТренеровСрезПоследних
		|		ПО ФизЛица.ФизическоеЛицо.Ссылка = СпортивныеЗванияТренеровСрезПоследних.Тренер.ФизическоеЛицо.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадровыеИсторииТренеров.СрезПоследних(, Организация = &Организация) КАК КадровыеИсторииТренеровСрезПоследних
		|		ПО ФизЛица.ФизическоеЛицо.Ссылка = КадровыеИсторииТренеровСрезПоследних.Тренер.ФизическоеЛицо.Ссылка
		|ГДЕ
		|	КадровыеИсторииТренеровСрезПоследних.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|
		|СГРУППИРОВАТЬ ПО
		|	СпортивныеЗванияТренеровСрезПоследних.Звание";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() тогда
		Элементы.КолТренерЗвания.Видимость = Истина;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Строка = КолТренерЗвания.Добавить();
			Строка.Звание = Выборка.Звание;
			Строка.Количество = Выборка.Количество;
		КонецЦикла;
	Иначе
		элементы.КолТренерЗвания.Видимость = Ложь;
		КолТренерЗвания.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКолТренерСпортивныеСудьи(Организация)
	КолТренерСпортивныеСудьи.Очистить();
	Запрос = Новый Запрос;
	// {Рарус dotere #19864 -Не поподают уволенные тренеры 2021.09.24
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КатегорииСпортивныхСудейСрезПоследних.Тренер) КАК Количество,
		|	КатегорииСпортивныхСудейСрезПоследних.Категория КАК Категория
		|ИЗ
		|	РегистрСведений.КадровыеИсторииТренеров.СрезПоследних(&ТекущаяДата, Организация = &Организация) КАК КадровыеИсторииТренеровСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КатегорииСпортивныхСудей.СрезПоследних(&ТекущаяДата, ) КАК КатегорииСпортивныхСудейСрезПоследних
		|		ПО КадровыеИсторииТренеровСрезПоследних.Тренер = КатегорииСпортивныхСудейСрезПоследних.Тренер
		|ГДЕ
		|	(КатегорииСпортивныхСудейСрезПоследних.СрокДействия >= &ТекущаяДата
		|			ИЛИ КатегорииСпортивныхСудейСрезПоследних.СрокДействия = ДАТАВРЕМЯ(1, 1, 1))
		|	И (КадровыеИсторииТренеровСрезПоследних.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|			ИЛИ КадровыеИсторииТренеровСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|				И КадровыеИсторииТренеровСрезПоследних.Период > &ТекущаяДата)
		|
		|СГРУППИРОВАТЬ ПО
		|	КатегорииСпортивныхСудейСрезПоследних.Категория";
	// }Рарус dotere #19864 -Не поподают уволенные тренеры 2021.09.24
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() тогда
		Элементы.КолТренерСпортивныеСудьи.Видимость = Истина;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Строка = КолТренерСпортивныеСудьи.Добавить();
			Строка.Категория = Выборка.Категория;
			Строка.Количество = Выборка.Количество;
		КонецЦикла;
	Иначе
		элементы.КолТренерСпортивныеСудьи.Видимость = Ложь;
		КолТренерСпортивныеСудьи.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКолТренерКвалификационныеКатегории(Организация)
	КолТренерКвалификационныеКатегории.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СоответствияФизическихЛицИОрганизаций.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ФизЛица
		|ИЗ
		|	РегистрСведений.СоответствияФизическихЛицИОрганизаций КАК СоответствияФизическихЛицИОрганизаций
		|ГДЕ
		|	СоответствияФизическихЛицИОрганизаций.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КвалификационныеКатегорииТренеровСрезПоследних.Категория КАК Категория,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КвалификационныеКатегорииТренеровСрезПоследних.Тренер) КАК Количество
		|ИЗ
		|	РегистрСведений.КвалификационныеКатегорииТренеров.СрезПоследних КАК КвалификационныеКатегорииТренеровСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФизЛица КАК ФизЛица
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадровыеИсторииТренеров.СрезПоследних(, Организация = &Организация) КАК КадровыеИсторииТренеровСрезПоследних
		|			ПО ФизЛица.ФизическоеЛицо.Ссылка = КадровыеИсторииТренеровСрезПоследних.Тренер.ФизическоеЛицо.Ссылка
		|		ПО (ФизЛица.ФизическоеЛицо.Ссылка = КвалификационныеКатегорииТренеровСрезПоследних.Тренер.ФизическоеЛицо.Ссылка)
		|ГДЕ
		|	КадровыеИсторииТренеровСрезПоследних.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|
		|СГРУППИРОВАТЬ ПО
		|	КвалификационныеКатегорииТренеровСрезПоследних.Категория";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() тогда
		Элементы.КолТренерКвалификационныеКатегории.Видимость = Истина;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Строка = КолТренерКвалификационныеКатегории.Добавить();
			Строка.Категория = Выборка.Категория;
			Строка.Количество = Выборка.Количество;
		КонецЦикла;
	Иначе
		элементы.КолТренерКвалификационныеКатегории.Видимость = Ложь;
		КолТренерКвалификационныеКатегории.Очистить();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СписокОрганизацийПриАктивизацииСтроки(Элемент)
    Организация = Элемент.ТекущиеДанные.Ссылка;
    ЗаполнитьДанныеСервер(Организация);
    УстановитьОтборыДанных(Организация);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоВидадамСпортаНажатие(Элемент)
    ОткрытьФорму("Отчет.АктуальныйСписокСоревнований.Форма.ФормаОтчета");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеВидыСпорта(Организация)

	// {Рарус adilas #23447 -// }Рарус adilas #23447 -Тестирование релиза 1.0.0.5. РС Руководитель. Закладка "Виды спорта" 2021.12.24 2021.12.24
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Организация КАК Организация,
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен,
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_СоставУчащихся
        |ИЗ
        |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, Организация = &Организация) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
        |ГДЕ
        |	(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения МЕЖДУ &НачалоПериода И &КонецПериода
        |			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
        |
        |ИНДЕКСИРОВАТЬ ПО
        |	ВидСпорта,
        |	Организация,
        |	Спортсмен
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_СоставУчащихся.Спортсмен) КАК Спортсмен,
        |	ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
        |ИЗ
        |	ВТ_СоставУчащихся КАК ВТ_СоставУчащихся
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ПО ВТ_СоставУчащихся.Спортсмен = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен
        |			И ВТ_СоставУчащихся.ВидСпорта = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_СоставУчащихся.ВидСпорта";
    
    Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(ТекущаяДатаСеанса()) - 1);
	Запрос.УстановитьПараметр("КонецПериода", КонецГода(ТекущаяДатаСеанса()));
    // }Рарус adilas #23447 -// }Рарус adilas #23447 -Тестирование релиза 1.0.0.5. РС Руководитель. Закладка "Виды спорта" 2021.12.24 2021.12.24
	
    РезультатЗапроса = Запрос.Выполнить();
    
    ДиаграммаКоличествоНаВидСпорта.Обновление = Ложь;
    ДиаграммаКоличествоНаВидСпорта.Очистить();
    ДиаграммаКоличествоНаВидСпорта.АвтоТранспонирование = Ложь;
    Точка = ДиаграммаКоличествоНаВидСпорта.УстановитьТочку("Спортсмен");
    
    ВыборкаВидСпорта = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    
    Пока ВыборкаВидСпорта.Следующий() Цикл
        Серия = ДиаграммаКоличествоНаВидСпорта.УстановитьСерию(ВыборкаВидСпорта.ВидСпорта);
        Серия.Текст = ВыборкаВидСпорта.ВидСпорта;
        Серия.Расшифровка = ВыборкаВидСпорта.ВидСпорта;
		
        ДиаграммаКоличествоНаВидСпорта.УстановитьЗначение(Точка, Серия, ВыборкаВидСпорта.Спортсмен, Серия.Расшифровка);
    КонецЦикла;
    
    ДиаграммаКоличествоНаВидСпорта.АвтоТранспонирование = Истина;
    ДиаграммаКоличествоНаВидСпорта.Обновление = Истина;
   
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеЭтапыСпортивнойПодготовкиТренера(Организация)

    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	СоответствияФизическихЛицИОрганизаций.ФизическоеЛицо КАК ФизическоеЛицо,
        |	СоответствияФизическихЛицИОрганизаций.Организация КАК Организация
        |ПОМЕСТИТЬ ОрганизацииФизЛиц
        |ИЗ
        |	РегистрСведений.СоответствияФизическихЛицИОрганизаций КАК СоответствияФизическихЛицИОрганизаций
        |ГДЕ
        |	СоответствияФизическихЛицИОрганизаций.Организация = &Организация
        |	И СоответствияФизическихЛицИОрганизаций.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_Тренеры
        |ИЗ
        |	ОрганизацииФизЛиц КАК ОрганизацииФизЛиц
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КадровыеИсторииТренеров.СрезПоследних(, ) КАК КадровыеИсторииТренеровСрезПоследних
        |		ПО ОрганизацииФизЛиц.ФизическоеЛицо = КадровыеИсторииТренеровСрезПоследних.Тренер.ФизическоеЛицо
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ПО (КадровыеИсторииТренеровСрезПоследних.Тренер = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер)
        |ГДЕ
        |	КадровыеИсторииТренеровСрезПоследних.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
        |	И КадровыеИсторииТренеровСрезПоследних.Тренер.СтатусТренера = ЗНАЧЕНИЕ(Перечисление.СтатусыТренеров.Работает)
        |	И КадровыеИсторииТренеровСрезПоследних.Период МЕЖДУ &НачалоПериода И &КонецПериода
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ВидыСпорта_Предв
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |ГДЕ
        |	(ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер, ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта) В
        |			(ВЫБРАТЬ
        |				ВТ_Тренеры.Тренер КАК Тренер,
        |				ВТ_Тренеры.ВидСпорта КАК ВидСпорта
        |			ИЗ
        |				ВТ_Тренеры КАК ВТ_Тренеры)
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	КоличествоВидовСпортаТренеровОстатки.Тренер,
        |	КоличествоВидовСпортаТренеровОстатки.ВидСпорта
        |ИЗ
        |	РегистрНакопления.КоличествоВидовСпортаТренеров.Остатки(
        |			,
        |			(Тренер, ВидСпорта) В
        |				(ВЫБРАТЬ
        |					ВТ_Тренеры.Тренер КАК Тренер,
        |					ВТ_Тренеры.ВидСпорта КАК ВидСпорта
        |				ИЗ
        |					ВТ_Тренеры КАК ВТ_Тренеры)) КАК КоличествоВидовСпортаТренеровОстатки
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВидыСпорта.Тренер) КАК Тренер,
        |	ВидыСпорта.ВидСпорта КАК ВидСпорта
        |ИЗ
        |	ВТ_ВидыСпорта_Предв КАК ВидыСпорта
        |
        |СГРУППИРОВАТЬ ПО
        |	ВидыСпорта.ВидСпорта";
    
    Запрос.УстановитьПараметр("Организация",Организация);
    Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(ТекущаяДатаСеанса()) - 1);
	Запрос.УстановитьПараметр("КонецПериода", КонецГода(ТекущаяДатаСеанса()));
    // }Рарус adilas #23447 -// }Рарус adilas #23447 -Тестирование релиза 1.0.0.5. РС Руководитель. Закладка "Виды спорта" 2021.12.24 2021.12.24
	
    РезультатЗапроса = Запрос.Выполнить();
    
    ДиаграммаКоличествоНаВидСпортаТренера.Обновление = Ложь;
    ДиаграммаКоличествоНаВидСпортаТренера.Очистить();
    ДиаграммаКоличествоНаВидСпортаТренера.АвтоТранспонирование = Ложь;
    Точка = ДиаграммаКоличествоНаВидСпортаТренера.УстановитьТочку("Тренер");
    
    ВыборкаВидСпорта = РезультатЗапроса.Выбрать();
    
    Пока ВыборкаВидСпорта.Следующий() Цикл
        Серия = ДиаграммаКоличествоНаВидСпортаТренера.УстановитьСерию(ВыборкаВидСпорта.ВидСпорта);
        Серия.Текст = ВыборкаВидСпорта.ВидСпорта;
        Серия.Расшифровка = ВыборкаВидСпорта.ВидСпорта;
        ДиаграммаКоличествоНаВидСпортаТренера.УстановитьЗначение(Точка, Серия, ВыборкаВидСпорта.Тренер, Серия.Расшифровка);
    КонецЦикла;
    
    ДиаграммаКоличествоНаВидСпортаТренера.АвтоТранспонирование = Истина;
    ДиаграммаКоличествоНаВидСпортаТренера.Обновление = Истина;
   
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеЭтапыСП(Организация)

    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен) КАК Спортсмен,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, Организация = &Организация) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
        |		ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен = СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен
        |ГДЕ
        |	ВЫБОР
        |			КОГДА СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
        |				ТОГДА ИСТИНА
        |			ИНАЧЕ ЛОЖЬ
        |		КОНЕЦ
        |
        |СГРУППИРОВАТЬ ПО
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап";
    
    Запрос.УстановитьПараметр("Организация",Организация);
    
    РезультатЗапроса = Запрос.Выполнить();
	
    КолСпортсменовПоЭтапамСП.Очистить();
	
    ДиаграммаКоличествоНаЭтапыСП.Обновление = Ложь;
	ДиаграммаКоличествоНаЭтапыСП.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Лево;
    ДиаграммаКоличествоНаЭтапыСП.Очистить();
    ДиаграммаКоличествоНаЭтапыСП.АвтоТранспонирование = Ложь;
    Точка = ДиаграммаКоличествоНаЭтапыСП.УстановитьТочку("Спортсмен");
    
    ВыборкаЭтапСП = РезультатЗапроса.Выбрать();
    
    Пока ВыборкаЭтапСП.Следующий() Цикл
        Серия = ДиаграммаКоличествоНаЭтапыСП.УстановитьСерию(ВыборкаЭтапСП.Этап);
        Серия.Текст = ВыборкаЭтапСП.Этап;
        Серия.Расшифровка = ВыборкаЭтапСП.Этап;
        ДиаграммаКоличествоНаЭтапыСП.УстановитьЗначение(Точка, Серия, ВыборкаЭтапСП.Спортсмен, Серия.Расшифровка);
		
		строка = КолСпортсменовПоЭтапамСП.Добавить();
		Строка.Этап = ВыборкаЭтапСП.Этап;
		Строка.Количество = ВыборкаЭтапСП.Спортсмен;
    КонецЦикла;
    
    ДиаграммаКоличествоНаЭтапыСП.АвтоТранспонирование = Истина;
    ДиаграммаКоличествоНаЭтапыСП.Обновление = Истина;
   
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеЭтапыСпортивнойПодготовки(Организация)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен) КАК Спортсмен,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |
        |СГРУППИРОВАТЬ ПО
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта";
    
    Запрос.УстановитьПараметр("Организация", Организация);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ДиаграммаЭтапыПодготовки.Обновление = Ложь;
    ДиаграммаЭтапыПодготовки.Очистить();
    ДиаграммаЭтапыПодготовки.АвтоТранспонирование = Ложь;
    Точка = ДиаграммаЭтапыПодготовки.УстановитьТочку("Спортсмен");
    
    ВыборкаЭтап = РезультатЗапроса.Выбрать();
    
    Пока ВыборкаЭтап.Следующий() Цикл
        Серия = ДиаграммаЭтапыПодготовки.УстановитьСерию(ВыборкаЭтап.ВидСпорта);
        Серия.Текст = ВыборкаЭтап.ВидСпорта;
        Серия.Расшифровка = ВыборкаЭтап.ВидСпорта;
        ДиаграммаЭтапыПодготовки.УстановитьЗначение(Точка, Серия, ВыборкаЭтап.Спортсмен, Серия.Расшифровка);
    КонецЦикла;
    
    ДиаграммаЭтапыПодготовки.АвтоТранспонирование = Истина;
    ДиаграммаЭтапыПодготовки.Обновление = Истина;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеСпортсменовПоГодам(Организация)
	
	// {Рарус adilas #- -Sonar 2021.06.29
    Дата1 = НачалоГода(ТекущаяДатаСеанса());
    Дата2 = НачалоГода(Дата1-1);
    Дата3 = НачалоГода(Дата2-1);
    Дата4 = НачалоГода(Дата3-1);
    Дата5 = НачалоГода(Дата4-1);
    
    //{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
    // Данный фрагмент построен конструктором.
    // При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	СоставГруппыСрезПоследних.ВидСпорта КАК ВидСпорта,
        |	СоставГруппыСрезПоследних.Спортсмен КАК Спортсмен,
        |	ГОД(&Дата1) КАК Год
        |ИЗ
        |	РегистрСведений.СоставГруппы.СрезПоследних(&Дата1, Организация = &Организация) КАК СоставГруппыСрезПоследних
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	СоставГруппыСрезПоследних.ВидСпорта,
        |	СоставГруппыСрезПоследних.Спортсмен,
        |	ГОД(&Дата2)
        |ИЗ
        |	РегистрСведений.СоставГруппы.СрезПоследних(&Дата2, Организация = &Организация) КАК СоставГруппыСрезПоследних
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	СоставГруппыСрезПоследних.ВидСпорта,
        |	СоставГруппыСрезПоследних.Спортсмен,
        |	ГОД(&Дата3)
        |ИЗ
        |	РегистрСведений.СоставГруппы.СрезПоследних(&Дата3, Организация = &Организация) КАК СоставГруппыСрезПоследних
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	СоставГруппыСрезПоследних.ВидСпорта,
        |	СоставГруппыСрезПоследних.Спортсмен,
        |	ГОД(&Дата4)
        |ИЗ
        |	РегистрСведений.СоставГруппы.СрезПоследних(&Дата4, Организация = &Организация) КАК СоставГруппыСрезПоследних
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	СоставГруппыСрезПоследних.ВидСпорта,
        |	СоставГруппыСрезПоследних.Спортсмен,
        |	ГОД(&Дата5)
        |ИЗ
        |	РегистрСведений.СоставГруппы.СрезПоследних(&Дата5, Организация = &Организация) КАК СоставГруппыСрезПоследних
        |
        |УПОРЯДОЧИТЬ ПО
        |	Год
        |ИТОГИ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Спортсмен)
        |ПО
        |	ВидСпорта,
        |	Год";
    
    Запрос.УстановитьПараметр("Дата1", Дата1);
    Запрос.УстановитьПараметр("Дата2", Дата2);
    Запрос.УстановитьПараметр("Дата3", Дата3);
    Запрос.УстановитьПараметр("Дата4", Дата4);
    Запрос.УстановитьПараметр("Дата5", Дата5);
    Запрос.УстановитьПараметр("Организация", Организация);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ДиаграммаСпортсменыПоГодам.Обновление = Ложь;
    ДиаграммаСпортсменыПоГодам.Очистить();
    ДиаграммаСпортсменыПоГодам.АвтоТранспонирование = Ложь;
    
    ВыборкаВидСпорта = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    
    Пока ВыборкаВидСпорта.Следующий() Цикл
        Серия = ДиаграммаСпортсменыПоГодам.УстановитьСерию(ВыборкаВидСпорта.ВидСпорта);
        Серия.Текст = ВыборкаВидСпорта.ВидСпорта;
        Серия.Расшифровка = ВыборкаВидСпорта.ВидСпорта;
    
        ВыборкаГод = ВыборкаВидСпорта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    
        Пока ВыборкаГод.Следующий() Цикл
            Точка = ДиаграммаСпортсменыПоГодам.УстановитьТочку(ВыборкаГод.Год);
            Точка.Текст = ВыборкаГод.Год;
            Точка.Расшифровка = ВыборкаГод.Год;
            ДиаграммаСпортсменыПоГодам.УстановитьЗначение(Точка, Серия, ВыборкаГод.Спортсмен);
        КонецЦикла;
    КонецЦикла;
    
    ДиаграммаСпортсменыПоГодам.АвтоТранспонирование = Истина;
    ДиаграммаСпортсменыПоГодам.Обновление = Истина;
    

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДанныеТренерыВидыСпорта(Организация)
    // Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеСпортсменовПоГодамТаблица(Организация)
	
	ТаблицаКоличествоСпортсменовПоГодам.Очистить();
	
	Дата1 = КонецГода(ТекущаяДатаСеанса());        
    Дата2 = НачалоГода(ТекущаяДатаСеанса())-1;     
    Дата3 = НачалоГода(Дата2)-1;
	// {Рарус adilas #23447 -// }Рарус adilas #23447 -Тестирование релиза 1.0.0.5. РС Руководитель. Закладка "Виды спорта" 2021.12.24 2021.12.24
	Дата4 = НачалоГода(Дата3) - 1;                  
	
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Организация КАК Организация,
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен,
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_СоставУчащихсяНаДату3
        |ИЗ
        |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, Организация = &Организация) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
        |ГДЕ
        |	(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения МЕЖДУ &Дата4 И &Дата3
        |			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
        |
        |ИНДЕКСИРОВАТЬ ПО
        |	ВидСпорта,
        |	Организация,
        |	Спортсмен
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_СоставУчащихсяНаДату3.Спортсмен) КАК Спортсмен,
        |	ВТ_СоставУчащихсяНаДату3.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ЗаДату3
        |ИЗ
        |	ВТ_СоставУчащихсяНаДату3 КАК ВТ_СоставУчащихсяНаДату3
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ПО ВТ_СоставУчащихсяНаДату3.Спортсмен = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен
        |			И ВТ_СоставУчащихсяНаДату3.ВидСпорта = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_СоставУчащихсяНаДату3.ВидСпорта
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Организация КАК Организация,
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен,
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_СоставУчащихсяНаДату2
        |ИЗ
        |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, Организация = &Организация) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
        |ГДЕ
        |	(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения МЕЖДУ &Дата3 И &Дата2
        |			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
        |
        |ИНДЕКСИРОВАТЬ ПО
        |	ВидСпорта,
        |	Организация,
        |	Спортсмен
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_СоставУчащихсяНаДату2.Спортсмен) КАК Спортсмен,
        |	ВТ_СоставУчащихсяНаДату2.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ЗаДату2
        |ИЗ
        |	ВТ_СоставУчащихсяНаДату2 КАК ВТ_СоставУчащихсяНаДату2
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ПО ВТ_СоставУчащихсяНаДату2.Спортсмен = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен
        |			И ВТ_СоставУчащихсяНаДату2.ВидСпорта = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_СоставУчащихсяНаДату2.ВидСпорта
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Организация КАК Организация,
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен,
        |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_СоставУчащихсяНаДату1
        |ИЗ
        |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, Организация = &Организация) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
        |ГДЕ
        |	(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения МЕЖДУ &Дата2 И &Дата1
        |			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
        |
        |ИНДЕКСИРОВАТЬ ПО
        |	ВидСпорта,
        |	Организация,
        |	Спортсмен
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_СоставУчащихсяНаДату1.Спортсмен) КАК Спортсмен,
        |	ВТ_СоставУчащихсяНаДату1.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ЗаДату1
        |ИЗ
        |	ВТ_СоставУчащихсяНаДату1 КАК ВТ_СоставУчащихсяНаДату1
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ПО ВТ_СоставУчащихсяНаДату1.Спортсмен = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен
        |			И ВТ_СоставУчащихсяНаДату1.ВидСпорта = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_СоставУчащихсяНаДату1.ВидСпорта
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Организация КАК Организация,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен КАК Спортсмен,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер
        |ПОМЕСТИТЬ ВТ_СоставУчащихсяДата1ДляВидовСпорта
        |ИЗ
        |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(&Дата1, Организация = &Организация) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(&Дата1, Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ПО СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Организация = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Организация
        |			И СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта
        |			И СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен
        |ГДЕ
        |	(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения > &Дата1
        |			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ВидыСпорта
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(
        |			&Дата1,
        |			Организация = &Организация
        |				И (Спортсмен, ВидСпорта) В
        |					(ВЫБРАТЬ
        |						ВТ_СоставУчащихсяДата1ДляВидовСпорта.Спортсмен КАК Спортсмен,
        |						ВТ_СоставУчащихсяДата1ДляВидовСпорта.ВидСпорта КАК ВидСпорта
        |					ИЗ
        |						ВТ_СоставУчащихсяДата1ДляВидовСпорта КАК ВТ_СоставУчащихсяДата1ДляВидовСпорта)) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ РАЗЛИЧНЫЕ
        |	СоставГруппыСрезПоследних.ВидСпорта
        |ИЗ
        |	РегистрСведений.СоставГруппы.СрезПоследних(
        |			&Дата1,
        |			Организация = &Организация
        |				И (Спортсмен, ВидСпорта) В
        |					(ВЫБРАТЬ
        |						ВТ_СоставУчащихсяДата1ДляВидовСпорта.Спортсмен КАК Спортсмен,
        |						ВТ_СоставУчащихсяДата1ДляВидовСпорта.ВидСпорта КАК ВидСпорта
        |					ИЗ
        |						ВТ_СоставУчащихсяДата1ДляВидовСпорта КАК ВТ_СоставУчащихсяДата1ДляВидовСпорта)) КАК СоставГруппыСрезПоследних
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ РАЗЛИЧНЫЕ
        |	КоличествоВидовСпортаТренеровОстатки.ВидСпорта
        |ИЗ
        |	РегистрНакопления.КоличествоВидовСпортаТренеров.Остатки(
        |			&Дата1,
        |			Организация = &Организация
        |				И (Организация, ВидСпорта, Тренер) В
        |					(ВЫБРАТЬ
        |						ВТ_СоставУчащихсяДата1ДляВидовСпорта.Организация КАК Организация,
        |						ВТ_СоставУчащихсяДата1ДляВидовСпорта.ВидСпорта КАК ВидСпорта,
        |						ВТ_СоставУчащихсяДата1ДляВидовСпорта.Тренер КАК Тренер
        |					ИЗ
        |						ВТ_СоставУчащихсяДата1ДляВидовСпорта КАК ВТ_СоставУчащихсяДата1ДляВидовСпорта)) КАК КоличествоВидовСпортаТренеровОстатки
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	МАКСИМУМ(ВТ_ЗаДату1.Спортсмен) КАК Спортсмен1,
        |	МАКСИМУМ(ВТ_ЗаДату2.Спортсмен) КАК Спортсмен2,
        |	МАКСИМУМ(ВТ_ЗаДату3.Спортсмен) КАК Спортсмен3,
        |	ВТ_ВидыСпорта.ВидСпорта КАК ВидСпорта
        |ИЗ
        |	ВТ_ВидыСпорта КАК ВТ_ВидыСпорта
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаДату1 КАК ВТ_ЗаДату1
        |		ПО ВТ_ВидыСпорта.ВидСпорта = ВТ_ЗаДату1.ВидСпорта
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаДату2 КАК ВТ_ЗаДату2
        |		ПО ВТ_ВидыСпорта.ВидСпорта = ВТ_ЗаДату2.ВидСпорта
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаДату3 КАК ВТ_ЗаДату3
        |		ПО ВТ_ВидыСпорта.ВидСпорта = ВТ_ЗаДату3.ВидСпорта
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_ВидыСпорта.ВидСпорта";
    // }Рарус adilas #23447 -// }Рарус adilas #23447 -Тестирование релиза 1.0.0.5. РС Руководитель. Закладка "Виды спорта" 2021.12.24 2021.12.24
	
    Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("Дата3", Дата3);
	// {Рарус adilas #23447 -// }Рарус adilas #23447 -Тестирование релиза 1.0.0.5. РС Руководитель. Закладка "Виды спорта" 2021.12.24 2021.12.24
	Запрос.УстановитьПараметр("Дата4", Дата4);
    // }Рарус adilas #23447 -// }Рарус adilas #23447 -Тестирование релиза 1.0.0.5. РС Руководитель. Закладка "Виды спорта" 2021.12.24 2021.12.24
	
    РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаВидСпорта = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	УстановитьДатыТаблицы();
	
	Пока ВыборкаВидСпорта.Следующий() Цикл
	   Строка = ТаблицаКоличествоСпортсменовПоГодам.Добавить();
	   Строка.ВидСпорта = ВыборкаВидСпорта.ВидСпорта;
	   Строка.Дата3 = ВыборкаВидСпорта.Спортсмен3;
	   Строка.Дата2 = ВыборкаВидСпорта.Спортсмен2;
	   Строка.Дата1 = ВыборкаВидСпорта.Спортсмен1;
   КонецЦикла;
   
КонецПроцедуры

// {Рарус ivaart IN-18903 Таблица спортсмены на этапах по годам 2021.07.30
&НаСервере
Процедура ЗаполнитьДанныеЭтаповПоГодамТаблица(Организация)
	
	ТаблицаКоличествоСпортсменовНаЭтапахПоГодам.Очистить();
	
   	
    Дата1 = НачалоГода(ТекущаяДатаСеанса());
    Дата2 = НачалоГода(Дата1-1);
    Дата3 = НачалоГода(Дата2-1);
	
	элементы.ТаблицаКоличествоСпортсменовПоГодамСпортсменыДата3.Заголовок = Формат(Год(Дата3),"ЧГ=");
	элементы.ТаблицаКоличествоСпортсменовПоГодамСпортсменыДата2.Заголовок = Формат(Год(Дата2),"ЧГ=");
	элементы.ТаблицаКоличествоСпортсменовПоГодамСпортсменыДата1.Заголовок = Формат(Год(Дата1),"ЧГ=");
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен) КАК Спортсмен,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап
        |ПОМЕСТИТЬ ЗаДату3
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(КОНЕЦПЕРИОДА(&Дата3, ГОД), Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(КОНЕЦПЕРИОДА(&Дата3, ГОД), Организация = &Организация) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
        |		ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен = СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен
        |ГДЕ
        |	ВЫБОР
        |			КОГДА СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
        |				ТОГДА ИСТИНА
        |			ИНАЧЕ ЛОЖЬ
        |		КОНЕЦ
        |
        |СГРУППИРОВАТЬ ПО
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен) КАК Спортсмен,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап
        |ПОМЕСТИТЬ ЗаДату2
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(КОНЕЦПЕРИОДА(&Дата2, ГОД), Организация = &организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(КОНЕЦПЕРИОДА(&Дата2, ГОД), Организация = &организация) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
        |		ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен = СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен
        |ГДЕ
        |	ВЫБОР
        |			КОГДА СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
        |				ТОГДА ИСТИНА
        |			ИНАЧЕ ЛОЖЬ
        |		КОНЕЦ
        |
        |СГРУППИРОВАТЬ ПО
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен) КАК Спортсмен,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап
        |ПОМЕСТИТЬ ЗаДату1
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(КОНЕЦПЕРИОДА(&Дата1, ГОД), Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
        |		ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен = СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен
        |ГДЕ
        |	ВЫБОР
        |			КОГДА СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
        |				ТОГДА ИСТИНА
        |			ИНАЧЕ ЛОЖЬ
        |		КОНЕЦ
        |
        |СГРУППИРОВАТЬ ПО
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	МАКСИМУМ(ЗаДату1.Спортсмен) КАК Спортсмен1,
        |	МАКСИМУМ(ЗаДату2.Спортсмен) КАК Спортсмен2,
        |	МАКСИМУМ(ЗаДату31.Спортсмен) КАК Спортсмен3,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(КОНЕЦПЕРИОДА(&Дата1, ГОД), Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ЛЕВОЕ СОЕДИНЕНИЕ ЗаДату3 КАК ЗаДату31
        |		ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап = ЗаДату31.Этап
        |		ЛЕВОЕ СОЕДИНЕНИЕ ЗаДату2 КАК ЗаДату2
        |		ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап = ЗаДату2.Этап
        |		ЛЕВОЕ СОЕДИНЕНИЕ ЗаДату1 КАК ЗаДату1
        |		ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап = ЗаДату1.Этап
        |
        |СГРУППИРОВАТЬ ПО
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап";
    
    Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Дата1",Дата1);
	Запрос.УстановитьПараметр("Дата2",Дата2);
	Запрос.УстановитьПараметр("Дата3",Дата3);
    
    РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаВидСпорта = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	УстановитьДатыТаблицы();
	
	Пока ВыборкаВидСпорта.Следующий() Цикл
	   Строка = ТаблицаКоличествоСпортсменовНаЭтапахПоГодам.Добавить();
	   Строка.Этап = ВыборкаВидСпорта.Этап;
	   Строка.Дата3 = ВыборкаВидСпорта.Спортсмен3;
	   Строка.Дата2 = ВыборкаВидСпорта.Спортсмен2;
	   Строка.Дата1 = ВыборкаВидСпорта.Спортсмен1;
	КонецЦикла;
КонецПроцедуры
// }Рарус ivaart IN-18903 Таблица спортсмены на этапах по годам 2021.07.30

&НаСервере
Процедура ЗаполнитьДанныеТренеровПоГодамТаблица(Организация)
	
	ТаблицаКоличествоТренеровПоГодам.Очистить();
	
	// {Рарус adilas #23447 -// }Рарус adilas #23447 -Тестирование релиза 1.0.0.5. РС Руководитель. Закладка "Виды спорта" 2021.12.24 2021.12.24
   	Дата1 = КонецГода(ТекущаяДатаСеанса());        
    Дата2 = НачалоГода(ТекущаяДатаСеанса()) - 1;     
    Дата3 = НачалоГода(Дата2) - 1;
	Дата4 = НачалоГода(Дата3) - 1;
	
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	СоответствияФизическихЛицИОрганизаций.ФизическоеЛицо КАК ФизическоеЛицо,
        |	СоответствияФизическихЛицИОрганизаций.Организация КАК Организация
        |ПОМЕСТИТЬ ОрганизацииФизЛиц
        |ИЗ
        |	РегистрСведений.СоответствияФизическихЛицИОрганизаций КАК СоответствияФизическихЛицИОрганизаций
        |ГДЕ
        |	СоответствияФизическихЛицИОрганизаций.Организация = &Организация
        |	И СоответствияФизическихЛицИОрганизаций.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ТренерыНаДату3
        |ИЗ
        |	ОрганизацииФизЛиц КАК ОрганизацииФизЛиц
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КадровыеИсторииТренеров.СрезПоследних(, ) КАК КадровыеИсторииТренеровСрезПоследних
        |		ПО ОрганизацииФизЛиц.ФизическоеЛицо = КадровыеИсторииТренеровСрезПоследних.Тренер.ФизическоеЛицо
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ПО (КадровыеИсторииТренеровСрезПоследних.Тренер = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер)
        |ГДЕ
        |	КадровыеИсторииТренеровСрезПоследних.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
        |	И КадровыеИсторииТренеровСрезПоследних.Тренер.СтатусТренера = ЗНАЧЕНИЕ(Перечисление.СтатусыТренеров.Работает)
        |	И КадровыеИсторииТренеровСрезПоследних.Период МЕЖДУ &Дата4 И &Дата3
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ВидыСпорта_ПредвНаДату3
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |ГДЕ
        |	(ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер, ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта) В
        |			(ВЫБРАТЬ
        |				ВТ_ТренерыНаДату3.Тренер КАК Тренер,
        |				ВТ_ТренерыНаДату3.ВидСпорта КАК ВидСпорта
        |			ИЗ
        |				ВТ_ТренерыНаДату3 КАК ВТ_ТренерыНаДату3)
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	КоличествоВидовСпортаТренеровОстатки.Тренер,
        |	КоличествоВидовСпортаТренеровОстатки.ВидСпорта
        |ИЗ
        |	РегистрНакопления.КоличествоВидовСпортаТренеров.Остатки(
        |			,
        |			(Тренер, ВидСпорта) В
        |				(ВЫБРАТЬ
        |					ВТ_ТренерыНаДату3.Тренер КАК Тренер,
        |					ВТ_ТренерыНаДату3.ВидСпорта КАК ВидСпорта
        |				ИЗ
        |					ВТ_ТренерыНаДату3 КАК ВТ_ТренерыНаДату3)) КАК КоличествоВидовСпортаТренеровОстатки
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ВидыСпорта_ПредвНаДату3.Тренер) КАК Тренер,
        |	ВТ_ВидыСпорта_ПредвНаДату3.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ИтогНаДату3
        |ИЗ
        |	ВТ_ВидыСпорта_ПредвНаДату3 КАК ВТ_ВидыСпорта_ПредвНаДату3
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_ВидыСпорта_ПредвНаДату3.ВидСпорта
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ТренерыНаДату2
        |ИЗ
        |	ОрганизацииФизЛиц КАК ОрганизацииФизЛиц
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КадровыеИсторииТренеров.СрезПоследних(, ) КАК КадровыеИсторииТренеровСрезПоследних
        |		ПО ОрганизацииФизЛиц.ФизическоеЛицо = КадровыеИсторииТренеровСрезПоследних.Тренер.ФизическоеЛицо
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ПО (КадровыеИсторииТренеровСрезПоследних.Тренер = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер)
        |ГДЕ
        |	КадровыеИсторииТренеровСрезПоследних.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
        |	И КадровыеИсторииТренеровСрезПоследних.Тренер.СтатусТренера = ЗНАЧЕНИЕ(Перечисление.СтатусыТренеров.Работает)
        |	И КадровыеИсторииТренеровСрезПоследних.Период МЕЖДУ &Дата3 И &Дата2
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ВидыСпорта_ПредвНаДату2
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |ГДЕ
        |	(ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер, ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта) В
        |			(ВЫБРАТЬ
        |				ВТ_ТренерыНаДату2.Тренер КАК Тренер,
        |				ВТ_ТренерыНаДату2.ВидСпорта КАК ВидСпорта
        |			ИЗ
        |				ВТ_ТренерыНаДату2 КАК ВТ_ТренерыНаДату2)
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	КоличествоВидовСпортаТренеровОстатки.Тренер,
        |	КоличествоВидовСпортаТренеровОстатки.ВидСпорта
        |ИЗ
        |	РегистрНакопления.КоличествоВидовСпортаТренеров.Остатки(
        |			,
        |			(Тренер, ВидСпорта) В
        |				(ВЫБРАТЬ
        |					ВТ_ТренерыНаДату2.Тренер КАК Тренер,
        |					ВТ_ТренерыНаДату2.ВидСпорта КАК ВидСпорта
        |				ИЗ
        |					ВТ_ТренерыНаДату2 КАК ВТ_ТренерыНаДату2)) КАК КоличествоВидовСпортаТренеровОстатки
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ВидыСпорта_ПредвНаДату2.Тренер) КАК Тренер,
        |	ВТ_ВидыСпорта_ПредвНаДату2.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ИтогНаДату2
        |ИЗ
        |	ВТ_ВидыСпорта_ПредвНаДату2 КАК ВТ_ВидыСпорта_ПредвНаДату2
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_ВидыСпорта_ПредвНаДату2.ВидСпорта
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ТренерыНаДату1
        |ИЗ
        |	ОрганизацииФизЛиц КАК ОрганизацииФизЛиц
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КадровыеИсторииТренеров.СрезПоследних(, ) КАК КадровыеИсторииТренеровСрезПоследних
        |		ПО ОрганизацииФизЛиц.ФизическоеЛицо = КадровыеИсторииТренеровСрезПоследних.Тренер.ФизическоеЛицо
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ПО (КадровыеИсторииТренеровСрезПоследних.Тренер = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер)
        |ГДЕ
        |	КадровыеИсторииТренеровСрезПоследних.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
        |	И КадровыеИсторииТренеровСрезПоследних.Тренер.СтатусТренера = ЗНАЧЕНИЕ(Перечисление.СтатусыТренеров.Работает)
        |	И КадровыеИсторииТренеровСрезПоследних.Период МЕЖДУ &Дата2 И &Дата1
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ВидыСпорта_ПредвНаДату1
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |ГДЕ
        |	(ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер, ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта) В
        |			(ВЫБРАТЬ
        |				ВТ_ТренерыНаДату1.Тренер КАК Тренер,
        |				ВТ_ТренерыНаДату1.ВидСпорта КАК ВидСпорта
        |			ИЗ
        |				ВТ_ТренерыНаДату1 КАК ВТ_ТренерыНаДату1)
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	КоличествоВидовСпортаТренеровОстатки.Тренер,
        |	КоличествоВидовСпортаТренеровОстатки.ВидСпорта
        |ИЗ
        |	РегистрНакопления.КоличествоВидовСпортаТренеров.Остатки(
        |			,
        |			(Тренер, ВидСпорта) В
        |				(ВЫБРАТЬ
        |					ВТ_ТренерыНаДату1.Тренер КАК Тренер,
        |					ВТ_ТренерыНаДату1.ВидСпорта КАК ВидСпорта
        |				ИЗ
        |					ВТ_ТренерыНаДату1 КАК ВТ_ТренерыНаДату1)) КАК КоличествоВидовСпортаТренеровОстатки
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ВидыСпорта_ПредвНаДату1.Тренер) КАК Тренер,
        |	ВТ_ВидыСпорта_ПредвНаДату1.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ИтогНаДату1
        |ИЗ
        |	ВТ_ВидыСпорта_ПредвНаДату1 КАК ВТ_ВидыСпорта_ПредвНаДату1
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_ВидыСпорта_ПредвНаДату1.ВидСпорта
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер,
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ТренерыОбщие
        |ИЗ
        |	ОрганизацииФизЛиц КАК ОрганизацииФизЛиц
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КадровыеИсторииТренеров.СрезПоследних(&Дата1, ) КАК КадровыеИсторииТренеровСрезПоследних
        |		ПО ОрганизацииФизЛиц.ФизическоеЛицо = КадровыеИсторииТренеровСрезПоследних.Тренер.ФизическоеЛицо
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(&Дата1, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |		ПО (КадровыеИсторииТренеровСрезПоследних.Тренер = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер)
        |ГДЕ
        |	КадровыеИсторииТренеровСрезПоследних.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
        |	И КадровыеИсторииТренеровСрезПоследних.Тренер.СтатусТренера = ЗНАЧЕНИЕ(Перечисление.СтатусыТренеров.Работает)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ВидыСпорта_ПредвОбщие
        |ИЗ
        |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(&Дата1, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
        |ГДЕ
        |	(ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер, ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта) В
        |			(ВЫБРАТЬ
        |				ВТ_ТренерыОбщие.Тренер КАК Тренер,
        |				ВТ_ТренерыОбщие.ВидСпорта КАК ВидСпорта
        |			ИЗ
        |				ВТ_ТренерыОбщие КАК ВТ_ТренерыОбщие)
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	КоличествоВидовСпортаТренеровОстатки.ВидСпорта
        |ИЗ
        |	РегистрНакопления.КоличествоВидовСпортаТренеров.Остатки(
        |			&Дата1,
        |			(Тренер, ВидСпорта) В
        |				(ВЫБРАТЬ
        |					ВТ_ТренерыОбщие.Тренер КАК Тренер,
        |					ВТ_ТренерыОбщие.ВидСпорта КАК ВидСпорта
        |				ИЗ
        |					ВТ_ТренерыОбщие КАК ВТ_ТренерыОбщие)) КАК КоличествоВидовСпортаТренеровОстатки
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ВТ_ВидыСпорта_ПредвОбщие.ВидСпорта КАК ВидСпорта
        |ПОМЕСТИТЬ ВТ_ВидыСпорта
        |ИЗ
        |	ВТ_ВидыСпорта_ПредвОбщие КАК ВТ_ВидыСпорта_ПредвОбщие
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ВидыСпорта.ВидСпорта КАК ВидСпорта,
        |	МАКСИМУМ(ВТ_ИтогНаДату1.Тренер) КАК Тренер1,
        |	МАКСИМУМ(ВТ_ИтогНаДату2.Тренер) КАК Тренер2,
        |	МАКСИМУМ(ВТ_ИтогНаДату3.Тренер) КАК Тренер3
        |ИЗ
        |	ВТ_ВидыСпорта КАК ВТ_ВидыСпорта
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИтогНаДату1 КАК ВТ_ИтогНаДату1
        |		ПО ВТ_ВидыСпорта.ВидСпорта = ВТ_ИтогНаДату1.ВидСпорта
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИтогНаДату2 КАК ВТ_ИтогНаДату2
        |		ПО ВТ_ВидыСпорта.ВидСпорта = ВТ_ИтогНаДату2.ВидСпорта
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИтогНаДату3 КАК ВТ_ИтогНаДату3
        |		ПО ВТ_ВидыСпорта.ВидСпорта = ВТ_ИтогНаДату3.ВидСпорта
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_ВидыСпорта.ВидСпорта";
	// }Рарус adilas #23447 -// }Рарус adilas #23447 -Тестирование релиза 1.0.0.5. РС Руководитель. Закладка "Виды спорта" 2021.12.24 2021.12.24	
	
    Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Дата1",Дата1);
	Запрос.УстановитьПараметр("Дата2",Дата2);         
	Запрос.УстановитьПараметр("Дата3",Дата3);
	// {Рарус adilas #23447 -// }Рарус adilas #23447 -Тестирование релиза 1.0.0.5. РС Руководитель. Закладка "Виды спорта" 2021.12.24 2021.12.24
	Запрос.УстановитьПараметр("Дата4", Дата4);
	// }Рарус adilas #23447 -// }Рарус adilas #23447 -Тестирование релиза 1.0.0.5. РС Руководитель. Закладка "Виды спорта" 2021.12.24 2021.12.24
    
    РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаВидСпорта = РезультатЗапроса.Выбрать();
	
	УстановитьДатыТаблицы();
	
	Пока ВыборкаВидСпорта.Следующий() Цикл
	   Строка = ТаблицаКоличествоТренеровПоГодам.Добавить();
	   Строка.ВидСпорта = ВыборкаВидСпорта.ВидСпорта;
	   Строка.Дата3 = ВыборкаВидСпорта.Тренер3;
	   Строка.Дата2 = ВыборкаВидСпорта.Тренер2;
	   Строка.Дата1 = ВыборкаВидСпорта.Тренер1;
   КонецЦикла;
   
КонецПроцедуры

//Меняет название строк таблиц по годам на актуальные
&НаСервере
Процедура УстановитьДатыТаблицы();
	
	// {Рарус adilas #- -Sonar 2021.06.29
    Дата1 = НачалоГода(ТекущаяДатаСеанса());
    Дата2 = НачалоГода(Дата1-1);
    Дата3 = НачалоГода(Дата2-1);
	
	Элементы.ТаблицаКоличествоСпортсменовПоГодамДата1.Заголовок = Формат(Год(Дата1),"ЧГ=");;
	Элементы.ТаблицаКоличествоСпортсменовПоГодамДата2.Заголовок = Формат(Год(Дата2),"ЧГ=");;
	Элементы.ТаблицаКоличествоСпортсменовПоГодамДата3.Заголовок = Формат(Год(Дата3),"ЧГ=");;
	
	Элементы.ТаблицаКоличествоТренеровПоГодамДата1.Заголовок = Формат(Год(Дата1),"ЧГ=");;
	Элементы.ТаблицаКоличествоТренеровПоГодамДата2.Заголовок = Формат(Год(Дата2),"ЧГ=");;
	Элементы.ТаблицаКоличествоТренеровПоГодамДата3.Заголовок = Формат(Год(Дата3),"ЧГ=");;
КонецПроцедуры

// {Рарус adilas #22470 -Кнопки. РС Руководитель. 2021.11.24
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияВидыСпортаНажатие(Элемент)
	
	Если НЕ Элемент = Неопределено Тогда
		
		Если Элемент.Имя = ТекущийРаздел Тогда
			Возврат;
		КонецЕсли;
		
		Элементы.ДекорацияВидыСпортаАктивная.Видимость = Истина;	
		Элементы.ДекорацияСпортсмены.Видимость = Истина;
		Элементы.ДекорацияТренеры.Видимость = Истина;
		Элементы.ДекорацияСпортивныеОбъекты.Видимость = Истина;
	    Элементы.ДекорацияОтчеты.Видимость = Истина;
		
		Элементы.ДекорацияВидыСпорта.Видимость = Ложь;	
		Элементы.ДекорацияСпортсменыАктивная.Видимость = Ложь;
		Элементы.ДекорацияТренерыАктивная.Видимость = Ложь;
		Элементы.ДекорацияСпортивныеОбъектыАктивная.Видимость = Ложь;
	    Элементы.ДекорацияОтчетыАктивная.Видимость = Ложь;
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВидыСпорта;
		ТекущийРаздел = "ВидыСпорта";
		
	Иначе
		
		Элементы.ДекорацияВидыСпортаАктивная.Видимость = Истина;
		Элементы.ДекорацияСпортсмены.Видимость = Истина;
		Элементы.ДекорацияТренеры.Видимость = Истина;
		Элементы.ДекорацияСпортивныеОбъекты.Видимость = Истина;
	    Элементы.ДекорацияОтчеты.Видимость = Истина;
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВидыСпорта;
		ТекущийРаздел = "ВидыСпорта";
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВидыСпортаАктивнаяНажатие(Элемент)
	
	Если Элемент.Имя = ТекущийРаздел Тогда
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСпортсменыНажатие(Элемент)
	
	Элементы.ДекорацияВидыСпортаАктивная.Видимость = Ложь;
	Элементы.ДекорацияВидыСпорта.Видимость = Истина;
	
	Элементы.ДекорацияСпортсменыАктивная.Видимость = Истина;
	Элементы.ДекорацияСпортсмены.Видимость = Ложь;

	Элементы.ДекорацияТренерыАктивная.Видимость = Ложь;
	Элементы.ДекорацияТренеры.Видимость = Истина;
	
	Элементы.ДекорацияСпортивныеОбъектыАктивная.Видимость = Ложь;
	Элементы.ДекорацияСпортивныеОбъекты.Видимость = Истина;
	
	Элементы.ДекорацияОтчетыАктивная.Видимость = Ложь;
	Элементы.ДекорацияОтчеты.Видимость = Истина;
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСпортсмены;
	
	ТекущийРаздел = "Спортсмены";
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСпортсменыАктивнаяНажатие(Элемент)

	Если Элемент.Имя = ТекущийРаздел Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияТренерыНажатие(Элемент)
	
	Если Элемент.Имя = ТекущийРаздел Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ДекорацияВидыСпортаАктивная.Видимость = Ложь;
	Элементы.ДекорацияВидыСпорта.Видимость = Истина;
	
	Элементы.ДекорацияСпортсменыАктивная.Видимость = Ложь;
	Элементы.ДекорацияСпортсмены.Видимость = Истина;

	Элементы.ДекорацияТренерыАктивная.Видимость = Истина;
	Элементы.ДекорацияТренеры.Видимость = Ложь;
	
	Элементы.ДекорацияСпортивныеОбъектыАктивная.Видимость = Ложь;
	Элементы.ДекорацияСпортивныеОбъекты.Видимость = Истина;
	
	Элементы.ДекорацияОтчетыАктивная.Видимость = Ложь;
	Элементы.ДекорацияОтчеты.Видимость = Истина;
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТренеры;
	
	ТекущийРаздел = "Тренеры";	
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияТренерыАктивнаяНажатие(Элемент)
	
	Если Элемент.Имя = ТекущийРаздел Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСпортивныеОбъектыНажатие(Элемент)

	Элементы.ДекорацияВидыСпортаАктивная.Видимость = Ложь;
	Элементы.ДекорацияВидыСпорта.Видимость = Истина;
	
	Элементы.ДекорацияСпортсменыАктивная.Видимость = Ложь;
	Элементы.ДекорацияСпортсмены.Видимость = Истина;

	Элементы.ДекорацияТренерыАктивная.Видимость = Ложь;
	Элементы.ДекорацияТренеры.Видимость = Истина;
	
	Элементы.ДекорацияСпортивныеОбъектыАктивная.Видимость = Истина;
	Элементы.ДекорацияСпортивныеОбъекты.Видимость = Ложь;
	
	Элементы.ДекорацияОтчетыАктивная.Видимость = Ложь;
	Элементы.ДекорацияОтчеты.Видимость = Истина;
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСпортивныеОбъекты;
	
	ТекущийРаздел = "СпортивныеОбъекты";	
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСпортивныеОбъектыАктивнаяНажатие(Элемент)
	
	Если Элемент.Имя = ТекущийРаздел Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтчетыНажатие(Элемент)
	
	Элементы.ДекорацияВидыСпортаАктивная.Видимость = Ложь;
	Элементы.ДекорацияВидыСпорта.Видимость = Истина;
	
	Элементы.ДекорацияСпортсменыАктивная.Видимость = Ложь;
	Элементы.ДекорацияСпортсмены.Видимость = Истина;

	Элементы.ДекорацияТренерыАктивная.Видимость = Ложь;
	Элементы.ДекорацияТренеры.Видимость = Истина;
	
	Элементы.ДекорацияСпортивныеОбъектыАктивная.Видимость = Ложь;
	Элементы.ДекорацияСпортивныеОбъекты.Видимость = Истина;
	
	Элементы.ДекорацияОтчетыАктивная.Видимость = Истина;
	Элементы.ДекорацияОтчеты.Видимость = Ложь;
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОтчёты;
	
	ТекущийРаздел = "Отчеты";
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтчетыАктивнаяНажатие(Элемент)
	
	Если Элемент.Имя = ТекущийРаздел Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
// }Рарус adilas #22470 -Кнопки. РС Руководитель. 2021.11.24

&НаКлиенте
Процедура АктуальныеСоревнования(Команда)
    ОткрытьФорму("Отчет.АктуальныйСписокСоревнований.Форма.ФормаОтчета");
КонецПроцедуры

&НаКлиенте
Процедура РазделСпортсмены(Команда)
    Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСпортсмены;
	ВыборАктивногоРаздела(Элементы.РазделСпортсмены);
КонецПроцедуры

&НаКлиенте
Процедура РазделТренеры(Команда)
    Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТренеры;
	ВыборАктивногоРаздела(Элементы.РазделТренеры);
КонецПроцедуры

&НаКлиенте
Процедура РазделВидыСпорта(Команда)
    Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВидыСпорта;
	ВыборАктивногоРаздела(Элементы.РазделВидыСпорта);
КонецПроцедуры

&НаКлиенте
Процедура РазделСпортивныеОбъекты(Команда)
    Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСпортивныеОбъекты;
	ВыборАктивногоРаздела(Элементы.РазделСпортивныеОбъекты);
КонецПроцедуры

&НаКлиенте
Процедура ВыборАктивногоРаздела(Поле)
	Для каждого элемент из элементы.ГруппаШапкаКнопки.ПодчиненныеЭлементы Цикл
		Если элемент.ЦветФона = WebЦвета.БледноБирюзовый тогда
			 элемент.ЦветФона = WebЦвета.Белый;
		ИначеЕсли элемент = поле тогда
			 элемент.ЦветФона = WebЦвета.БледноБирюзовый;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборыДанных(Организация)

    ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокВидовСпорта,"Владелец",Организация,Истина);
	ЗаполнитьПараметрыВыбораОтбораТренер(Организация);
	//ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокСпортсменов,"Организация",Организация,Истина);
	//ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокТренеров,"Организация",Организация,Истина);

КонецПроцедуры
&НаСервере
Процедура ЗаполнитьПараметрыВыбораОтбораТренер(Организация)
	
	Элементы.ТренерЗакладкаСпортсмены.СписокВыбора.Очистить();
	ТренерЗакладкаСпортсмены = Справочники.Тренеры.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Тренеры.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Тренеры КАК Тренеры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствияФизическихЛицИОрганизаций КАК СоответствияФизическихЛицИОрганизаций
		|		ПО Тренеры.ФизическоеЛицо.Ссылка = СоответствияФизическихЛицИОрганизаций.ФизическоеЛицо.Ссылка
		|ГДЕ
		|	СоответствияФизическихЛицИОрганизаций.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Элементы.ТренерЗакладкаСпортсмены.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

#Область ОбработчикиСпортсмены
	&НаКлиенте
Процедура СписокСпортсменыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено ИЛИ ТекущийСпортсмен = ТекущиеДанные.Ссылка Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущийСпортсмен = ТекущиеДанные.Ссылка;
	
	Если ПроверитьСтатусСпортсмена() тогда
		ПолучитьДанныеПоСпортсмену();
	КонецЕсли;
	//Фото
	ОбновитьФотографиюНаСервере();
КонецПроцедуры

&НаСервере
Функция  СписокСпортсменыПоРазрядамЗапрос(Организация)
	Запрос = Новый запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Организация КАК Организация,
	               |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен,
	               |	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта
	               |ПОМЕСТИТЬ ВТ_СоставУчащихся
	               |ИЗ
	               |	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(
	               |			&ТекущаяДата,
	               |			Организация = &Организация
	               |				И Спортсмен.СтатусСпортсмена <> ЗНАЧЕНИЕ(Перечисление.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения)) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
	               |ГДЕ
	               |	(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения > &ТекущаяДата
	               |			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Организация,
	               |	Спортсмен,
	               |	ВидСпорта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПодтвержденныеРазрядыСпортсменовСрезПоследних.Спортсмен КАК Спортсмен,
	               |	ПодтвержденныеРазрядыСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта,
	               |	ПодтвержденныеРазрядыСпортсменовСрезПоследних.Разряд КАК Разряд
	               |ПОМЕСТИТЬ ВТ_Разряды
	               |ИЗ
	               |	РегистрСведений.ПодтвержденныеРазрядыСпортсменов.СрезПоследних(
	               |			&ТекущаяДата,
	               |			(Спортсмен, ВидСпорта) В
	               |				(ВЫБРАТЬ
	               |					ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
	               |					ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
	               |				ИЗ
	               |					ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК ПодтвержденныеРазрядыСпортсменовСрезПоследних
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПодтвержденныеРазрядыСпортсменовСрезПоследних.Спортсмен,
	               |	ПодтвержденныеРазрядыСпортсменовСрезПоследних.ВидСпорта,
	               |	ПодтвержденныеРазрядыСпортсменовСрезПоследних.Разряд
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Разряд,
	               |	ВидСпорта,
	               |	Спортсмен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Разряды.Спортсмен) КАК Количество,
	               |	ВТ_Разряды.ВидСпорта КАК ВидСпорта,
	               |	ЕСТЬNULL(ВТ_Разряды.Разряд, ""бр"") КАК Разряд
	               |ИЗ
	               |	ВТ_Разряды КАК ВТ_Разряды
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕСТЬNULL(ВТ_Разряды.Разряд, ""бр""),
	               |	ВТ_Разряды.ВидСпорта
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Разряд";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаСервере
Процедура СписокСпортсменыПоРазрядам(Организация)
	
	ВсегоВариантовРазрядов = СписокСпортсменыПоРазрядамЗапрос(Организация);
	
	ТаблицаСпортсменыПоРазрядам.Очистить();
	
	// {Рарус adilas #23459 -Тестирование релиза Альфа СПОРТ. РС Руководитель. Спортсмены 2021.12.23
	СоответствиеВидовСпорта = Новый Соответствие;
	СоответствиеВидовСпорта.Вставить(ВсегоВариантовРазрядов[0].ВидСпорта, ВсегоВариантовРазрядов[0].ВидСпорта);
	
	ПервыйВидСпорта = ТаблицаСпортсменыПоРазрядам.Добавить();
	ПервыйВидСпорта.ВидСпорта = ВсегоВариантовРазрядов[0].ВидСпорта;
	
	Для Каждого Элемент из ВсегоВариантовРазрядов Цикл
		
		Если (СоответствиеВидовСпорта.Получить(Элемент.ВидСпорта) = Неопределено) И Элемент.ВидСпорта <> ВсегоВариантовРазрядов[0].ВидСпорта Тогда
			
			Строка = ТаблицаСпортсменыПоРазрядам.Добавить();
			Строка.ВидСпорта = Элемент.ВидСпорта;
			СоответствиеВидовСпорта.Вставить(Элемент.ВидСпорта, Элемент.ВидСпорта);
			
			#Область ЗаполнениеСтроки
			Разряд = Строка(Элемент.Разряд);
			Если Разряд = "III" тогда
				Строка.III = Элемент.Количество;
			ИначеЕсли Разряд = "II" тогда
				Строка.II = Элемент.Количество;
			ИначеЕсли Разряд = "I" тогда
				Строка.I = Элемент.Количество;
			ИначеЕсли Разряд = "4 юн" тогда
				Строка.Юн4 = Элемент.Количество;
			ИначеЕсли Разряд = "3 юн" тогда
				Строка.Юн3 = Элемент.Количество;
			ИначеЕсли Разряд = "2 юн" тогда
				Строка.Юн2 = Элемент.Количество;
			ИначеЕсли Разряд = "1 юн" тогда
				Строка.Юн1 = Элемент.Количество;
			ИначеЕсли Разряд = "ГР" тогда
				Строка.ГР = Элемент.Количество;
			ИначеЕсли Разряд = "ЗМС" тогда
				Строка.ЗМС = Элемент.Количество;
			ИначеЕсли Разряд = "КМС" тогда
				Строка.КМС = Элемент.Количество;
			ИначеЕсли Разряд = "МС" тогда
				Строка.МС = Элемент.Количество;
			ИначеЕсли Разряд = "МСМК" тогда
				Строка.МСМК = Элемент.Количество;
			Иначе
				Строка.бр = Элемент.Количество;
			КонецЕсли;
			#КонецОбласти
			
			
		Иначе
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ВидСпорта", Элемент.ВидСпорта);
			
			МассивСтрокВидовСпорта = ТаблицаСпортсменыПоРазрядам.НайтиСтроки(СтруктураПоиска); 			
			ТекущиеДанные = МассивСтрокВидовСпорта[0];
			
			#Область ЗаполнениеСтроки
			Разряд = Строка(Элемент.Разряд);
			Если Разряд = "III" тогда
				ТекущиеДанные.III = Элемент.Количество;
			ИначеЕсли Разряд = "II" тогда
				ТекущиеДанные.II = Элемент.Количество;
			ИначеЕсли Разряд = "I" тогда
				ТекущиеДанные.I = Элемент.Количество;
			ИначеЕсли Разряд = "4 юн" тогда
				ТекущиеДанные.Юн4 = Элемент.Количество;
			ИначеЕсли Разряд = "3 юн" тогда
				ТекущиеДанные.Юн3 = Элемент.Количество;
			ИначеЕсли Разряд = "2 юн" тогда
				ТекущиеДанные.Юн2 = Элемент.Количество;
			ИначеЕсли Разряд = "1 юн" тогда
				ТекущиеДанные.Юн1 = Элемент.Количество;
			ИначеЕсли Разряд = "ГР" тогда
				ТекущиеДанные.ГР = Элемент.Количество;
			ИначеЕсли Разряд = "ЗМС" тогда
				ТекущиеДанные.ЗМС = Элемент.Количество;
			ИначеЕсли Разряд = "КМС" тогда
				ТекущиеДанные.КМС = Элемент.Количество;
			ИначеЕсли Разряд = "МС" тогда
				ТекущиеДанные.МС = Элемент.Количество;
			ИначеЕсли Разряд = "МСМК" тогда
				ТекущиеДанные.МСМК = Элемент.Количество;
			Иначе
				ТекущиеДанные.бр = Элемент.Количество;
			КонецЕсли;
			#КонецОбласти
			
		КонецЕсли;	
		
	КонецЦикла;
	// }Рарус adilas #23459 -Тестирование релиза Альфа СПОРТ. РС Руководитель. Спортсмены 2021.12.23
	
КонецПроцедуры

&НаСервере
Функция  СписокСпортсменыПоТренерамЗапрос(Организация)
	Запрос = Новый запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен КАК Спортсмен,
	               |	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер
	               |ПОМЕСТИТЬ Спортсмены
	               |ИЗ
	               |	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, Организация = &Организация) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
	               |		ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен = СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадровыеИсторииТренеров.СрезПоследних(, Организация = &Организация) КАК КадровыеИсторииТренеровСрезПоследних
	               |		ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер = КадровыеИсторииТренеровСрезПоследних.Тренер
	               |ГДЕ
	               |	НЕ ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер ЕСТЬ NULL
	               |	И ВЫБОР
	               |			КОГДА СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ
	               |	И КадровыеИсторииТренеровСрезПоследних.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Спортсмены.Спортсмен) КАК Количество,
	               |	ЕСТЬNULL(ПодтвержденныеРазрядыСпортсменовСрезПоследних.Разряд, ""бр"") КАК Разряд,
	               |	Спортсмены.Тренер КАК Тренер
	               |ИЗ
	               |	Спортсмены КАК Спортсмены
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодтвержденныеРазрядыСпортсменов.СрезПоследних(, Организация = &Организация) КАК ПодтвержденныеРазрядыСпортсменовСрезПоследних
	               |		ПО Спортсмены.Спортсмен = ПодтвержденныеРазрядыСпортсменовСрезПоследних.Спортсмен
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕСТЬNULL(ПодтвержденныеРазрядыСпортсменовСрезПоследних.Разряд, ""бр""),
	               |	Спортсмены.Тренер
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Тренер";
	Запрос.УстановитьПараметр("Организация", Организация);
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаСервере
Процедура СписокСпортсменыПоТренерам(Организация)
	ВсегоВариантовТренеров = СписокСпортсменыПоТренерамЗапрос(Организация);
	
	ТаблицаСпортсменыПоТренерам.Очистить();
	
	ТекТренер = Неопределено;
	Для Каждого Элемент из ВсегоВариантовТренеров цикл
		Если Не ТекТренер = Элемент.Тренер тогда
			Строка = ТаблицаСпортсменыПоТренерам.Добавить();
			ТекТренер = Элемент.Тренер;
			Строка.Тренер = Элемент.Тренер;
		КонецЕсли;
		#Область ЗаполнениеСтроки
		Разряд = Строка(Элемент.Разряд);
		Если Разряд = "III" тогда
			Строка.III = Элемент.Количество;
		ИначеЕсли Разряд = "II" тогда
			Строка.II = Элемент.Количество;
		ИначеЕсли Разряд = "I" тогда
			Строка.I = Элемент.Количество;
		ИначеЕсли Разряд = "4 юн" тогда
			Строка.Юн4 = Элемент.Количество;
		ИначеЕсли Разряд = "3 юн" тогда
			Строка.Юн3 = Элемент.Количество;
		ИначеЕсли Разряд = "2 юн" тогда
			Строка.Юн2 = Элемент.Количество;
		ИначеЕсли Разряд = "1 юн" тогда
			Строка.Юн1 = Элемент.Количество;
		ИначеЕсли Разряд = "ГР" тогда
			Строка.ГР = Элемент.Количество;
		ИначеЕсли Разряд = "ЗМС" тогда
			Строка.ЗМС = Элемент.Количество;
		ИначеЕсли Разряд = "КМС" тогда
			Строка.КМС = Элемент.Количество;
		ИначеЕсли Разряд = "МС" тогда
			Строка.МС = Элемент.Количество;
		ИначеЕсли Разряд = "МСМК" тогда
			Строка.МСМК = Элемент.Количество;
		Иначе
			Строка.бр = Элемент.Количество;
		КонецЕсли;
		#КонецОбласти
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция СписокСпортсменыПоЭтапамЗапрос(Организация)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен) КАК Количество,
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер,
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап
		|ИЗ
		|	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, Организация = &Организация) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
		|		ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен = СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадровыеИсторииТренеров.СрезПоследних(, Организация = &Организация) КАК КадровыеИсторииТренеровСрезПоследних
		|		ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер = КадровыеИсторииТренеровСрезПоследних.Тренер
		|ГДЕ
		|	ВЫБОР
		|			КОГДА СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|	И КадровыеИсторииТренеровСрезПоследних.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап,
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Тренер";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаСервере
Процедура СписокСпортсменыПоЭтапам(Организация)
	ВсегоВариантовТренеров = СписокСпортсменыПоЭтапамЗапрос(Организация);
	
	КоличествоСпортсменовПоЭтапам.Очистить();
	Для каждого элемент из Элементы.КоличествоСпортсменовПоЭтапам.ПодчиненныеЭлементы Цикл
		Элемент.Видимость = Ложь;	
	КонецЦикла;
	Элементы.КоличествоСпортсменовПоЭтапамТренер.Видимость = Истина;
	
	ТекТренер = Неопределено;
	Для Каждого Элемент из ВсегоВариантовТренеров цикл
		Если Не ТекТренер = Элемент.Тренер тогда
			Строка = КоличествоСпортсменовПоЭтапам.Добавить();
			ТекТренер = Элемент.Тренер;
			Строка.Тренер = Элемент.Тренер;
		КонецЕсли;
		#Область ЗаполнениеСтроки
		Этап = Элемент.Этап.Наименование;
		Если Этап = "Высшего спортивного мастерства" тогда
			Строка.ВысшегоСпортивногоМастерства = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамВысшегоСпортивногоМастерства.Видимость = Истина;
		ИначеЕсли Этап = "Начальная подготовка" тогда
			Строка.НачальнаяПодготовка = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамНачальнаяПодготовка.Видимость = Истина;
		ИначеЕсли Этап = "НП-1" тогда
			Строка.НП1 = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамНП1.Видимость = Истина;
		ИначеЕсли Этап = "НП-2" тогда
			Строка.НП2 = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамНП2.Видимость = Истина;
		ИначеЕсли Этап = "НП-3" тогда
			Строка.НП3 = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамНП3.Видимость = Истина;
		ИначеЕсли Этап = "Совершенствование спортивного мастерства" тогда
			Строка.СовершенствованиеСпортивногоМастерства = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамСовершенствованиеСпортивногоМастерства.Видимость = Истина;
		ИначеЕсли Этап = "СОГ" тогда
			Строка.СОГ = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамСОГ.Видимость = Истина;
		ИначеЕсли Этап = "Спортивно - оздоровительный" тогда
			Строка.СпортивноОздоровительный = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамСпортивноОздоровительный.Видимость = Истина;
		ИначеЕсли Этап = "ССМ-1" тогда
			Строка.ССМ1 = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамССМ1.Видимость = Истина;
		ИначеЕсли Этап = "ССМ-2" тогда
			Строка.ССМ2 = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамССМ2.Видимость = Истина;
		ИначеЕсли Этап = "ССМ-3" тогда
			Строка.ССМ3 = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамССМ3.Видимость = Истина;
		ИначеЕсли Этап = "Т-1" тогда
			Строка.Т1 = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамТ1.Видимость = Истина;
		ИначеЕсли Этап = "Т-2" тогда
			Строка.Т2 = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамТ2.Видимость = Истина;
		ИначеЕсли Этап = "Т-3" тогда
			Строка.Т3 = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамТ3.Видимость = Истина;
		ИначеЕсли Этап = "Т-4" тогда
			Строка.Т4 = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамТ4.Видимость = Истина;
		ИначеЕсли Этап = "Т-5" тогда
			Строка.Т5 = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамТ5.Видимость = Истина;
		ИначеЕсли Этап = "ВСМ" тогда
			Строка.ВСМ = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамВСМ.Видимость = Истина;
		Иначе
			Строка.Тренеровочный = Элемент.Количество;
			Элементы.КоличествоСпортсменовПоЭтапамТренеровочный.Видимость = Истина;
		КонецЕсли;
		#КонецОбласти
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СписокСпортсменыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтатусСпортсменаОтборПриИзменении(Элемент)
    ОбновитьСписокСпортсменов();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокСпортсменов()
	
    ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокСпортсмены, "ВидСпорта");
    ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокСпортсмены, "Тренер");
    ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокСпортсмены, "СтатусСпортсмена");
    ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокСпортсмены, "Отчислен");
	// {Рарус adilas #23011 -Список спортсменов. Отбор. Все учащиеся. 2021.12.21
	СписокСпортсмены.Отбор.Элементы.Очистить();
	// }Рарус adilas #23011 -Список спортсменов. Отбор. Все учащиеся. 2021.12.21
	Если НЕ Организация.Пустая() Тогда
		ПользовательскийОтбор = СписокСпортсмены.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(СписокСпортсмены.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
		ПользовательскийОтбор.Элементы.Очистить();
		
		ЭлементОтбора = ПользовательскийОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = Организация;
	Иначе 
		ПользовательскийОтбор = СписокСпортсмены.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(СписокСпортсмены.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
		ПользовательскийОтбор.Элементы.Очистить();
	КонецЕсли; 
	
    Если НЕ ВидСпортаОтборСпортсмены.Пустая() Тогда
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "ВидСпорта", ВидСпортаОтборСпортсмены, ВидСравненияКомпоновкиДанных.Равно);
    КонецЕсли;
    
    Если НЕ Тренер.Пустая() Тогда
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "Тренер", Тренер, ВидСравненияКомпоновкиДанных.Равно);
    КонецЕсли;	
	
	// {Рарус adilas #23011 -Список спортсменов. Отбор. Все учащиеся. 2021.12.21
	Если НЕ СтатусСпортсменаОтбор = "Все" Тогда		
		
		Если СтатусСпортсменаОтбор = "Спортсмен" Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "СтатусСпортсмена", ПредопределенноеЗначение("Перечисление.СтатусыСпортсменов.Спортсмен"), ВидСравненияКомпоновкиДанных.Равно);
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "Отчислен", Ложь, ВидСравненияКомпоновкиДанных.Равно);
			
		ИначеЕсли СтатусСпортсменаОтбор = "Другого" Тогда  
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "СтатусСпортсмена", ПредопределенноеЗначение("Перечисление.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения"), ВидСравненияКомпоновкиДанных.Равно);	
			
		ИначеЕсли СтатусСпортсменаОтбор = "Занимающийся спортсмен" Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "СтатусСпортсмена", ПредопределенноеЗначение("Перечисление.СтатусыСпортсменов.ЗанимающийсяСпортсмен"), ВидСравненияКомпоновкиДанных.Равно);
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "Отчислен", Ложь, ВидСравненияКомпоновкиДанных.Равно);
			
		ИначеЕсли СтатусСпортсменаОтбор = "Занимающийся обучающийся" Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "СтатусСпортсмена", ПредопределенноеЗначение("Перечисление.СтатусыСпортсменов.ЗанимающийсяОбучающийся"), ВидСравненияКомпоновкиДанных.Равно);
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "Отчислен", Ложь, ВидСравненияКомпоновкиДанных.Равно);
			
		ИначеЕсли СтатусСпортсменаОтбор = "Отчислен" Тогда	
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "СтатусСпортсмена", ПредопределенноеЗначение("Перечисление.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения"), ВидСравненияКомпоновкиДанных.НеРавно);	
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "Отчислен", Истина, ВидСравненияКомпоновкиДанных.Равно);
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "Новый", Ложь, ВидСравненияКомпоновкиДанных.Равно);
			
		ИначеЕсли СтатусСпортсменаОтбор = "Новый" Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСпортсмены, "Новый", Истина, ВидСравненияКомпоновкиДанных.Равно);	 
			
		КонецЕсли;
		
	КонецЕсли; 
    // }Рарус adilas #23011 -Список спортсменов. Отбор. Все учащиеся. 2021.12.21
	
    Элементы.СписокСпортсмены.ТекущаяСтрока = 1;	
           	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеПоСпортсмену()
	
	Соревнования.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчастникиСоревнований.Соревнование КАК Соревнование,
		|	УчастникиСоревнований.УчебныйГод КАК УчебныйГод
		|ИЗ
		|	РегистрСведений.УчастникиСоревнований КАК УчастникиСоревнований
		|ГДЕ
		|	УчастникиСоревнований.Спортсмен = &Спортсмен";
	
	Запрос.УстановитьПараметр("Спортсмен", ТекущийСпортсмен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = Соревнования.Добавить();              
		НоваяЗапись.Соревнование = Выборка.Соревнование;
		НоваяЗапись.УчебныйГод = Выборка.УчебныйГод;
	КонецЦикла;
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПодтвержденныеРазрядыСпортсменовСрезПоследних.Разряд КАК Разряд,
	|	ПодтвержденныеРазрядыСпортсменовСрезПоследних.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.ПодтвержденныеРазрядыСпортсменов.СрезПоследних(, Спортсмен = &Спортсмен) КАК ПодтвержденныеРазрядыСпортсменовСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодтвержденныеРазрядыСпортсменовСрезПоследних.ДатаПрисвоения УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекущийСпортсменРазряд = Выборка.Разряд;
		ТекущийСпортсменРазрядОписание = ТекущийСпортсменРазряд.ПолноеНаименование;
		ТекущийСпортсменРазрядРегистратор = Выборка.Регистратор;
	Иначе
		ТекущийСпортсменРазряд = Справочники.СпортивнаяКлассификация.ПустаяСсылка();
		ТекущийСпортсменРазрядОписание = "б/р";
		ТекущийСпортсменРазрядРегистратор = Документы.ПрисвоениеРазряда.ПустаяСсылка();
	КонецЕсли;
    
    Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Тренер,
	|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап,
	|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.СпортивнаяПрограмма КАК СпортивнаяПрограмма,
	|	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта
	|ИЗ
	|	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(, Спортсмен = &Спортсмен) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
	|		ПО СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен
	|			И СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта = ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта
	|			И СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаНачалаОбучения <= ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Период УБЫВ
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекущийСпортсменВидСпорта = Выборка.ВидСпорта;
		ТекущийСпортсменТренер = Выборка.Тренер;
        ТекущийСпортсменЭтап = Выборка.Этап;
		Если ПустаяСтрока(Выборка.СпортивнаяПрограмма) тогда     
			Элементы.ТекущийСпортсменСпортПрограмма.Гиперссылка = Ложь;
	        ТекущийСпортсменСпортПрограмма = "<...>";
		Иначе                                                           
			Элементы.ТекущийСпортсменСпортПрограмма.Гиперссылка = Истина;
			ТекущийСпортсменСпортПрограмма = Выборка.СпортивнаяПрограмма;
		КонецЕсли;
	Иначе
		Элементы.ТекущийСпортсменСпортПрограмма.Гиперссылка = Ложь;
	    ТекущийСпортсменСпортПрограмма = "<...>";
		ТекущийСпортсменВидСпорта = Справочники.ВидыСпорта.ПустаяСсылка();
		ТекущийСпортсменТренер = Справочники.Тренеры.ПустаяСсылка();
        ТекущийСпортсменЭтап = Справочники.ЭтапыСпортивнойПодготовки.ПустаяСсылка();
	КонецЕсли;

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЗаявкиНаПроведениеСоревнованияСрезПоследних.Команда КАК Команда
	|ИЗ
	|	РегистрСведений.ЗаявкиНаПроведениеСоревнования.СрезПоследних(, Спортсмен = &Спортсмен) КАК ЗаявкиНаПроведениеСоревнованияСрезПоследних";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекущийСпортсменКоманда = Выборка.Команда;
	Иначе
		ТекущийСпортсменКоманда = Справочники.Команды.ПустаяСсылка();
	КонецЕсли;
	Если ТекущийСпортсменКоманда = Справочники.Команды.ПустаяСсылка() тогда
		ТекущийСпортсменКомандаОписание = "<...>";
	Иначе
		ТекущийСпортсменКомандаОписание = ТекущийСпортсменКоманда;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТренерЗакладкаСпортсменПриИзменении(Элемент)
		ОбновитьСписокСпортсменов();
КонецПроцедуры

&НаКлиенте
Процедура ВидСпортаОтборСпортсменыПриИзменении(Элемент)
	ОбновитьСписокСпортсменов();
КонецПроцедуры

&НаСервере
Процедура ОбновитьФотографиюНаСервере()
	
	Если Не ТекущийСпортсмен.ФизическоеЛицо.Фото.Пустая() Тогда
		ТекущийСпортсменАдресФотографии = ПоместитьВоВременноеХранилище(ПолучитьИзВременногоХранилища(РаботаСФайламиСлужебныйВызовСервера.ПолучитьНавигационнуюСсылкуДляОткрытия(ТекущийСпортсмен.ФизическоеЛицо.Фото.ТекущаяВерсия)), УникальныйИдентификатор);
	Иначе
		ТекущийСпортсменАдресФотографии = "";
	КонецЕсли;
	
	Элементы.ТекущийСпортсменАдресФотографии.РазмерКартинки = РазмерКартинки.АвтоРазмер;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокТренерыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено ИЛИ ТекущийТренер = ТекущиеДанные.Ссылка Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущийТренер = ТекущиеДанные.Ссылка;
	
	Если ПроверитьСтатусТренера() тогда
		ЗаполнитьДанныеТренера();
	иначе
		ОбновитьФотографиюТренераНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеТренера()
	ДатаРождения = ПолучитьДатуРожденияТренера();
	Стаж = ПолучитьДатуСтажаТренера();
	Если ДатаРождения = Дата("00010101000000") Тогда 
		ТекущийТренерДатаРожденияОписание = "<...>";
	Иначе
		ТекущийТренерДатаРожденияОписание = Формат(ДатаРождения,"ДФ=dd.MM.yyyy");
	КонецЕсли;
	Если Стаж = Дата("00010101000000") Тогда 
		ТекущийТренерСтажОписание = "<...>";
	Иначе
		ТекущийТренерСтажОписание = Формат(Стаж,"ДФ=dd.MM.yyyy");
	КонецЕсли;
	//Виды спорта
	
	// {Рарус ivaart IN-18238 Заполнение формы пустыми данными при пустом отборе  2021.08.03
	Если Не ПустаяСтрока(ТекущийТренер) тогда
		ОтобразитьВидыСпорта();
	Иначе
		Элементы.ГруппаТренерВидыСпортаСписок.Заголовок = "<...>";
		ТекущийТренерВидыСпорта.Очистить();
	КонецЕсли;
	// }Рарус ivaart IN-18238 Заполнение формы пустыми данными при пустом отборе  2021.08.03
	
    //СпортОбъекты
    ОтобразитьСпортОбъекты();
     //Этапы СП
	//ОтобразитьЭтапыСП();
	Элементы.ГруппаТренер.Видимость = Истина;
	//Фото
	ОбновитьФотографиюТренераНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СписокТренерыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПолучитьВидыСпортаПоТренеру()
	
	// {Рарус adilas #11631 -Страница тренера 2020.12.10
	//
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта.Ссылка КАК ВидСпортаСсылка
	|ИЗ
	|	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(&Дата, Тренер = &Тренер) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КоличествоВидовСпортаТренеровОстатки.ВидСпорта.Ссылка
	|ИЗ
	|	РегистрНакопления.КоличествоВидовСпортаТренеров.Остатки(&Дата, Тренер = &Тренер) КАК КоличествоВидовСпортаТренеровОстатки
	|АВТОУПОРЯДОЧИВАНИЕ";
	// {Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	// }Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
	Запрос.УстановитьПараметр("Тренер", ТекущийТренер);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	ТекущийТренерВидыСпорта.ЗагрузитьЗначения(ТЗ.ВыгрузитьКолонку("ВидСпортаСсылка"));
	
	// }Рарус adilas #11631 -Страница тренера 2020.12.10
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьВидыСпорта()
	ПолучитьВидыСпортаПоТренеру();
	НовыйЗаголовок = "<...>";
	Для Каждого элемент Из ТекущийТренерВидыСпорта Цикл 
		Если НовыйЗаголовок = "<...>" тогда
			НовыйЗаголовок = "";
		Иначе 
			НовыйЗаголовок = НовыйЗаголовок+", ";
		КонецЕсли;
		НовыйЗаголовок = НовыйЗаголовок+Строка(элемент);
	КонецЦикла;
	Элементы.ГруппаТренерВидыСпортаСписок.Заголовок = НовыйЗаголовок;
КонецПроцедуры

&НаСервере
Процедура ПолучитьСпортОбъектыПоТренеру()	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
    |   СпортивныеОбъекты.СпортивныйОбъект КАК СпортивныйОбъект
    |ИЗ
    |   РегистрСведений.СпортивныеОбъекты КАК СпортивныеОбъекты
    |ГДЕ
    |   СпортивныеОбъекты.Тренер = &Тренер
    |
    |УПОРЯДОЧИТЬ ПО
    |   СпортивныйОбъект";
	
	Запрос.УстановитьПараметр("Тренер", ТекущийТренер);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	ТекущийТренерСпортОбъекты.ЗагрузитьЗначения(ТЗ.ВыгрузитьКолонку("СпортивныйОбъект"));
КонецПроцедуры

Процедура ОтобразитьСпортОбъекты()
    ПолучитьСпортОбъектыПоТренеру();
	НовыйЗаголовок = "<...>";
	Для Каждого элемент Из ТекущийТренерСпортОбъекты Цикл 
		Если НовыйЗаголовок = "<...>" тогда
			НовыйЗаголовок = "";
		Иначе 
			НовыйЗаголовок = НовыйЗаголовок+", ";
		КонецЕсли;
		НовыйЗаголовок = НовыйЗаголовок+Строка(элемент);
	КонецЦикла;
	Элементы.ГруппаТренерСпортивныеОбъектыСписок.Заголовок = НовыйЗаголовок;
КонецПроцедуры	

&НаСервере
Функция ПолучитьДатуСтажаТренера()
	
	Возврат ТекущийТренер.ПедагогическийСтажРаботыС;
	
КонецФункции

Функция ПолучитьДатуРожденияТренера()
	
	Возврат ТекущийТренер.ФизическоеЛицо.ДатаРождения;
	
КонецФункции


//Процедура ОтобразитьЭтапыСП()

//    ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
//    Макет = ОбработкаОбъект.ПолучитьМакет("МакетТаблица");
//    ОбластьКолонкаЗаголовок = Макет.ПолучитьОбласть("ТекДанныеЗаголовок|Колонка");
//    ОбластьКолонкаЗначение = Макет.ПолучитьОбласть("ТекДанныеЗначение|Колонка");
//    ОбластьОтступ = Макет.ПолучитьОбласть("ТекДанные|Отступ");
//    ОбластьЗаголовкаСтроки = Макет.ПолучитьОбласть("ЗаголовокСтроки|КолонкаДляСтроки");
//    ОбластьСтрока = Макет.ПолучитьОбласть("ТекДанныеСтроки|КолонкаДляСтроки");
//    
//    ТабДокЭтапыСпортивнойПодготовки.Очистить();
//    
//    ОбластьЗаголовкаСтроки.Параметры.Заголовок = "Виды спорта"; 
//    ТабДокЭтапыСпортивнойПодготовки.Вывести(ОбластьЗаголовкаСтроки);


//    Запрос = Новый Запрос;
//    Запрос.Текст = 
//        "ВЫБРАТЬ
//        |   ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта,
//        |   ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап,
//        |   ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен КАК Спортсмен,
//        |   ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап.Последовательность КАК ЭтапПоследовательность
//        |ПОМЕСТИТЬ ТЗЭтапы
//        |ИЗ
//        |   РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(&ТекДата, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
//        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(&ТекДата, ) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
//        |       ПО ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Организация = СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Организация
//        |           И ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта = СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта
//        |           И ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен = СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен
//        |ГДЕ
//        |   ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер = &ТекущийТренер
//        |   И (СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1)
//        |           ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения >= &ТекДата)
//        |
//        |СГРУППИРОВАТЬ ПО
//        |   ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта,
//        |   ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап,
//        |   ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен,
//        |   ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап.Последовательность
//        |;
//        |
//        |////////////////////////////////////////////////////////////////////////////////
//        |ВЫБРАТЬ
//        |   ТЗЭтапы.ВидСпорта КАК ВидСпорта,
//        |   ТЗЭтапы.Этап КАК Этап,
//        |   ТЗЭтапы.Спортсмен КАК Спортсмен,
//        |   ТЗЭтапы.ЭтапПоследовательность КАК ЭтапПоследовательность,
//        |   ПодтвержденныеРазрядыСпортсменовСрезПоследних.Разряд КАК Разряд
//        |ИЗ
//        |   ТЗЭтапы КАК ТЗЭтапы
//        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодтвержденныеРазрядыСпортсменов.СрезПоследних(
//        |               &ТекДата,
//        |               Спортсмен В
//        |                   (ВЫБРАТЬ РАЗЛИЧНЫЕ
//        |                       ТЗЭтапы.Спортсмен КАК Спортсмен
//        |                   ИЗ
//        |                       ТЗЭтапы КАК ТЗЭтапы)) КАК ПодтвержденныеРазрядыСпортсменовСрезПоследних
//        |       ПО ТЗЭтапы.Спортсмен = ПодтвержденныеРазрядыСпортсменовСрезПоследних.Спортсмен
//        |           И ТЗЭтапы.ВидСпорта = ПодтвержденныеРазрядыСпортсменовСрезПоследних.ВидСпорта
//        |
//        |УПОРЯДОЧИТЬ ПО
//        |   ЭтапПоследовательность,
//        |   ВидСпорта,
//        |   Спортсмен";
//    // {Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
//    Запрос.УстановитьПараметр("ТекДата", ТекущаяДатаСеанса());
//	// }Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
//    Запрос.УстановитьПараметр("ТекущийТренер", ТекущийТренер);
//    
//    РезультатЗапроса = Запрос.Выполнить();
//    
//    ТекущийТренерЭтапыСП.Загрузить(РезультатЗапроса.Выгрузить());
//    
//    ТЗЭтапы = ТекущийТренерЭтапыСП.Выгрузить();
//    ТЗЭтапы.Свернуть("Этап, ЭтапПоследовательность");
//    ТЗЭтапы.Сортировать("ЭтапПоследовательность");
//    
//    ТЗВидыСпорта = ТекущийТренерЭтапыСП.Выгрузить();
//    ТЗВидыСпорта.Свернуть("ВидСпорта");
//    ТЗВидыСпорта.Сортировать("ВидСпорта");
//    
//    Для каждого СтрокаЭтап Из ТЗЭтапы Цикл
//        
//        ТекЭтап = СтрокаЭтап.Этап;
//        ОбластьКолонкаЗаголовок.Параметры.Заголовок = ТекЭтап;
//        ТабДокЭтапыСпортивнойПодготовки.Присоединить(ОбластьКолонкаЗаголовок);
//        
//    КонецЦикла; 
//    
//    Для каждого СтрокаВидСпорта Из ТЗВидыСпорта Цикл
//        
//        ТекВидСпорта = СтрокаВидСпорта.Видспорта;
//        ОбластьСтрока.Параметры.Значение = ТекВидСпорта;
//        ТабДокЭтапыСпортивнойПодготовки.Вывести(ОбластьСтрока);
//        
//        Для каждого СтрокаЭтап Из ТЗЭтапы Цикл
//            
//            ТекЭтап = СтрокаЭтап.Этап;
//            ОтборСтрок = Новый Структура("Этап, ВидСпорта",ТекЭтап,ТекВидСпорта);
//          	НайденоСтрок = ТекущийТренерЭтапыСП.НайтиСтроки(ОтборСтрок);
//            
//            ОбластьКолонкаЗначение.Параметры.Значение = НайденоСтрок.Количество();
//            ОбластьКолонкаЗначение.Параметры.Заголовок = Новый Структура("ТекЭтап, ТекВидСпорта", ТекЭтап, ТекВидСпорта);
//            ТабДокЭтапыСпортивнойПодготовки.Присоединить(ОбластьКолонкаЗначение);
//            
//          КонецЦикла; 
//    
//    КонецЦикла; 
//        
//КонецПроцедуры

&НаСервере
Процедура ОбновитьФотографиюТренераНаСервере()
	
	Если Не ТекущийТренер.ФизическоеЛицо.Фото.Пустая() Тогда
		ТекущийТренерАдресФотографии = ПоместитьВоВременноеХранилище(ПолучитьИзВременногоХранилища(РаботаСФайламиСлужебныйВызовСервера.ПолучитьНавигационнуюСсылкуДляОткрытия(ТекущийТренер.ФизическоеЛицо.Фото.ТекущаяВерсия)),УникальныйИдентификатор);
	Иначе
		ТекущийТренерАдресФотографии = "";
	КонецЕсли;
	
	Элементы.ТекущийТренерАдресФотографии.РазмерКартинки = РазмерКартинки.АвтоРазмер;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокТренеровПоОтбору()
	// {Рарус dotere #21522 -Попадают виды спорта введенные вручную 2021.10.19
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер КАК Ссылка,
	|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта
	|ПОМЕСТИТЬ ВТ_ВидыСпорта
	|ИЗ
	|	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(&Дата, ) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер,
	|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоставГруппыСрезПоследних.ТренерСборной,
	|	СоставГруппыСрезПоследних.ВидСпорта
	|ИЗ
	|	РегистрСведений.СоставГруппы.СрезПоследних(&Дата, ) КАК СоставГруппыСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КоличествоВидовСпортаТренеровОстатки.Тренер,
	|	КоличествоВидовСпортаТренеровОстатки.ВидСпорта
	|ИЗ
	|	РегистрНакопления.КоличествоВидовСпортаТренеров.Остатки(&Дата, ) КАК КоличествоВидовСпортаТренеровОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВТ_ВидыСпорта.Ссылка КАК Ссылка,
	|	ВТ_ВидыСпорта.ВидСпорта КАК ВидСпорта
	|ИЗ
	|	ВТ_ВидыСпорта КАК ВТ_ВидыСпорта
	|ГДЕ
	|	ВТ_ВидыСпорта.ВидСпорта = &ВидСпорта";
	// }Рарус dotere #21522 -Попадают виды спорта введенные вручную 2021.10.19
	// {Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	// }Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
	Запрос.УстановитьПараметр("ВидСпорта", ВидСпортаОтборТренеры);
	
	ТЗРезультат = Запрос.Выполнить().Выгрузить();
	ТЗРезультат.Свернуть("Ссылка");
	
	Возврат ТЗРезультат.ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаКлиенте
Процедура ОтчетПоТренерам(Команда)
	ОткрытьФорму("Отчет.ОтчетПоКоличествуТренеров.Форма.ФормаОтчета");
КонецПроцедуры

&НаКлиенте
Процедура ВыступленияНаСоревнованиях(Команда)
	ОткрытьФорму("Отчет.ВыступлениеНаСоревнованиях.Форма.ФормаОтчета");
КонецПроцедуры

// {Рарус adilas #17294 -Отчет "Результаты  выступлений на соревнованиях всероссийского уровня" 2021.11.22
&НаКлиенте
Процедура НадписьРезультатыВыступленийНаСоревнованияхВсероссийскогоУровняНажатие(Элемент)
	
	ОткрытьФорму("Отчет.РезультатыВыступленийНаСоревнованияхВсероссийскогоУровня.Форма.ФормаОтчета");		
	
КонецПроцедуры
// }Рарус adilas #17294 -Отчет "Результаты  выступлений на соревнованиях всероссийского уровня" 2021.11.22

&НаКлиенте
Процедура ОтчетПоСпортсменам(Команда)
	ОткрытьФорму("Отчет.СписокСпортсменовПоГруппам.Форма.ФормаОтчета");
КонецПроцедуры

&НаКлиенте
Процедура СпортсменыПоЭтапамСпортивнойПодготовки(Команда)
    ОткрытьФорму("Отчет.КоличествоСпортсменовПоЭтапамСпортивнойПодготовки.Форма.ФормаОтчета");
КонецПроцедуры

&НаКлиенте
Процедура СборныеКомандыСпортсменов(Команда)
    ОткрытьФорму("Отчет.СборныеКомандыСпортсменов.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ТекущийТренерВидыСпортаТаблицаЗначениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ПоказатьЗначение(,Элементы.ТекущийТренерВидыСпортаТаблица.ТекущиеДанные.Значение);
КонецПроцедуры

&НаКлиенте
Процедура ТекущийТренерСпортивныеОбъектыТаблицаЗначениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ПоказатьЗначение(,Элементы.ТекущийТренерСпортивныеОбъектыТаблица.ТекущиеДанные.Значение);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СписокТренеры.Параметры.УстановитьЗначениеПараметра("Организация", Справочники.Организации.ПустаяСсылка());
	СписокСпортсмены.Параметры.УстановитьЗначениеПараметра("Организация", Справочники.Организации.ПустаяСсылка());
	СписокСпортсмены.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДатаСеанса());
	
	СтатусСпортсменаОтбор = "Все";
	
	//Загрузка API карт
	КартаAPI = "<html>
			|<head>
			|  <title>Custom Icons Tutorial - Leaflet</title>
			|  <meta charset=""utf-8"" />
			|  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
			|  <link rel=""shortcut icon"" type=""image/x-icon"" href=""docs/images/favicon.ico"" />
			|  <link rel=""stylesheet"" href=""https://unpkg.com/leaflet@1.0.3/dist/leaflet.css"" />
			|  <script src=""https://unpkg.com/leaflet@1.0.3/dist/leaflet.js""></script>
			|</head>
			|<body>
			|  <div id='map' style=""height: 100%; width: 100%;""></div>
			|	<script>
			|        var map = L.map('map').setView([65.0189, 82.9332], 3);
			|        mapLink = 
			|            '<a href=""http://openstreetmap.org"">OpenStreetMap</a>';
			|        L.tileLayer(
			|            'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
			|            attribution: '&copy; ' + mapLink + ' Contributors',
			|            maxZoom: 18,
			|            }).addTo(map);
			|	</script>
			|</body>
			|</html>";
	
	 // {Рарус dotere #23010 -При первоначальном открытии показывает только тех тренеров которые работают 12.01.2022
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокТренеры, "Статус", ПолучитьСтатусТренера("Работает"), ВидСравненияКомпоновкиДанных.Равно);
	// }Рарус dotere #23010 -При первоначальном открытии показывает только тех тренеров которые работают 12.01.2022
КонецПроцедуры

// {Рарус ivaart IN-19230 Расшифровка таблиц тренеров и спортсменов 2021.07.30
&НаКлиенте
Процедура КолТренерКвалификационныеКатегорииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Заголовок = "Квалификационная категория тренера" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Категория);
	Иначе
		Расшифровка(Элемент.Имя, Элемент.ТекущиеДанные.Категория, Поле.Заголовок);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСпортсменыПоТренерамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Заголовок = "Тренер" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Тренер);
	Иначе
		Расшифровка(Элемент.Имя, Элемент.ТекущиеДанные.Тренер, Поле.Заголовок);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КолТренерСпортивныеСудьиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Заголовок = "Квалификационная категория спортивного судьи" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Категория);
	Иначе
		Расшифровка(Элемент.Имя, Элемент.ТекущиеДанные.Категория, Поле.Заголовок);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КолТренерЗванияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Заголовок = "Звание" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Звание);
	Иначе
		Расшифровка(Элемент.Имя, Элемент.ТекущиеДанные.Звание, Поле.Заголовок);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КоличествоСпортсменовПоЭтапамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Заголовок = "Тренер" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Тренер);
	Иначе
		Расшифровка(Элемент.Имя, Элемент.ТекущиеДанные.Тренер, Поле.Заголовок);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КолСпортсменовПоЭтапамСПВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Заголовок = "Этап спортивной подготовки" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Этап);
	Иначе
		Расшифровка(Элемент.Имя, Элемент.ТекущиеДанные.Этап, Поле.Заголовок);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКоличествоСпортсменовПоГодамСпортсменыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Заголовок = "Этап спортивной подготовки" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Этап);
	Иначе
		Расшифровка(Элемент.Имя, Элемент.ТекущиеДанные.Этап, Поле.Заголовок);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоревнованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Заголовок = "Соревнование" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Соревнование);
	Иначе
		ПоказатьЗначение(,Элемент.ТекущиеДанные.УчебныйГод);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСпортсменыПоРазрядамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Заголовок = "Вид спорта" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.ВидСпорта);
	Иначе
		Расшифровка(Элемент.Имя, Элемент.ТекущиеДанные.ВидСпорта, Поле.Заголовок);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКоличествоСпортсменовПоГодамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Заголовок = "Вид спорта" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.ВидСпорта);
	Иначе
		Расшифровка(Элемент.Заголовок, Элемент.ТекущиеДанные.ВидСпорта, Поле.Заголовок);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКоличествоТренеровПоГодамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Заголовок = "Вид спорта" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.ВидСпорта);
	Иначе
		Расшифровка(Элемент.Заголовок, Элемент.ТекущиеДанные.ВидСпорта, Поле.Заголовок);
	КонецЕсли;
КонецПроцедуры

// {Рарус ivaart IN-19390 Расшифровка нажатий на элементы СО 2021.08.27
&НаКлиенте
Процедура ТекущийСпортОбъектКолСпортсменовНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если не ТекущийСпортОбъектКолСпортсменов = 0 тогда 
		// {Рарус adilas #20291 -РС Руководитель. Спортивные объекты 2021.09.30
		Расшифровка("Количество спортсменов", ТекущийСпортивныйОбъект, "Спортсмены");
		// }Рарус adilas #20291 -РС Руководитель. Спортивные объекты 2021.09.30
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТекущийСпортОбъектКолИнструкторовНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если не ТекущийСпортОбъектКолИнструкторов = 0 тогда
		// {Рарус adilas #20291 -РС Руководитель. Спортивные объекты 2021.09.30
		Расшифровка("Количество тренеров", ТекущийСпортивныйОбъект, "Тренеры");
		// }Рарус adilas #20291 -РС Руководитель. Спортивные объекты 2021.09.30
	КонецЕсли;
КонецПроцедуры
// }Рарус ivaart IN-19390 Расшифровка нажатий на элементы СО 2021.08.27

&НаКлиенте
Процедура Расшифровка(Таблица, КлючевойПараметр, Параметр)
	ПараметрыФормы = новый Структура("ИсточникДанных, КлючевойПараметр, Параметр, Организация", Таблица, КлючевойПараметр, Параметр, Организация);
	ОткрытьФорму("Обработка.РабочийСтолРуководитель.Форма.ФормаРасшифровки", ПараметрыФормы, , , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
// {Рарус ivaart IN-19230 Расшифровка таблиц тренеров и спортсменов 2021.07.30

// {Рарус ivaart IN-19230 Расшифровка таблиц тренеров и спортсменов 2021.07.30
&НаКлиенте
Процедура ВидСпортаОтборТренерПриИзменении(Элемент)
		
	ОбновитьСписокТренеров("ВидСпорта");
	
КонецПроцедуры
// }Рарус ivaart IN-19230 Расшифровка таблиц тренеров и спортсменов 2021.07.30

// {Рарус ivaart IN-19983 Отбор тренеров по статусу 2021.08.31

&НаКлиенте
Процедура СтатусОтборТренерыПриИзменении(Элемент)
	
	ОбновитьСписокТренеров("Статус");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокТренеров(ИмяОтбора)
	
	Если ИмяОтбора = "ВидСпорта" Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокТренеры, "Ссылка");
		Если НЕ ВидСпортаОтборТренеры.Пустая() Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокТренеры, "Ссылка", ПолучитьСписокТренеровПоОтбору(), ВидСравненияКомпоновкиДанных.ВСписке);
		КонецЕсли;
	// {Рарус dotere #23010 -Отбор переключателями 2021.12.29	
	ИначеЕсли ИмяОтбора = "Статус" тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокТренеры, "Статус");
		Если СтатусОтборТренеры = "Работает" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокТренеры, "Статус", ПолучитьСтатусТренера("Работает"), ВидСравненияКомпоновкиДанных.Равно);
		ИначеЕсли СтатусОтборТренеры = "Уволен" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокТренеры, "Статус", ПолучитьСтатусТренера("Уволен"), ВидСравненияКомпоновкиДанных.Равно);
		ИначеЕсли СтатусОтборТренеры = "ТренерДругогоСпортУчереждения" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокТренеры, "Статус", ПолучитьСтатусТренера("ТренерДругогоСпортУчереждения"), ВидСравненияКомпоновкиДанных.Равно);	
		КонецЕсли;
	// }Рарус dotere #23010 -Отбор переключателями 2021.12.29	
	КонецЕсли;		
	
	Элементы.СписокТренеры.ТекущаяСтрока = 1;	
	СписокТренерыПриАктивизацииСтроки(Элементы.СписокТренеры);
КонецПроцедуры
// }Рарус ivaart IN-19983 Отбор тренеров по статусу 2021.08.31

// {Рарус dotere #23010 -Отбор переключателями 2021.12.29
&НаСервере
Функция ПолучитьСтатусТренера(Выбор)
	Если Выбор = "ТренерДругогоСпортУчереждения" Тогда
		Возврат Перечисления.СтатусыТренеров.ТренерДругогоСпортивногоУчреждения;
	ИначеЕсли Выбор = "Работает" Тогда
		Возврат Перечисления.СтатусыТренеров.Работает
	ИначеЕсли Выбор = "Уволен" Тогда
		Возврат Перечисления.СтатусыТренеров.Уволен
	Иначе
		Возврат Перечисления.СтатусыТренеров.ПустаяСсылка()
	КонецЕсли
КонецФункции
// }Рарус dotere #23010 -Отбор переключателями 2021.12.29

#КонецОбласти

// {Рарус ivaart IN-19508 Данные для спортсмена другого спортивного цчреждения 2021.08.24
&НаСервере
Функция ПроверитьСтатусСпортсмена()
	НашСпортсмен = Не ТекущийСпортсмен.СтатусСпортсмена = Перечисления.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения;	
	Элементы.ГруппаДанныеСпортсменаТекущегоУчреждения.Видимость = НашСпортсмен;
	Элементы.Соревнования.Видимость = НашСпортсмен;
	Возврат НашСпортсмен;
КонецФункции
// }Рарус ivaart IN-19508 Данные для спортсмена другого спортивного цчреждения 2021.08.24

// {Рарус ivaart IN-19515 Данные для спортсмена другого спортивного цчреждения 2021.08.24
&НаСервере
Функция ПроверитьСтатусТренера()
	НашТренер = Не ТекущийТренер.СтатусТренера = Перечисления.СтатусыТренеров.ТренерДругогоСпортивногоУчреждения;	
	Элементы.ГруппаТренерСтажС.Видимость = НашТренер;
	Элементы.ДополнительнаяИнформацияТренера.Видимость = НашТренер;
	Возврат НашТренер;
КонецФункции
// }Рарус ivaart IN-19515 Данные для спортсмена другого спортивного цчреждения 2021.08.24

#Область ГеографическаяСхема

&НаСервере
Процедура СозданиеСхемы()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");    
	Схема = ОбработкаОбъект.ПолучитьМакет("ГеографическаяСхема");
	Для каждого элемент из Схема.Слои.КартаСП.Объекты Цикл
		Элемент.Расшифровка = элемент.Значение;
	КонецЦикла;
	//Схема = новый ГеографическаяСхема;
	Карта = Схема;
КонецПроцедуры

&НаКлиенте     
Процедура КартаПриИзменении(Элемент)
	Сообщить("Изменено");
КонецПроцедуры

&НаКлиенте
Процедура КартаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Сообщить("расшифровка");
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьКарту(Команда)
	Элементы.Карта.Видимость = Не Элементы.Карта.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКарту(Команда)
	СозданиеСхемы()
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборКарты(Организация)
	
	// {Рарус ivaart IN-19390 Координаты объектов 2021.08.27
	МассивШироты  = Новый Массив;
	МассивДолготы = Новый Массив; 
	// }Рарус ivaart IN-19390 Координаты объектов 2021.08.27
	
	КартаAPI = "<html>
			|<head>
			|  <title>Custom Icons Tutorial - Leaflet</title>
			|  <meta charset=""utf-8"" />
			|  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
			|  <link rel=""shortcut icon"" type=""image/x-icon"" href=""docs/images/favicon.ico"" />
			|  <link rel=""stylesheet"" href=""https://unpkg.com/leaflet@1.0.3/dist/leaflet.css"" />
			|  <script src=""https://unpkg.com/leaflet@1.0.3/dist/leaflet.js""></script>
			|</head>
			|<body>
			|  <div id='map' style=""height: 100%; width: 100%;""></div>
			|	<script>
			|			var locations = [
			| ";
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпортивныеОбъекты.Ссылка КАК Ссылка,
		|	СпортивныеОбъекты.Широта КАК Широта,
		|	СпортивныеОбъекты.Долгота КАК Долгота,
		|	СпортивныеОбъекты.Наименование КАК Наименование,
		|	СпортивныеОбъекты.Владелец КАК Владелец
		|ИЗ
		|	Справочник.СпортивныеОбъекты КАК СпортивныеОбъекты
		|ГДЕ
		|	СпортивныеОбъекты.Владелец = &ТекущаяОрганизация
		|	И СпортивныеОбъекты.Широта <> 0
		|	И СпортивныеОбъекты.Долгота <> 0";
	Запрос.УстановитьПараметр("ТекущаяОрганизация", Организация);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Первый = истина;
	Пока Выборка.Следующий() Цикл
		Строка = СпортивныеОбъектыСписокЗапроса.Добавить();
		Строка.СпортивныйОбъект = Выборка.Ссылка;
		Строка.Организация = Выборка.Владелец;
		
		МассивДолготы.Добавить(Выборка.Долгота);
		МассивШироты.Добавить(Выборка.Широта);
		
		Строка.Расположение = СтрЗаменить(Выборка.Широта,",",".")+", "+СтрЗаменить(Выборка.Долгота,",",".");
		Имя = Выборка.Наименование;
		КартаAPI= картаAPI+?(Первый,"", ", ")+"["""+ОбработатьИмяОбъекта(Имя)+""","+Строка.Расположение+"]
		|";
		Первый = Ложь;
	КонецЦикла;
	
	//Получим настройки карты в зависимости от координат объектов
	НастройкиКарты = РассчитатьНастройкиКарты(МассивШироты, МассивДолготы);
	
	КартаAPI = картаAPI+"];
			|        var map = L.map('map').setView(["+НастройкиКарты.ЦентрШирота+", "+НастройкиКарты.ЦентрДолгота+"], "+НастройкиКарты.Зум+");
			|        mapLink = 
			|            '<a href=""http://openstreetmap.org"">OpenStreetMap</a>';
			|        L.tileLayer(
			|            'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
			|            attribution: '&copy; ' + mapLink + ' Contributors',
			|            maxZoom: 18,
			|            }).addTo(map);
			|			for (var i = 0; i < locations.length; i++) {
			|			marker = new L.marker([locations[i][1],locations[i][2]])
			//|				.bindPopup(locations[i][0]);
			|				.addTo(map);
			|				marker.on('click', function(e) {
			|			return1c(e.latlng.lat + ', ' + e.latlng.lng);
			|    });
			|		}
			|function return1c(data){
			|   try{
			|	 document.body.procParam = data;}
			|   catch{
			|alert('Error');}
			|};
			|	</script>
			|</body>
			|</html>";
КонецПроцедуры

// {Рарус ivaart IN-19390 Получение настроек карты на основе точек на карте 2021.08.27
&НаСервере
Функция РассчитатьНастройкиКарты(МассивШироты, МассивДолготы)
	НастройкиКарты = Новый Структура();
	
	//Базовые настройки карты
	ЦентрШирота = 65.0189;
	ЦентрДолгота = 82.9332;
	Зум = 3;
	
	//если объекты есть, то вычисляем новые параметры карты
	Если МассивШироты.Количество() <> 0 тогда
		//если объект один, то фокусируемся на нём, иначе вычисляем параметры карты
		Если МассивШироты.Количество() = 1 тогда
			ЦентрШирота = МассивШироты[0];
			ЦентрДолгота = МассивДолготы[0];
			Зум = 11;
		Иначе
			
			//определяем ширину и высоту карты
			НижнийКрай = МассивШироты[0];
			ВерхнийКрай = МассивШироты[0];
			Для индекс = 1 По МассивШироты.Количество()-1 Цикл
				НижнийКрай = Мин(НижнийКрай, МассивШироты[индекс]);
				ВерхнийКрай = Макс(ВерхнийКрай, МассивШироты[индекс]);
			КонецЦикла;
			
			ЛевыйКрай = МассивДолготы[0];
			ПравыйКрай = МассивДолготы[0];
			Для индекс = 1 По МассивДолготы.Количество()-1 Цикл
				ЛевыйКрай = Мин(ЛевыйКрай, МассивДолготы[индекс]);
				ПравыйКрай = Макс(ПравыйКрай, МассивДолготы[индекс]);
			КонецЦикла;

			//на основе ширины и высоты отмечаем центр карты
			ЦентрШирота = Окр((НижнийКрай+ВерхнийКрай)/2,10,1);
			ЦентрДолгота = Окр((ЛевыйКрай+ПравыйКрай)/2,10,1);
			
			//по соотношению сторон определяем зум карты 18 - максимально близко, 1 - максимально отдалённо
			ШиринаСоотношение = 11 - Окр((ПравыйКрай-ЛевыйКрай)*0.75);
			ВысотаСоотношение = 11 - Окр((ВерхнийКрай-НижнийКрай)*0.75);
			
			//берём наименьший зум, что бы уместились все объекты, но минимальный зум не может быть меньше 3
			Зум = Макс(Мин(ШиринаСоотношение, ВысотаСоотношение),3);
		КонецЕсли;	
	КонецЕсли;
	
	НастройкиКарты.Вставить("ЦентрШирота", СтрЗаменить(Строка(ЦентрШирота),",","."));
	НастройкиКарты.Вставить("ЦентрДолгота", СтрЗаменить(Строка(ЦентрДолгота),",","."));
	НастройкиКарты.Вставить("Зум", Строка(Зум));
	
	Возврат НастройкиКарты;
КонецФункции
// }Рарус ivaart IN-19390 Получение настроек карты на основе точек на карте 2021.08.27

// {Рарус ivaart IN-19390 Удаление из имени объекта запрещённых символов 2021.08.25
&НаСервере
Функция ОбработатьИмяОбъекта(Имя)
	МассивСимволов = новый Массив();
	МассивСимволов.Добавить("""");
	МассивСимволов.Добавить("-");
	МассивСимволов.Добавить("/");
	МассивСимволов.Добавить("\");
	МассивСимволов.Добавить("|");
	МассивСимволов.Добавить("«");
	МассивСимволов.Добавить("»");
	Для каждого Символ Из МассивСимволов Цикл
		Имя = СтрЗаменить(Имя, Символ, "");
	КонецЦикла;
	Возврат Имя;
КонецФункции
// }Рарус ivaart IN-19390 Удаление из имени объекта запрещённых символов 2021.08.25

&НаКлиенте
Процедура КартаAPIПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	ВыбранныеКоординаты = ДанныеСобытия.Document.body.procParam;
	Если ДанныеСобытия.Document.body.procParam <> ТекущиеКоординаты И ДанныеСобытия.Document.body.procParam <> Неопределено тогда
		ТекущиеКоординаты = ВыбранныеКоординаты;
		ТекущийСпортивныйОбъект = СпортивныеОбъектыСписокЗапроса.НайтиСтроки(Новый Структура("Расположение, Организация", ВыбранныеКоординаты, Организация))[0].СпортивныйОбъект;
		
		ТекущийСпортивныйОбъектСписокМест.Очистить();
		ЗаполнитьДанныеСО();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеСО();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестаЗанятий.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.МестаЗанятий КАК МестаЗанятий
	|ГДЕ
	|	МестаЗанятий.Владелец = &ТекущийСпортивныйОбъект";
	
	Запрос.УстановитьПараметр("ТекущийСпортивныйОбъект", ТекущийСпортивныйОбъект);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		ЗаголовокГруппы = "";
		Пока Выборка.Следующий() Цикл
			ТекущийСпортивныйОбъектСписокМест.Добавить(Выборка.Ссылка);
			ЗаголовокГруппы = ЗаголовокГруппы + ?(ЗаголовокГруппы = "","",", ") + Выборка.Ссылка;
		КонецЦикла;
	Иначе 
		ЗаголовокГруппы = "<...>";
	КонецЕсли;
	Элементы.ГруппаМестаЗанятийСОСписок.Заголовок = ЗаголовокГруппы;	
	
	Менеджер = новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Менеджер;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпортивныеОбъекты.Тренер КАК Тренер
		|ПОМЕСТИТЬ Тренеры
		|ИЗ
		|	РегистрСведений.СпортивныеОбъекты КАК СпортивныеОбъекты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КадровыеИсторииТренеров.СрезПоследних КАК КадровыеИсторииТренеровСрезПоследних
		|		ПО (СпортивныеОбъекты.Тренер = КадровыеИсторииТренеровСрезПоследних.Тренер
		|				И СпортивныеОбъекты.Организация = КадровыеИсторииТренеровСрезПоследних.Организация)
		|ГДЕ
		|	СпортивныеОбъекты.Организация = &Организация
		|	И СпортивныеОбъекты.СпортивныйОбъект = &СпортивныйОбъект
		|	И КадровыеИсторииТренеровСрезПоследних.ВидСобытия <> &ВидСобытия
		|
		|СГРУППИРОВАТЬ ПО
		|	СпортивныеОбъекты.Тренер";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СпортивныйОбъект", ТекущийСпортивныйОбъект);
	Запрос.УстановитьПараметр("ВидСобытия", Перечисления.ВидыКадровыхСобытий.Увольнение);
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Менеджер;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Тренеры.Тренер) КАК Тренер
		|ИЗ
		|	Тренеры КАК Тренеры";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() тогда
		ТекущийСпортОбъектКолИнструкторов = РезультатЗапроса.Выгрузить().Получить(0).Тренер;
	Иначе 
		ТекущийСпортОбъектКолИнструкторов = 0;
	КонецЕсли;
	// {Рарус adilas #20292 -РС Руководитель. Спортивные объекты. Количество спортсменов. 2021.10.07	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Менеджер;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Тренеры.Тренер КАК Тренер
		|ПОМЕСТИТЬ МенеджерТренеры
		|ИЗ
		|	Тренеры КАК Тренеры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МенеджерТренеры.Тренер КАК Тренер
		|ПОМЕСТИТЬ ВТ_Тренеры
		|ИЗ
		|	МенеджерТренеры КАК МенеджерТренеры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.Спортсмен КАК Спортсмен,
		|	СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ВидСпорта КАК ВидСпорта
		|ПОМЕСТИТЬ ВТ_СоставУчащихся
		|ИЗ
		|	РегистрСведений.СоставУчащихсяСпортивногоУчреждения.СрезПоследних(
		|			,
		|			Организация = &Организация
		|				И Спортсмен.СтатусСпортсмена <> ЗНАЧЕНИЕ(Перечисление.СтатусыСпортсменов.СпортсменДругогоСпортивногоУчреждения)) КАК СоставУчащихсяСпортивногоУчрежденияСрезПоследних
		|ГДЕ
		|	(СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения > &ТекущаяДата
		|			ИЛИ СоставУчащихсяСпортивногоУчрежденияСрезПоследних.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Спортсмен) КАК Спортсмен
		|ИЗ
		|	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(
		|			,
		|			Организация = &Организация
		|				И (Спортсмен, ВидСпорта) В
		|					(ВЫБРАТЬ
		|						ВТ_СоставУчащихся.Спортсмен КАК Спортсмен,
		|						ВТ_СоставУчащихся.ВидСпорта КАК ВидСпорта
		|					ИЗ
		|						ВТ_СоставУчащихся КАК ВТ_СоставУчащихся)) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
		|ГДЕ
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Тренер В
		|			(ВЫБРАТЬ
		|				ВТ_Тренеры.Тренер КАК Тренер
		|			ИЗ
		|				ВТ_Тренеры КАК ВТ_Тренеры)";
	// }Рарус adilas #20292 -РС Руководитель. Спортивные объекты. Количество спортсменов. 2021.10.07
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
		
	Если Не РезультатЗапроса.Пустой() тогда
		ТекущийСпортОбъектКолСпортсменов = РезультатЗапроса.Выгрузить().Получить(0).Спортсмен;
	Иначе 
		ТекущийСпортОбъектКолСпортсменов = 0;
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ТекущийСпортивныйОбъектСписокМестЗначениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Попытка
		ПоказатьЗначение(,элементы.ТекущийСпортивныйОбъектСписокМест.ТекущиеДанные.Значение);
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеСО(Команда)
	
	СО = ТекущийСпортивныйОбъект;
	Если СО <> Неопределено И Не ПустаяСтрока(СО) тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СпортивныйОбъект", СО);
		ПараметрыФормы.Вставить("Организация", Организация);
			
		ОткрытьФорму("ОбщаяФорма.ПланировщикРасписанияПоМестам", ПараметрыФормы);
	// {Рарус adilas #21494 -РС Руководитель. Расписание. 2021.10.19	
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Выберите спортивный объект на карте, чтобы посмотреть его расписание!'"));
	// }Рарус adilas #21494 -РС Руководитель. Расписание. 2021.10.19	
	КонецЕсли;

КонецПроцедуры
#КонецОбласти 
// {Рарус ivaart IN-18904 Раздел - отчёты 2021.07.30
&НаКлиенте 
Процедура Отчёты(Команда)
	//Элементы.ГруппаПраваяНавигация.Видимость = Не Элементы.ГруппаПраваяНавигация.Видимость;
	//Если Элементы.ГруппаПраваяНавигация.Видимость тогда
	//	Элементы.ОтчётыКнопка.ЦветФона = WebЦвета.БледноБирюзовый;
	//Иначе
	//	Элементы.ОтчётыКнопка.ЦветФона = WebЦвета.Белый;
	//КонецЕсли;
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОтчёты;
	ВыборАктивногоРаздела(Элементы.ОтчётыКнопка);
КонецПроцедуры
// }Рарус ivaart IN-18904 Раздел - отчёты 2021.07.30

// {Рарус ivaart IN-20681 Страхование в карточке спортсмена 2021.09.29
&НаКлиенте
Процедура ТекущийСпортсменНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыСпортсмена = новый Структура("Ключ, Организация", ТекущийСпортсмен, Организация);
	ОткрытьФорму("Справочник.Спортсмены.Форма.ФормаЭлемента", ПараметрыСпортсмена);
	
КонецПроцедуры

// {Рарус dotere #23010 -Убирает тренеров из другого спорт учереждения если отбор пустой 2021.12.16
&НаКлиенте
Процедура СтатусОтборТренерыОчистка(Элемент, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//ОтборТренерСтатус = ПолучитьПустуюСсылкуСтатуса();
	//ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокТренеры, "Статус");
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокТренеры, "Статус", ПолучитьСтатусТренера(), ВидСравненияКомпоновкиДанных.НеРавно);
КонецПроцедуры

&НаСервере
Функция ПолучитьПустуюСсылкуСтатуса()
	Возврат Перечисления.СтатусыТренеров.ПустаяСсылка();
КонецФункции

&НаКлиенте
Процедура ДиаграммаКоличествоНаВидСпортаВидыСпортаПриАктивизации(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры
// }Рарус dotere #23010 -Убирает тренеров из другого спорт учереждения если отбор пустой 2021.12.16

