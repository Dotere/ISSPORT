
&НаСервере
Процедура ЗаполнитьПроводимыеСоревнованияНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроводимыеСоревнование.Ссылка КАК Ссылка,
		|	ПроводимыеСоревнование.Дата КАК Дата,
		|	ПроводимыеСоревнование.Организация КАК Организация
		|ИЗ
		|	Документ.Соревнование КАК ПроводимыеСоревнование
		|ГДЕ
		|	ПроводимыеСоревнование.Организация = &Организация
		|	И ПроводимыеСоревнование.Дата МЕЖДУ &НачалоПериода И &КонецПериода";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Док = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Набор = РегистрыСведений.УчастникиСоревнований.СоздатьНаборЗаписей();
		Набор.Отбор.Регистратор.Установить(Док.Ссылка);
		Набор.Прочитать();
		Если Набор.Количество() Тогда
			Запись = Набор[0];
			
		Если НЕ ЗначениеЗаполнено(Док.ДатаОкончанияСоревнования) Тогда 
			Док.ДатаОкончанияСоревнования = Док.ДатаНачалаСоревнования;
		КонецЕсли;
			Запись.ДатаОкончанияСоревнования = Док.ДатаОкончанияСоревнования;
		Если Док.КоличествоПараметров > 1 Тогда
			Если Док.ТипРезультата = Перечисления.ТипыРезультатов.Время Тогда
				Док.ТипПодсчетаРезультата = Перечисления.ТипПодсчетаРезультата.МинимальноеЗначение;
			ИначеЕсли Док.ТипРезультата = Перечисления.ТипыРезультатов.Число Тогда
				Док.ТипПодсчетаРезультата = Перечисления.ТипПодсчетаРезультата.МаксимальноеЗначение;
			КонецЕсли;
		КонецЕсли;
	Док.ОбменДанными.Загрузка = Истина;
		Попытка
			Док.Записать(РежимЗаписиДокумента.Запись);
			Набор.Записать();
			Сообщить ("Документ " + Док + " успешно записан!");
	    Исключение
	        Сообщить ("Не удалось записать " + Док);
		КонецПопытки;
		КонецЕсли;
	КонецЦикла;

	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПроводимыеСоревнования(Команда)
	ЗаполнитьПроводимыеСоревнованияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатыДокументовОснованийНаСервере()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПротоколСоревнования.Ссылка КАК Ссылка,
		|	ПротоколСоревнования.Дата КАК Дата,
		|	ПротоколСоревнования.Организация КАК Организация
		|ИЗ
		|	Документ.ПротоколСоревнования КАК ПротоколСоревнования
		|ГДЕ
		|	ПротоколСоревнования.Организация = &Организация
		|	И ПротоколСоревнования.Дата МЕЖДУ &НачалоПериода И &КонецПериода";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Док = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Набор = РегистрыСведений.ИтоговыеРезультатыСоревнования.СоздатьНаборЗаписей();
		Набор.Отбор.Регистратор.Установить(Док.Ссылка);
		Набор.Прочитать();
		Если Набор.Количество() Тогда
			Запись = Набор[0];
		Если НЕ ЗначениеЗаполнено(Док.ДатаОкончанияСоревнования) Тогда
			Док.ДатаОкончанияСоревнования = Док.ДокументОснование.ДатаОкончанияСоревнования;
		КонецЕсли;
			Запись.ДатаОкончанияСоревнования = Док.ДатаОкончанияСоревнования;
		Если НЕ ЗначениеЗаполнено(Док.ДатаНачалаСоревнования) Тогда
			Док.ДатаНачалаСоревнования = Док.ДокументОснование.ДатаНачалаСоревнования;
		КонецЕсли;
			Запись.ДатаНачалаСоревнования = Док.ДатаНачалаСоревнования;
		Док.ОбменДанными.Загрузка = Истина;
		Попытка
			Док.Записать(РежимЗаписиДокумента.Запись);
			Набор.Записать();
			Сообщить ("Документ " + Док + " успешно записан!");
	    Исключение
	        Сообщить ("Не удалось записать " + Док);
		КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДатыДокументовОснований(Команда)
	ЗаполнитьДатыДокументовОснованийНаСервере();
КонецПроцедуры
