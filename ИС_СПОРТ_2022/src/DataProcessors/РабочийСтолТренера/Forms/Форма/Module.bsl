#Область ОбрабочикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГруппаНастройки.Видимость = РольДоступна("ПолныеПрава");
	
	ТекущееСпортивноеУчреждение = ПараметрыСеанса.ТекущаяОрганизация;
	
	УстановитьСписокВыбораУчебногоГода();
	ТекущийТренер = ПараметрыСеанса.ТекущийТренер;
	ТипЗаявки = "1";
   	
	ЗаполнитьТаблицуСпортсменовНаСервере();  
	
	УстановитьОтборНаДинамическийСписок("СписокЗаявок", "Тренер"               , ТекущийТренер, ?(ЗначениеЗаполнено(ТекущийТренер),Истина,Ложь));
	УстановитьОтборНаДинамическийСписок("СписокЗаявок", "ТипСоревнования"      , ТипЗаявки);
	УстановитьОтборНаДинамическийСписок("СписокЗаявок", "УчебныйГод"           , УчебныйГод, ?(ЗначениеЗаполнено(УчебныйГод),Истина,Ложь));
	УстановитьОтборНаДинамическийСписок("СписокЗаявок", "Организация"          , ТекущееСпортивноеУчреждение, ?(ЗначениеЗаполнено(ТекущееСпортивноеУчреждение),Истина,Ложь));
	
	// {Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.18
	Если НЕ УчетСпортсменовВызовСервера.ТекущиеПараметрыФО(ТекущееСпортивноеУчреждение).ВозрастныеГруппыОрганизация Тогда
		Элементы.ГруппаВозрастныеГруппы.Видимость 							= Ложь;
		Элементы.СписокСпортсменовМеждународнаяВозрастнаяГруппа.Видимость 	= Ложь;
	КонецЕсли;
	// }Рарус adilas #11068 -Возрастные группы в соревновании 2020.11.18
	
	// {Рарус adilas #16226 -Электронный журнал посещений 2021.05.25
	ТабелиПосещений.Параметры.УстановитьЗначениеПараметра("Тренер", (?(ЗначениеЗаполнено(ТекущийТренер), ТекущийТренер, Null)));
	ТабелиПосещений.Параметры.УстановитьЗначениеПараметра("Организация", (?(ЗначениеЗаполнено(ТекущееСпортивноеУчреждение), ТекущееСпортивноеУчреждение, Null)));
	// }Рарус adilas #16226 -Электронный журнал посещений 2021.05.25
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтборНаСписокСпортсменов(СформироватьМассивПараметров());
	
	УстановитьВидимостьДоступностьЭлементовПоТипуЗаявки();
	
	//Элементы.КнопкаТабели.ЦветФона = ОбщегоНазначенияКлиент.ЦветСтиля("ЦвеФонаАктивнойКнопкиОбщая");
	//Элементы.ГруппаРасписаниеОбъектов.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВключениеСпортсменовВГруппу" Тогда
		ЗаполнитьТаблицуСпортсменовНаСервере();   
		ОтборНаСписокСпортсменов(СформироватьМассивПараметров());
	КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовШапки

&НаКлиенте
Процедура УчебныйГодПриИзменении(Элемент)
	
	УстановитьОтборНаДинамическийСписок("СписокЗаявок" , "УчебныйГод" , УчебныйГод, ЗначениеЗаполнено(УчебныйГод));
	ОтборНаСписокСпортсменов(СформироватьМассивПараметров());
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийТренерПриИзменении(Элемент)
	
	УстановитьОтборНаДинамическийСписок("СписокЗаявок", "Тренер"       , ТекущийТренер, ЗначениеЗаполнено(ТекущийТренер));
	
	ЗаполнитьОрганизациюТренера();
	
	Если НЕ ПоказыватьСпортсменовПоВсемуСпортивномуУчреждению Тогда
	   ОтборНаСписокСпортсменов(СформироватьМассивПараметров());
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееСпортивноеУчреждениеПриИзменении(Элемент)
	
	УстановитьСписокВыбораУчебногоГода();
	УстановитьОтборНаДинамическийСписок("СписокЗаявок", "Организация"  , ТекущееСпортивноеУчреждение, ЗначениеЗаполнено(ТекущееСпортивноеУчреждение));
	ОтборНаСписокСпортсменов(СформироватьМассивПараметров());
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееСоревнованиеПриИзменении(Элемент)
	
	УстановитьОтборНаДинамическийСписок("СписокЗаявок" , "Соревнование", ТекущееСоревнование, ЗначениеЗаполнено(ТекущееСоревнование));
	ЗаполнитьСписокВозрастныхГруппПоСоревнованию();
	//{Рарус lobash IN-9305 14.09.20 
	ЗаполнитьСписокРазрядовПоСоревнованию();
	//}Рарус lobash IN-9305 14.09.20 
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьСпортсменовПоВсемуСпортивномуУчреждениюПриИзменении(Элемент)
	
	ОтборНаСписокСпортсменов(СформироватьМассивПараметров());
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗаявкиПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьЭлементовПоТипуЗаявки();
	ЗаполнитьСписокВозрастныхГрупп();
	УстановитьОтборНаДинамическийСписок("СписокЗаявок" , "ТипСоревнования" , ТипЗаявки);
	УстановитьОтборНаДинамическийСписок("СписокЗаявок" , "Соревнование"    , ТекущееСоревнование, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущиеНормативыПриИзменении(Элемент)
	
	СформироватьМассивЗаявокПоТипуНорматива();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличныхЧастей

&НаКлиенте
Процедура ВозрастныеГруппыИспользоватьПриИзменении(Элемент)
	
	ОтборНаСписокСпортсменов(СформироватьМассивПараметров());	
	
КонецПроцедуры

//{Рарус lobash IN-9305 14.09.20
&НаКлиенте
Процедура РазрядыСпортсменовИспользоватьПриИзменении(Элемент)
	
	ОтборНаСписокСпортсменов(СформироватьМассивПараметров());	
	
КонецПроцедуры
//}Рарус lobash IN-9305 14.09.20

&НаКлиенте
Процедура СписокСпортсменовВключатьВЗаявкуПриИзменении(Элемент)
	
	ТекДанные = Элементы.СписокСпортсменов.ТекущиеДанные;
	СписокСпортсменовОсновная[ТекДанные.Индекс].ВключатьВЗаявку = ТекДанные.ВключатьВЗаявку;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура СоздатьЗаявку(Команда)
	
	Отказ = Ложь;
	Для Каждого строкаСпортсмен Из СписокСпортсменовОсновная.НайтиСтроки(Новый Структура("ВключатьВЗаявку", Истина)) Цикл
		Если НЕ строкаСпортсмен.ДатаИсключенияИзГруппы = Дата(1,1,1) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Спортсмен %1 исключен из команды.
				|Нельзя выбирать исключенных спортсменов!'"),
				строкаСпортсмен.Спортсмен);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"СписокСпортсменов["+СокрЛП(строкаСпортсмен.Индекс)+"].Спортсмен");
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;	
	
	МассивСпортсменов = Новый Массив;
	Для Каждого строкаСпортсмен Из СписокСпортсменовОсновная.НайтиСтроки(Новый Структура("ВключатьВЗаявку", Истина)) Цикл
		МассивСпортсменов.Добавить(Новый Структура("Спортсмен, МеждународнаяВозрастнаяГруппа", строкаСпортсмен.Спортсмен, строкаСпортсмен.МеждународнаяВозрастнаяГруппа));
	КонецЦикла;	
	
	ПараметрыФормы = Новый Структура("БлокироватьОсновныеРеквизиты, УчебныйГод, Тренер, Организация, СписокСпортсменов", 
	    Истина, УчебныйГод, ТекущийТренер, ТекущееСпортивноеУчреждение, МассивСпортсменов);
		
	Если ТипЗаявки = "1" Тогда
		ИмяФормыДокумента = "ЗаявкаНаПроведениеСоревнования";
		ПараметрыФормы.Вставить("Соревнование", ТекущееСоревнование);
	Иначе
		ИмяФормыДокумента = "ЗаявкаНаПроведениеСоревнованияСдачаНормативаОФП";
        ПараметрыФормы.Вставить("СписокНормативов", ТекущиеНормативы.ВыгрузитьЗначения());
		Если ТипЗаявки = "2" Тогда
			ПараметрыФормы.Вставить("ТипСоревнования", ПредопределенноеЗначение("Перечисление.ТипыСдачиНормативов.Соревнование"));
		Иначе
			ПараметрыФормы.Вставить("ТипСоревнования", ПредопределенноеЗначение("Перечисление.ТипыСдачиНормативов.Норматив"));
		КонецЕсли;	
	КонецЕсли;	
			
	ОткрытьФорму("Документ." + ИмяФормыДокумента + ".Форма.ФормаДокумента", ПараметрыФормы);	
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСпортсмена(Команда)
	
	Если СписокСпортсменов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	массивСпортсменов = Новый Массив;
	Для Каждого строкаСпортсмен Из СписокСпортсменовОсновная Цикл
		Если строкаСпортсмен.ВключатьВЗаявку Тогда
			массивСпортсменов.Добавить(строкаСпортсмен.Спортсмен);
		КонецЕсли;	
	КонецЦикла;	
	
	Если массивСпортсменов.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрано ни одного спортсмена!",,"СписокСпортсменов");
		Возврат;
	КонецЕсли;	
	
	ПараметрыФормы = Новый Структура("УчебныйГод, Организация, Тренер, массивСпортсменов", УчебныйГод, ТекущееСпортивноеУчреждение, ТекущийТренер, массивСпортсменов);
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьСпортсменаЗавершение", ЭтотОбъект);
	ОткрытьФорму("Документ.ВключениеСпортсменовВГруппу.Форма.ФормаДокумента", ПараметрыФормы,,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьСпортсмена(Команда)
	
	Если СписокСпортсменов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	массивДокументов = ЗаполнитьДанныеДляДокументаИсключениеИзГруппы();	
	
	Если массивДокументов.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрано ни одного спортсмена!",,"СписокСпортсменов");
		Возврат;
	КонецЕсли;
		
	Для Каждого структураДокумент Из массивДокументов Цикл
		
		ПараметрыФормы = Новый Структура("УчебныйГод, Организация, Тренер, Группа, массивСпортсменов", УчебныйГод, ТекущееСпортивноеУчреждение, ТекущийТренер, структураДокумент.Группа, структураДокумент.массивСпортсменов);
		ОткрытьФорму("Документ.ИсключениеСпортсменовИзГруппы.Форма.ФормаДокумента", ПараметрыФормы,,,,,);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсеВозрастныеГруппы(Команда)
	УстановитьЗначениеВыбораВозратснойГруппы(Истина);
КонецПроцедуры

&НаКлиенте
Процедура УбратьВсеВозрастныеГруппы(Команда)
	УстановитьЗначениеВыбораВозратснойГруппы(Ложь);
КонецПроцедуры

//{Рарус lobash IN-9305 14.09.20
&НаКлиенте
Процедура ВыбратьВсеРазряды(Команда)
	УстановитьЗначениеВыбораРазряда(Истина);
КонецПроцедуры

&НаКлиенте
Процедура УбратьВсеРазряды(Команда)
	УстановитьЗначениеВыбораРазряда(Ложь);
КонецПроцедуры
//}Рарус lobash IN-9305 14.09.20

&НаКлиенте
Процедура ВыбратьВсехСпортсменов(Команда)
	УстановитьЗначениеВыборкаСпортсменов(Истина);
КонецПроцедуры

&НаКлиенте
Процедура УбратьВсехСпортсменов(Команда)
	УстановитьЗначениеВыборкаСпортсменов(Ложь);
КонецПроцедуры

// {Рарус adilas #9248 -Вынести команду печать заявки на форму рабочего стола тренера 2020.09.08
//
&НаКлиенте
Процедура ПечатьЗаявки(Команда)
	// Массив выделенных строк из списка СоставКоманд.
	ДанныеПечати = Элементы.СписокЗаявок.ВыделенныеСтроки;
	
	МассивЗаявокСоревнований 	= Новый Массив;  
	//Цикл по разделению документов
	Для каждого ОбъектПечати Из ДанныеПечати Цикл
	
		Если ТипЗнч(ОбъектПечати) = Тип("ДокументСсылка.ЗаявкаНаПроведениеСоревнования") Тогда
			МассивЗаявокСоревнований.Добавить(ОбъектПечати); 	         
		ИначеЕсли ТипЗнч(ОбъектПечати) = Тип("ДокументСсылка.ЗаявкаНаПроведениеСоревнованияСдачаНормативаОФП") Тогда 			
			ОбщегоНазначенияКлиент.СообщитьПользователю("Для данного типа документа печать заявки не предусмотрена");	
		КонецЕсли; 
	
	КонецЦикла;  
	
	#Если НЕ ВебКлиент Тогда
		Если МассивЗаявокСоревнований.Количество() <> 0 Тогда 
			Печать("Документ.ЗаявкаНаПроведениеСоревнования", "ЗаявкаWord", МассивЗаявокСоревнований, "Заявка word");
		КонецЕсли;
	#Иначе
		Если МассивЗаявокСоревнований.Количество() <> 0 Тогда	
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати
			(
			"Документ.ЗаявкаНаПроведениеСоревнования",
			"ЗаявкаТабДок",
			МассивЗаявокСоревнований,
			Неопределено,
			Неопределено
			);
		КонецЕсли;
	#КонецЕсли
		
КонецПроцедуры

&НаКлиенте
Процедура Печать(ИмяМенеджераПечати, ИмяМакета, ДанныеПечати, НаименованиеМакета)
	
	Если ДанныеПечати.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;   
		
	МакетИДанныеОбъекта = УправлениеПечатьюВызовСервера.МакетыИДанныеОбъектовДляПечати(ИмяМенеджераПечати, ИмяМакета, ДанныеПечати);
	
	Вывести(ДанныеПечати, МакетИДанныеОбъекта, ИмяМакета, МакетИДанныеОбъекта.ЛокальныйКаталогФайловПечати, НаименованиеМакета);
	
КонецПроцедуры

&НаКлиенте
Процедура Вывести(ДанныеПечати, МакетИДанныеОбъекта, ИмяМакета, ЛокальныйКаталогФайловПечати, НаименованиеМакета)
	
	ТипМакета				= МакетИДанныеОбъекта.Макеты.ТипыМакетов[ИмяМакета];
	ДвоичныеДанныеМакетов	= МакетИДанныеОбъекта.Макеты.ДвоичныеДанныеМакетов;
	Области					= МакетИДанныеОбъекта.Макеты.ОписаниеОбластей;
		
	Макет = УправлениеПечатьюКлиент.ИнициализироватьМакетОфисногоДокумента(ДвоичныеДанныеМакетов[ИмяМакета], ТипМакета, ИмяМакета);
	Если Макет = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытьОкноПечатнойФормы = Ложь;
	
	Для Каждого ОбъектДанных Из ДанныеПечати Цикл
		
		ДанныеОбъектаМассив     = МакетИДанныеОбъекта.Данные[ОбъектДанных][ИмяМакета];
		
		Для Каждого ДанныеОбъекта Из  ДанныеОбъектаМассив Цикл
			
			Попытка
				
				ПечатнаяФорма = УправлениеПечатьюКлиент.ИнициализироватьПечатнуюФорму(ТипМакета, Макет.НастройкиСтраницыМакета);
				Если ПечатнаяФорма = Неопределено Тогда
					УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
					Возврат;                                                             
				КонецЕсли;
				
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Области[ИмяМакета]["Заголовок"]);
				УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта.Заголовок, Ложь);
				
				Для Каждого СтрокаТаблицы Из ДанныеОбъекта.СтрокиТаблицы Цикл
					Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Области[ИмяМакета]["СтрокаТаблицы"]);
					УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, СтрокаТаблицы, Ложь);		
				КонецЦикла;
				
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Области[ИмяМакета]["Подвал"]);
				УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта.Подвал, Ложь);	
				
				УправлениеПечатьюКлиент.ПоказатьДокумент(ПечатнаяФорма);
				
			Исключение
				ОбщегоНазначенияКлиент.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗакрытьОкноПечатнойФормы = Истина;
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЦикла;
	
	УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма, ЗакрытьОкноПечатнойФормы);
	УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
	
КонецПроцедуры

// }Рарус adilas #9248 -Вынести команду печать заявки на форму рабочего стола тренера 2020.09.08

// {Рарус adilas #16226 -Электронный журнал посещений 2021.06.11
&НаКлиенте
Процедура ПоказатьТабели(Команда)
	
	Если Элементы.ГруппаТабели.Видимость Тогда
		
		Элементы.ГруппаТабели.Видимость = Ложь;
		Элементы.КнопкаТабели.ЦветФона = ОбщегоНазначенияКлиент.ЦветСтиля("ЦвеФонаКнопкиОбщая");
	Иначе
		Элементы.ГруппаТабели.Видимость = Истина;
		Элементы.КнопкаТабели.ЦветФона = ОбщегоНазначенияКлиент.ЦветСтиля("ЦвеФонаАктивнойКнопкиОбщая");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьРасписания(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Тренер", ТекущийТренер); 
	
	ОткрытьФорму("ОбщаяФорма.ПланировщикРасписанияПоМестам", ПараметрыФормы);
	
КонецПроцедуры

// }Рарус adilas #16226 -Электронный журнал посещений 2021.06.11

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОтборНаСписокСпортсменов

&НаКлиенте
Процедура УстановитьЗначениеВыборкаСпортсменов(Значение)
	
	Для Каждого строкаСпортсмен Из СписокСпортсменов Цикл
		строкаСпортсмен.ВключатьВЗаявку = Значение;
		СписокСпортсменовОсновная[строкаСпортсмен.Индекс].ВключатьВЗаявку = Значение;
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьТаблицуСпортсменовНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДатаСеанса());	
	Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	Спортсмены.Ссылка КАК Ссылка,
	                |	МеждународныеВозрастныеГруппы.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа,
	                |	СоставУчащихсяСпортивногоУчреждения.Организация КАК Организация,
	                |	ЕСТЬNULL(РегистрацияДопусков.ДействуетДо, ДАТАВРЕМЯ(1, 1, 1)) КАК Допуск,
	                |	Разряды.Разряд КАК Разряд
	                |ПОМЕСТИТЬ ВТ_СписокСпортсменов
	                |ИЗ
	                |	Справочник.Спортсмены КАК Спортсмены
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МеждународныеВозрастныеГруппы.СрезПоследних КАК МеждународныеВозрастныеГруппы
	                |		ПО Спортсмены.Ссылка = МеждународныеВозрастныеГруппы.Спортсмен
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставУчащихсяСпортивногоУчреждения КАК СоставУчащихсяСпортивногоУчреждения
	                |		ПО Спортсмены.Ссылка = СоставУчащихсяСпортивногоУчреждения.Спортсмен
	                |			И (СоставУчащихсяСпортивногоУчреждения.ДатаНачалаОбучения <= &ТекущаяДата)
	                |			И (СоставУчащихсяСпортивногоУчреждения.ДатаОкончанияОбучения >= &ТекущаяДата
	                |				ИЛИ СоставУчащихсяСпортивногоУчреждения.ДатаОкончанияОбучения = ДАТАВРЕМЯ(1, 1, 1))
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияДопусковКСпортивнымСоревнованиям.СрезПоследних КАК РегистрацияДопусков
	                |		ПО Спортсмены.Ссылка = РегистрацияДопусков.Спортсмен
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодтвержденныеРазрядыСпортсменов.СрезПоследних КАК Разряды
	                |		ПО Спортсмены.Ссылка = Разряды.Спортсмен
	                |			И (Разряды.ДатаПрисвоения <= &ТекущаяДата
	                |				ИЛИ Разряды.ДатаПрисвоения = ДАТАВРЕМЯ(1, 1, 1))
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	ВТ_СписокСпортсменов.Ссылка КАК Ссылка,
	                |	ВТ_СписокСпортсменов.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа,
	                |	ВТ_СписокСпортсменов.Организация КАК Организация,
	                |	ВТ_СписокСпортсменов.Допуск КАК Допуск,
	                |	ВТ_СписокСпортсменов.Разряд КАК Разряд,
	                |	СоставГруппы.Группа КАК Группа,
	                |	СоставГруппы.ТренерСборной КАК ТренерСборной,
	                |	СоставГруппы.УчебныйГод КАК УчебныйГод,
	                |	СоставГруппы.ДатаИсключенияИзГруппы КАК ДатаИсключенияИзГруппы
	                |ПОМЕСТИТЬ ВТ_Данные
	                |ИЗ
	                |	ВТ_СписокСпортсменов КАК ВТ_СписокСпортсменов
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставГруппы.СрезПоследних(, ) КАК СоставГруппы
	                |		ПО ВТ_СписокСпортсменов.Ссылка = СоставГруппы.Спортсмен
	                |			И ВТ_СписокСпортсменов.Организация = СоставГруппы.Организация
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_Данные.Ссылка КАК Спортсмен,
	                |	ВТ_Данные.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа,
	                |	ВТ_Данные.Организация КАК Организация,
	                |	ВТ_Данные.Допуск КАК Допуск,
	                |	ВТ_Данные.Разряд КАК Разряд,
	                |	ВТ_Данные.Группа КАК Группа,
	                |	ВТ_Данные.ТренерСборной КАК ТренерСборной,
	                |	ВТ_Данные.УчебныйГод КАК УчебныйГод,
	                |	ВТ_Данные.ДатаИсключенияИзГруппы КАК ДатаИсключенияИзГруппы,
	                |	ЛичныйТренерСпортсмена.Тренер КАК ЛичныйТренер
	                |ИЗ
	                |	ВТ_Данные КАК ВТ_Данные
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЛичныйТренерСпортсмена КАК ЛичныйТренерСпортсмена
	                |		ПО ВТ_Данные.Организация = ЛичныйТренерСпортсмена.Организация
	                |			И ВТ_Данные.УчебныйГод = ЛичныйТренерСпортсмена.УчебныйГод
	                |			И ВТ_Данные.Группа = ЛичныйТренерСпортсмена.Группа
	                |			И ВТ_Данные.Ссылка = ЛичныйТренерСпортсмена.Спортсмен";
	
	СписокСпортсменовОсновная.Очистить();
	результатОсновной = Запрос.Выполнить().Выгрузить();
	
	Для Индекс  = 0 По результатОсновной.Количество()-1 Цикл
		стрСписокСпортсменовОсновная = СписокСпортсменовОсновная.Добавить();
		ЗаполнитьЗначенияСвойств(стрСписокСпортсменовОсновная,результатОсновной[Индекс]);
		стрСписокСпортсменовОсновная.Индекс = Индекс;
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ОтборНаСписокСпортсменов(МассивОтборов)
	
	СписокСпортсменов.Очистить();
	
	Если МассивОтборов.Количество() = 0 Тогда
		СписокСпортсменов.Загрузить(СписокСпортсменовОсновная.Выгрузить());
		Возврат
	КонецЕсли;	
	
	Для Каждого строкаСписокСпортсменовОсновная Из СписокСпортсменовОсновная Цикл
		ДобавлятьСтроку = Истина;
		Для Каждого структураОтбор Из МассивОтборов Цикл
			Если НЕ ДобавлятьСтроку Тогда
				Прервать;
			КонецЕсли;	
			Если структураОтбор.Свойство("массивВозрастныхГрупп") Или структураОтбор.Свойство("МассивРазрядовСпортсменов") Тогда
				Если структураОтбор.Свойство("массивВозрастныхГрупп") Тогда
					ГруппаСоответствует = Ложь;
					Для Каждого ЗначениеВозрГруппы Из структураОтбор.массивВозрастныхГрупп Цикл
						Если ЗначениеВозрГруппы = строкаСписокСпортсменовОсновная.МеждународнаяВозрастнаяГруппа Тогда
							ГруппаСоответствует = Истина;
							Прервать;
						КонецЕсли;	
					КонецЦикла;
					ДобавлятьСтроку = ГруппаСоответствует;
				КонецЕсли;
				//{Рарус lobash IN-9305 14.09.20
				Если СтруктураОтбор.Свойство("МассивРазрядовСпортсменов") Тогда
					РазрядСоответствует = Ложь;
					Для Каждого ЗначениеРазряда Из СтруктураОтбор.МассивРазрядовСпортсменов Цикл
						Если ЗначениеРазряда = строкаСписокСпортсменовОсновная.Разряд Тогда
							РазрядСоответствует = Истина;
							Прервать;
						КонецЕсли;	
					КонецЦикла;
					ДобавлятьСтроку = РазрядСоответствует;
				КонецЕсли;
				//}Рарус lobash IN-9305 14.09.20
			Иначе
				Если структураОтбор.Свойство("ЛичныйТренер") ИЛИ структураОтбор.Свойство("ТренерСборной") Тогда
					Если строкаСписокСпортсменовОсновная.ЛичныйТренер = структураОтбор.ЛичныйТренер ИЛИ
						строкаСписокСпортсменовОсновная.ТренерСборной = структураОтбор.ТренерСборной Тогда
						Продолжить;
					Иначе
						ДобавлятьСтроку = Ложь;
						Прервать;
					КонецЕсли;
				Иначе	 
					Для Каждого КлючЗначение Из структураОтбор Цикл
						Если строкаСписокСпортсменовОсновная[КлючЗначение.Ключ] <> КлючЗначение.Значение Тогда
							ДобавлятьСтроку = Ложь;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если ДобавлятьСтроку Тогда
			строкаСписокСпортсменов = СписокСпортсменов.Добавить();
			ЗаполнитьЗначенияСвойств(строкаСписокСпортсменов,строкаСписокСпортсменовОсновная);
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьДанныеДляДокументаИсключениеИзГруппы()
	
	МассивГрупп = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанных", СписокСпортсменовОсновная.Выгрузить()); 
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДанных.Спортсмен КАК Спортсмен,
	               |	ТаблицаДанных.ВключатьВЗаявку КАК ВключатьВЗаявку,
	               |	ТаблицаДанных.Группа КАК Группа
	               |ПОМЕСТИТЬ ВТ_данные
	               |ИЗ
	               |	&ТаблицаДанных КАК ТаблицаДанных
	               |ГДЕ
	               |	ТаблицаДанных.ВключатьВЗаявку
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_данные.Спортсмен КАК Спортсмен,
	               |	ВТ_данные.Группа КАК Группа
	               |ИЗ
	               |	ВТ_данные КАК ВТ_данные
	               |ИТОГИ ПО
	               |	Группа";
	ВыборкаГруппа = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаГруппа.Следующий() Цикл
		структураГруппа = Новый Структура("Группа", ВыборкаГруппа.Группа);
		Выборка = ВыборкаГруппа.Выбрать();
		МассивСпортсменов = Новый Массив;
		Пока Выборка.Следующий() Цикл
			МассивСпортсменов.Добавить(Выборка.Спортсмен);
		КонецЦикла;
		структураГруппа.Вставить("МассивСпортсменов", МассивСпортсменов);
		МассивГрупп.Добавить(структураГруппа);
	КонецЦикла;
	
	Возврат МассивГрупп
	
КонецФункции	

&НаКлиенте
Процедура ДобавитьСпортсменаЗавершение(Результат, ДопПараметры) Экспорт
	
	ЗаполнитьТаблицуСпортсменовНаСервере();   
	ОтборНаСписокСпортсменов(СформироватьМассивПараметров());
	
КонецПроцедуры

#КонецОбласти

#Область ОтборНаСписокВозрастныхГруппИРазрядов

&НаКлиенте
Процедура УстановитьЗначениеВыбораВозратснойГруппы(Значение)
	
	// + Адильбеков А.Б. 03.07.20 IN-7481 {
	Для Каждого стрВыбратьВозрастныеГруппы Из ВозрастныеГруппы Цикл
		стрВыбратьВозрастныеГруппы.Использовать = Значение;
	КонецЦикла;
	// - Адильбеков А.Б. 03.07.20 IN-7481 }
	ОтборНаСписокСпортсменов(СформироватьМассивПараметров());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВозрастныхГруппПоСоревнованию()
	
	ВозрастныеГруппы.Очистить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Соревнование", ТекущееСоревнование);
	Запрос.Текст = "ВЫБРАТЬ
	               |	МеждународныеВозрастныеГруппы.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа
	               |ИЗ
	               |	Справочник.Соревнование.МеждународныеВозрастныеГруппы КАК МеждународныеВозрастныеГруппы
	               |ГДЕ
	               |	МеждународныеВозрастныеГруппы.Ссылка = &Соревнование";
	ВозрастныеГруппы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВозрастныхГрупп()
	
	ВозрастныеГруппы.Очистить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Соревнование", ТекущееСоревнование);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	МеждународныеВозрастныеГруппы.Ссылка КАК МеждународнаяВозрастнаяГруппа
	               |ИЗ
	               |	Справочник.МеждународныеВозрастныеГруппы КАК МеждународныеВозрастныеГруппы";
	ВозрастныеГруппы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	

//{Рарус lobash IN-9305 14.09.20
&НаКлиенте
Процедура УстановитьЗначениеВыбораРазряда(Значение)
	
	Для Каждого Разряд Из РазрядыСпортсменов Цикл
		Разряд.Использовать = Значение;
	КонецЦикла;
	ОтборНаСписокСпортсменов(СформироватьМассивПараметров());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРазрядовПоСоревнованию()
	
	РазрядыСпортсменов.Очистить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Соревнование", ТекущееСоревнование);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоревнованиеСпортивнаяКлассификация.Разряд КАК РазрядСпортсмена
	               |ИЗ
	               |	Справочник.Соревнование.СпортивнаяКлассификация КАК СоревнованиеСпортивнаяКлассификация
		           |ГДЕ
	               |	СоревнованиеСпортивнаяКлассификация.Ссылка = &Соревнование";
	РазрядыСпортсменов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРазрядов()
	
	РазрядыСпортсменов.Очистить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Соревнование", ТекущееСоревнование);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СпортивнаяКлассификация.Ссылка КАК РазрядСпортсмена
	               |ИЗ
	               |	Справочник.СпортивнаяКлассификация КАК СпортивнаяКлассификация
	               |ГДЕ
	               |	НЕ СпортивнаяКлассификация.ПометкаУдаления";
	РазрядыСпортсменов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	
//}Рарус lobash IN-9305 14.09.20

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииРеквизитовШапки

&НаСервере
Процедура УстановитьСписокВыбораУчебногоГода()
	
	Элементы.УчебныйГод.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ТекущееСпортивноеУчреждение);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	УправлениеУчебнымГодом.УчебныйГод КАК УчебныйГод
	               |ИЗ
	               |	Документ.УправлениеУчебнымГодом КАК УправлениеУчебнымГодом
	               |ГДЕ
	               |	УправлениеУчебнымГодом.Проведен
	               |	И НЕ УправлениеУчебнымГодом.ПометкаУдаления
	               |	%1
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	УправлениеУчебнымГодом.Дата УБЫВ";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", ?(ЗначениеЗаполнено(ТекущееСпортивноеУчреждение), " И УправлениеУчебнымГодом.Организация = &Организация", ""));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Элементы.УчебныйГод.СписокВыбора.Добавить(Выборка.УчебныйГод);
	КонецЦикла;
	
	Если НЕ Элементы.УчебныйГод.СписокВыбора.Количество() = 0  Тогда
		УчебныйГод = Элементы.УчебныйГод.СписокВыбора[0].Значение;
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьОрганизациюТренера()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизическоеЛицо", ТекущийТренер.ФизическоеЛицо);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СоответствияПользователейИОрганизаций.Организация КАК Организация
	               |ИЗ
	               |	РегистрСведений.СоответствияПользователейИОрганизаций КАК СоответствияПользователейИОрганизаций
	               |ГДЕ
	               |	СоответствияПользователейИОрганизаций.Пользователь.ФизическоеЛицо = &ФизическоеЛицо";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекущееСпортивноеУчреждение = Выборка.Организация;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура СформироватьМассивЗаявокПоТипуНорматива()
	
	Если ТекущиеНормативы.Количество()= 0 Тогда
		
		УстановитьОтборНаДинамическийСписок("СписокЗаявок", "Ссылка", "", Ложь);
		
	Иначе	
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТипСоревнования", ?(ТипЗаявки = "2", Перечисления.ТипыСдачиНормативов.Соревнование, Перечисления.ТипыСдачиНормативов.Норматив));
		Запрос.УстановитьПараметр("СписокНормативов", ТекущиеНормативы.ВыгрузитьЗначения());
		Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                |	ЗаявкаНаСдачаНормативаОФП.Ссылка КАК Ссылка
		                |ИЗ
		                |	Документ.ЗаявкаНаПроведениеСоревнованияСдачаНормативаОФП.ЗаявленныеНормативы КАК ЗаявкаНаСдачаНормативаОФП
		                |ГДЕ
		                |	ЗаявкаНаСдачаНормативаОФП.Ссылка.ТипСоревнования = &ТипСоревнования
		                |	И ЗаявкаНаСдачаНормативаОФП.Норматив В(&СписокНормативов)
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ЗаявкаНаСдачаНормативаОФП.Ссылка";
		
		УстановитьОтборНаДинамическийСписок("СписокЗаявок", "Ссылка", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"), Ложь);
	
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбщиеСлужебныеПроцедурыИФункции

&НаКлиенте
Функция СформироватьМассивПараметров()
	
	массивПараметров = Новый Массив;
	Если ЗначениеЗаполнено(ТекущийТренер) И НЕ ПоказыватьСпортсменовПоВсемуСпортивномуУчреждению Тогда
		стркутураОтбор = Новый Структура("ЛичныйТренер, ТренерСборной", ТекущийТренер, ТекущийТренер);
		массивПараметров.Добавить(стркутураОтбор);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущееСпортивноеУчреждение) Тогда
		стркутураОтбор = Новый Структура("Организация", ТекущееСпортивноеУчреждение);
		массивПараметров.Добавить(стркутураОтбор);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УчебныйГод) И НЕ ПоказыватьСпортсменовПоВсемуСпортивномуУчреждению Тогда
		стркутураОтбор = Новый Структура("УчебныйГод", УчебныйГод);
		массивПараметров.Добавить(стркутураОтбор);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущееСоревнование) ИЛИ ТипЗаявки <> "1" Тогда
		массивВозрастныхГрупп = Новый Массив;
		Для Каждого строкаВозрастныеГруппы Из ВозрастныеГруппы Цикл
			Если Не строкаВозрастныеГруппы.Использовать Тогда
				Продолжить;
			КонецЕсли;
			массивВозрастныхГрупп.Добавить(строкаВозрастныеГруппы.МеждународнаяВозрастнаяГруппа);
		КонецЦикла;
		Если Не массивВозрастныхГрупп.Количество()= 0 Тогда
			массивПараметров.Добавить(Новый Структура("массивВозрастныхГрупп", массивВозрастныхГрупп));
		КонецЕсли;
		
		//{Рарус lobash IN-9305 14.09.20
		МассивРазрядовСпортсменов = Новый Массив;
		Для Каждого СтрРазряд Из РазрядыСпортсменов Цикл
			Если Не СтрРазряд.Использовать Тогда
				Продолжить;
			КонецЕсли;
			МассивРазрядовСпортсменов.Добавить(СтрРазряд.РазрядСпортсмена);
		КонецЦикла;
		Если Не МассивРазрядовСпортсменов.Количество()= 0 Тогда
			МассивПараметров.Добавить(Новый Структура("МассивРазрядовСпортсменов", МассивРазрядовСпортсменов));
		КонецЕсли;
		//}Рарус lobash IN-9305 14.09.20

	КонецЕсли;	
	
	Возврат массивПараметров
	
КонецФункции	

&НаСервере
Процедура УстановитьОтборНаДинамическийСписок(ИмяСписка, ИмяРеквизита, ЗначениеРеквизита, УстанавливатьОтбор = Истина)
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ЭтотОбъект[ИмяСписка],ИмяРеквизита);
	Если УстанавливатьОтбор Тогда
	   ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтотОбъект[ИмяСписка],ИмяРеквизита,ЗначениеРеквизита,ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;   
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьВидимостьДоступностьЭлементовПоТипуЗаявки()
	
	ОтображатьСоревнование = ТипЗаявки = "1";
	Элементы.ТекущееСоревнование.Видимость      = ОтображатьСоревнование;
	Элементы.СписокЗаявокСоревнование.Видимость = ОтображатьСоревнование;
	Элементы.ТекущиеНормативы.Видимость         = НЕ ОтображатьСоревнование;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
