
#Область ОбработчикиСобытийНаФорме

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("УчебныйГодСсылка") Тогда
		УчебныйГодСсылка = Параметры.УчебныйГодСсылка;
	КонецЕсли;
	
	Если Параметры.Свойство("УправлениеУчебнымГодом") Тогда
		УправлениеУчебнымГодомСсылка = Параметры.УправлениеУчебнымГодом;
		Организация = Параметры.УправлениеУчебнымГодом.Организация;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УправлениеУчебнымГодомСсылка) Тогда
		
		ЗаполнитьДанныеПоУчебномуГодуНаСервере(УправлениеУчебнымГодомСсылка);
		Элементы.ДополнитьУчебныйГод.Видимость = Ложь;
		
	Иначе	
		УстановитьСсылкуНовогоУчебныйГодОбъект();
	КонецЕсли;
	
	УстановитьОтборНаДинамическийСписок();
		
	Если Параметры.Свойство("НовыйУчебныйГод")Тогда
		Элементы.ДополнитьУчебныйГод.Видимость = Ложь;
	КонецЕсли;
	
	// {Рарус ivaart IN-21410 Заполнение организации только для пользователей у которых есть организация 2021.11.26
	Если Не ПустаяСтрока(ПараметрыСеанса.ТекущаяОрганизация) тогда
		Организация = ПараметрыСеанса.ТекущаяОрганизация;
	КонецЕсли;
	// }Рарус ivaart IN-21410 Заполнение организации только для пользователей у которых есть организация 2021.11.26
	
	Элементы.ПериодУчебногоГода.АвтоВыборНезаполненного = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И СписокГрупп.Количество()> 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Команды сформированы. Данные по будут записаны.
		|Для отмены действий удалите команды/Учебный год!",
		РежимДиалогаВопрос.ОКОтмена,
		0,
		КодВозвратаДиалога.ОК);
		
		Возврат;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодУчебногоГодаПриИзменении(Элемент)
	УчебныйГодОбъект.ДатаНачала    = ПериодУчебногоГода.ДатаНачала;
	УчебныйГодОбъект.ДатаОкончания = ПериодУчебногоГода.ДатаОкончания;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ДополнитьУчебныйГод(Команда)
	
	Если ЗначениеЗаполнено(УчебныйГодОбъект.Наименование) И НЕ Модифицированность Тогда
		
		Оповещение = Новый ОписаниеОповещения("ДополнитьУчебныйГодВопросЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Данные в мастере будут очищены. Продолжить?",
		РежимДиалогаВопрос.ДаНет,
		0,
		КодВозвратаДиалога.Да);
		
		Возврат;
		
	ИначеЕсли Модифицированность И СписокГрупп.Количество()> 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Команды сформированы. Данные по будут записаны.
		|Для отмены действий удалите команды/Учебный год!",
		РежимДиалогаВопрос.ОКОтмена,
		0,
		КодВозвратаДиалога.ОК);
		
		Возврат;

	КонецЕсли;
			
	ДополнитьУчебныйГодПродолжить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУчебныйГод(Команда)
	
	Отказ = Ложь;
	
	// {Рарус adilas #18120 -Тестирование релиза Альфа СПОРТ 1.0.0.3. Учебный год 2021.07.05
	// //	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена дата начала Учебного года!",,"УчебныйГодОбъектДатаНачала","УчебныйГодОбъект.ДатаНачала");
	Если УчебныйГодОбъект.ДатаНачала = Дата(1,1,1) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен Период учебного года!",,"УчебныйГодОбъектДатаНачала","УчебныйГодОбъект.ДатаНачала");
		Отказ = Истина;
	КонецЕсли;
	
	//Если УчебныйГодОбъект.ДатаОкончания = Дата(1,1,1) Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена дата окончания Учебного года!",,"УчебныйГодОбъектДатаОкончания","УчебныйГодОбъект.ДатаОкончания");
	//	Отказ = Истина;
	//КонецЕсли;
	// }Рарус adilas #18120 -Тестирование релиза Альфа СПОРТ 1.0.0.3. Учебный год 2021.07.05
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено спортивное учреждение!",,"Организация");
		Отказ = Истина;
	КонецЕсли;	
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(УчебныйГодОбъект.Наименование) Тогда
		
		Оповещение = Новый ОписаниеОповещения("СформироватьНаименованиеУчебногоГодаЗавершение",
		ЭтотОбъект);	
		
		ПоказатьВопрос(Оповещение,
		"Наименование учебного года не заполнено. 
		|Сформировать наименование автоматически?",
		РежимДиалогаВопрос.ДаНет,
		0,
		КодВозвратаДиалога.Да);
		
		Возврат;
		
	КонецЕсли;
	
	ОткрытьУчебныйГодНаСервере();
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Отказ = Ложь;
	ЗаписатьИЗакрытьНаСервере(Отказ);
	// {Рарус dotere #16311 -Оповещение 2021.06.11
	Оповестить("ОбновитьСписокУчебныхГодов");
	// }Рарус dotere #16311 -Оповещение 2021.06.11
	Если НЕ Отказ Тогда
		Модифицированность = Ложь;
		ЭтаФорма.Закрыть(Новый Структура("УчебныйГодСсылка, УчебныйГодОбъект",УчебныйГодСсылка,УправлениеУчебнымГодомСсылка));
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКоманду(Команда)
	
	Оповещение = Новый ОписаниеОповещения("СоздатьКомандуЗавершение", ЭтотОбъект);
	ОткрытьФорму("Документ.ФормированиеГруппы.Форма.ФормаДокумента", Новый Структура("УчебныйГод", УчебныйГодСсылка),,,,,Оповещение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СоздатьКомандуЗавершение(Результат, ДопПараметры) Экспорт
КонецПроцедуры

&НаСервере
Процедура УстановитьСсылкуНовогоУчебныйГодОбъект()
	
	УчебныйГодОбъектФорма = РеквизитФормыВЗначение("УчебныйГодОбъект");
	УчебныйГодСсылка = Справочники.УчебныйГод.ПолучитьСсылку(Новый УникальныйИдентификатор);
	УчебныйГодОбъектФорма.УстановитьСсылкуНового(УчебныйГодСсылка);
	ЗначениеВРеквизитФормы(УчебныйГодОбъектФорма, "УчебныйГодОбъект");
		
КонецПроцедуры		

&НаСервере
Процедура УстановитьОтборНаДинамическийСписок()
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокГрупп,"УчебныйГод");	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокГрупп,"УчебныйГод",УчебныйГодСсылка,ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

#Область ОткрытиеУчебногоГода

&НаКлиенте
Процедура СформироватьНаименованиеУчебногоГодаЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		// {Рарус adilas #18120 -Тестирование релиза Альфа СПОРТ 1.0.0.3. Учебный год 2021.07.05
		//УчебныйГодОбъект.Наименование = "УчебныйГод " + Формат(УчебныйГодОбъект.ДатаНачала, "ДЛФ=Д") + "/" + Формат(УчебныйГодОбъект.ДатаОкончания, "ДЛФ=Д");
		УчебныйГодОбъект.Наименование = Формат(УчебныйГодОбъект.ДатаНачала, "ДЛФ=Д") + "-" + Формат(УчебныйГодОбъект.ДатаОкончания, "ДЛФ=Д");
		// }Рарус adilas #18120 -Тестирование релиза Альфа СПОРТ 1.0.0.3. Учебный год 2021.07.05
		ОткрытьУчебныйГодНаСервере();
		УстановитьВидимостьДоступность();
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ОткрытьУчебныйГодНаСервере()
	
	Попытка
		УчебныйГодОбъектФорма = РеквизитФормыВЗначение("УчебныйГодОбъект");
		УчебныйГодОбъектФорма.ПроверитьЗаполнение();
		УчебныйГодОбъектФорма.Записать();
		ЗначениеВРеквизитФормы(УчебныйГодОбъектФорма, "УчебныйГодОбъект");
		УчебныйГодСсылка = УчебныйГодОбъектФорма.Ссылка;
		
		СоздатьДокументУправлениеУчебнымГодомНаСервере();
		
		УчебныйГодОткрыт = Истина;
		
		УстановитьОтборНаДинамическийСписок();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ДополнениеУчебногоГода

&НаКлиенте
Процедура ДополнитьУчебныйГодВопросЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ДополнитьУчебныйГодПродолжить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьУчебныйГодПродолжить()
	
	Оповещение = Новый ОписаниеОповещения("ДополнитьУчебныйГодПродолжитьПродолжитьЗавершение", ЭтаФорма);
	
    ОткрытьФорму("Документ.УправлениеУчебнымГодом.ФормаВыбора", Новый Структура("ОтборПоОткрытомуУчебномуГоду",Истина),ЭтаФорма, , , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьУчебныйГодПродолжитьПродолжитьЗавершение(Результат, ДопПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		ЗаполнитьДанныеПоУчебномуГодуНаСервере(Результат);
		УстановитьВидимостьДоступность();
	Иначе
		УстановитьСсылкуНовогоУчебныйГодОбъект();
	КонецЕсли;
	
	УстановитьОтборНаДинамическийСписок();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоУчебномуГодуНаСервере(ДокументУпревлениеУчебнымГодом)
	
	УчебныйГодОбъектФорма = ДокументУпревлениеУчебнымГодом.УчебныйГод.ПолучитьОбъект();
	ЗначениеВРеквизитФормы(УчебныйГодОбъектФорма, "УчебныйГодОбъект");
	
	УчебныйГодОткрыт = Истина;
	
	УправлениеУчебнымГодомОбъектФорма = ДокументУпревлениеУчебнымГодом.ПолучитьОбъект();
	ЗначениеВРеквизитФормы(УправлениеУчебнымГодомОбъектФорма, "УправлениеУчебнымГодомОбъект");
	
	УчебныйГодСсылка = УчебныйГодОбъект.Ссылка;
	
	ПериодУчебногоГода.ДатаНачала    = УчебныйГодОбъект.ДатаНачала;
	ПериодУчебногоГода.ДатаОкончания = УчебныйГодОбъект.ДатаОкончания;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДокументУправлениеУчебнымГодом()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УчебныйГод", УчебныйГодСсылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	УправлениеУчебнымГодом.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.УправлениеУчебнымГодом КАК УправлениеУчебнымГодом
	               |ГДЕ
	               |	УправлениеУчебнымГодом.УчебныйГод = &УчебныйГод
	               |	И УправлениеУчебнымГодом.Проведен
	               |	И НЕ УправлениеУчебнымГодом.ПометкаУдаления";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Документы.УправлениеУчебнымГодом.ПустаяСсылка();
	КонецЕсли;
	Возврат Результат.Выгрузить()[0].Ссылка
	
КонецФункции		

#КонецОбласти

&НаСервере
Процедура СоздатьДокументУправлениеУчебнымГодомНаСервере()
	
	ДокументУправлениеУчебнымГодом             = Документы.УправлениеУчебнымГодом.СоздатьДокумент();
	ДокументУправлениеУчебнымГодом.УчебныйГод  = УчебныйГодСсылка;
	ДокументУправлениеУчебнымГодом.Организация = Организация;
	// {Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
	ДокументУправлениеУчебнымГодом.Дата        = ТекущаяДатаСеанса();
	// }Рарус adilas #1.0.0.2 -Исправления по SonarQube 2021.04.23
	ДокументУправлениеУчебнымГодом.УчебныйГодОткрыт = Истина;
	ДокументУправлениеУчебнымГодом.Записать(РежимЗаписиДокумента.Проведение);
	
	ЗначениеВРеквизитФормы(ДокументУправлениеУчебнымГодом, "УправлениеУчебнымГодомОбъект");
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	Элементы.ОткрытьУчебныйГод.Доступность                    = НЕ УчебныйГодОткрыт;
	Элементы.ДекорацияУчебныйГодОткрыт.Картинка               = ?(УчебныйГодОткрыт, БиблиотекаКартинок.СостоянияРасширенийПодключено, БиблиотекаКартинок.СостоянияРасширенийОшибка);
	Элементы.СписокГрупп.Доступность                    = УчебныйГодОткрыт;
КонецПроцедуры
	
#КонецОбласти

#Область Запись

&НаСервере
Процедура ЗаписатьИЗакрытьНаСервере(Отказ)
	
	Если ЗначениеЗаполнено(УправлениеУчебнымГодомОбъект.Ссылка) Тогда
		Попытка
			
			УчебныйГодОбъектФорма = РеквизитФормыВЗначение("УчебныйГодОбъект");
			УчебныйГодОбъектФорма.Записать();
			ЗначениеВРеквизитФормы(УчебныйГодОбъектФорма, "УчебныйГодОбъект");
			
			УправлениеУчебнымГодомОбъектФорма = РеквизитФормыВЗначение("УправлениеУчебнымГодомОбъект");
			УправлениеУчебнымГодомОбъектФорма.УчебныйГод       = УчебныйГодОбъект.Ссылка;
			
			УправлениеУчебнымГодомОбъектФорма.Записать(РежимЗаписиДокумента.Проведение);
			ЗначениеВРеквизитФормы(УправлениеУчебнымГодомОбъектФорма, "УправлениеУчебнымГодомОбъект");
			
			УчебныйГодЗаписан = Истина;
			
		Исключение
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Мастер заполнения на учебный год'"), 
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось провести документ 'Управление учебным годом'
			|Документ будет записан.
			|Выполните проведение вручную.");
			
			Отказ = Истина;
			
			УчебныйГодЗаписан = Истина;
			
		КонецПопытки;
				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда 
		
		Отказ = Ложь;
		
		ЗаписатьИЗакрытьНаСервере(Отказ);
		// {Рарус dotere #16311 -Оповещение 2021.06.11
		Оповестить("ОбновитьСписокУчебныхГодов");
		// }Рарус dotere #16311 -Оповещение 2021.06.11
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		
		
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти









