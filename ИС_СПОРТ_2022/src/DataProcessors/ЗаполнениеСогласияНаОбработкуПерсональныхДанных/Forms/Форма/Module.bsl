// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
	// Удаление фигурных скобок, добавление/удаление лишних пробелов и иные исправления
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СрокДействия", ТекущаяДатаСеанса());
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявленияНаПриемВСпортивноеУчреждение.Ссылка КАК Ссылка,
		|	ЗаявленияНаПриемВСпортивноеУчреждение.Организация КАК Организация,
		|	ЗаявленияНаПриемВСпортивноеУчреждение.Спортсмен КАК Спортсмен,
		|	СогласиеНаОбработкуПерсональныхДанных.Ссылка КАК ДокументСогласиеНаОбработкуПерсональныхДанных,
		|	ТИПЗНАЧЕНИЯ(ЗаявленияНаПриемВСпортивноеУчреждение.ДокументСогласиеНаОбработкуПерсональныхДанных) КАК Поле1
		|ПОМЕСТИТЬ ВТ_ВсеЗаявления
		|ИЗ
		|	Документ.ЗаявленияНаПриемВСпортивноеУчреждение КАК ЗаявленияНаПриемВСпортивноеУчреждение
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СогласиеНаОбработкуПерсональныхДанных КАК СогласиеНаОбработкуПерсональныхДанных
		|		ПО ЗаявленияНаПриемВСпортивноеУчреждение.ДокументСогласиеНаОбработкуПерсональныхДанных = СогласиеНаОбработкуПерсональныхДанных.Ссылка
		|ГДЕ
		|	ЗаявленияНаПриемВСпортивноеУчреждение.Организация = &Организация
		|	И ЗаявленияНаПриемВСпортивноеУчреждение.ДатаЗаявления МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЗаявленияНаПриемВСпортивноеУчреждение.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СогласиеНаОбработкуПерсональныхДанных.Ссылка, ЗНАЧЕНИЕ(Документ.СогласиеНаОбработкуПерсональныхДанных.ПустаяСсылка)) КАК ДокументСогласия,
		|	СогласиеНаОбработкуПерсональныхДанных.Проведен КАК Проведен,
		|	ЕСТЬNULL(СогласиеНаОбработкуПерсональныхДанных.ПометкаУдаления, ЛОЖЬ) КАК ПометкаУдаления,
		|	СогласиеНаОбработкуПерсональныхДанных.СрокДействия КАК СрокДействия,
		|	ВТ_ВсеЗаявления.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ПредположительныеСогласия
		|ИЗ
		|	ВТ_ВсеЗаявления КАК ВТ_ВсеЗаявления
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СогласиеНаОбработкуПерсональныхДанных КАК СогласиеНаОбработкуПерсональныхДанных
		|		ПО ВТ_ВсеЗаявления.Организация = СогласиеНаОбработкуПерсональныхДанных.Организация
		|			И ВТ_ВсеЗаявления.Спортсмен = СогласиеНаОбработкуПерсональныхДанных.Субъект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПредположительныеСогласия.ДокументСогласия КАК ДокументСогласия,
		|	ВТ_ПредположительныеСогласия.ПометкаУдаления КАК ПометкаУдаления,
		|	ВТ_ПредположительныеСогласия.Проведен КАК Проведен,
		|	ВТ_ПредположительныеСогласия.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ПодходящиеЗаявления
		|ИЗ
		|	ВТ_ПредположительныеСогласия КАК ВТ_ПредположительныеСогласия
		|ГДЕ
		|	ВТ_ПредположительныеСогласия.ПометкаУдаления = ЛОЖЬ
		|	И (ВТ_ПредположительныеСогласия.СрокДействия > &СрокДействия
		|			ИЛИ ВТ_ПредположительныеСогласия.СрокДействия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПодходящиеЗаявления.ДокументСогласия КАК ДокументСогласия,
		|	ВТ_ПодходящиеЗаявления.Проведен КАК Проведен,
		|	ВТ_ВсеЗаявления.Ссылка КАК Ссылка
		|ИЗ
		|	ВТ_ВсеЗаявления КАК ВТ_ВсеЗаявления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодходящиеЗаявления КАК ВТ_ПодходящиеЗаявления
		|		ПО ВТ_ВсеЗаявления.Ссылка = ВТ_ПодходящиеЗаявления.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Док = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДокументСогласия) Тогда
			  
			  Док.ДокументСогласиеНаОбработкуПерсональныхДанных = ВыборкаДетальныеЗаписи.ДокументСогласия;
			  
			  
			  Если Не ВыборкаДетальныеЗаписи.Проведен Тогда
				  Согласие = ВыборкаДетальныеЗаписи.ДокументСогласия.ПолучитьОбъект();
				  Попытка
					  Согласие.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
				  Исключение
					  // {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
					  ОбщегоНазначения.СообщитьПользователю("Не удалось провести документ согласия на обработку персональных данных, проверте документ" + Согласие);
					  // }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
				  КонецПопытки;
			  КонецЕсли;
			  Попытка
				  Док.СогласиеНаОбработкуПерсональныхДанныхПолучено = Истина; 
				  Док.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
				  // {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
				  ОбщегоНазначения.СообщитьПользователю("Документ " + Док + " успешно перепроведен!");
				  // }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			  Исключение
				  // {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
				  ОбщегоНазначения.СообщитьПользователю("Не удалось провести " + Док);
				  // }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			  КонецПопытки;
		Иначе
			// Паспортные данные спортсмена
			ДанныеСубъектаСпортсмен = ЗащитаПерсональныхДанных.ОписаниеДанныхСубъекта();		
			ДанныеСубъектаСпортсмен.Субъект = Док.Спортсмен.ФизическоеЛицо;
			
			ЗащитаПерсональныхДанныхПереопределяемый.ДополнитьДанныеСубъектовПерсональныхДанных(ДанныеСубъектаСпортсмен, Док.ДатаЗаявления);
			
			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			// Паспортные данные спортсмена родителя
			ДанныеСубъектаЗаконногоПредставителя = ЗащитаПерсональныхДанных.ОписаниеДанныхСубъекта();		
			ДанныеСубъектаЗаконногоПредставителя.Субъект = Док.Родитель.ФизическоеЛицо;
			
			ЗащитаПерсональныхДанныхПереопределяемый.ДополнитьДанныеСубъектовПерсональныхДанных(ДанныеСубъектаЗаконногоПредставителя, Док.ДатаЗаявления);
			
			// Создаем новый документ согласия на обрабтку персональных данных;
			СогласиеНаОбработкуПерсональныхДанных = Документы.СогласиеНаОбработкуПерсональныхДанных.СоздатьДокумент();
			СогласиеНаОбработкуПерсональныхДанных.Дата 										= Док.ДатаЗаявления;
			СогласиеНаОбработкуПерсональныхДанных.Субъект 									= Док.Спортсмен;
			СогласиеНаОбработкуПерсональныхДанных.СубъектЗаконныйПредставитель 				= Док.Родитель;
			СогласиеНаОбработкуПерсональныхДанных.Организация                   			= Док.Организация;
			СогласиеНаОбработкуПерсональныхДанных.ДатаПолучения                             = Док.ДатаЗаявления;
			СогласиеНаОбработкуПерсональныхДанных.ПаспортныеДанные                       	= ДанныеСубъектаСпортсмен.ПаспортныеДанные;
			СогласиеНаОбработкуПерсональныхДанных.ФИОСубъекта                               = ДанныеСубъектаСпортсмен.ФИО;
			СогласиеНаОбработкуПерсональныхДанных.АдресСубъекта                             = ДанныеСубъектаСпортсмен.Адрес;
			СогласиеНаОбработкуПерсональныхДанных.ПаспортныеДанныеЗаконногоПредставителя 	= ДанныеСубъектаЗаконногоПредставителя.ПаспортныеДанные;
			СогласиеНаОбработкуПерсональныхДанных.ФИОСубъектаЗаконногоПредставителя         = ДанныеСубъектаЗаконногоПредставителя.ФИО;
			СогласиеНаОбработкуПерсональныхДанных.АдресСубъектаЗаконногоПредставителя       = ДанныеСубъектаЗаконногоПредставителя.Адрес;
			СогласиеНаОбработкуПерсональныхДанных.Ответственный                             = Док.Ответственный;
			СогласиеНаОбработкуПерсональныхДанных.Комментарий                               = Док.Комментарий;
			
			СогласиеНаОбработкуПерсональныхДанных.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			
			Док.ДокументСогласиеНаОбработкуПерсональныхДанных = СогласиеНаОбработкуПерсональныхДанных.Ссылка;
			Док.СогласиеНаОбработкуПерсональныхДанныхПолучено = Истина;
			
			Попытка	
				Док.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
				// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
				ОбщегоНазначения.СообщитьПользователю("Документ " + Док + " успешно перепроведен!");
				// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
	     	Исключение
				// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
				ОбщегоНазначения.СообщитьПользователю("Не удалось провести " + Док);
				// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23

КонецПроцедуры

#КонецОбласти

