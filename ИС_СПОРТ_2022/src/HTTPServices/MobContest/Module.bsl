
Функция datacontestdata(Запрос)
			
	УстановитьПривилегированныйРежим(Истина);
	ОтветJSON = "";
	
	Попытка
		СтруктураСоревнования = МобильныеПриложенияСервер.ДанныеПроводимыхСоревнований();
	Исключение
		ЗаписьЖурналаРегистрации("ОшибкаМобИССпорт",УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки(),);
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Получить_(СтруктураСоревнования);
	
КонецФункции

Функция Получить_(Структура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ХранилищеСтруктуры  = XMLСтрока(Новый ХранилищеЗначения(Структура,Новый СжатиеДанных(9)));
	
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("Текст64",ХранилищеСтруктуры);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	ЗаписатьJSON(ЗаписьJSON, СтруктураЗаписи);
	ОтветJSON = ЗаписьJSON.Закрыть();
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки(ОтветJSON);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Ответ;
	
КонецФункции

Функция resultcontestresult(Запрос)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОтветJSON = Запрос.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ОтветJSON);
	СтруктураРезультат = ПрочитатьJSON(ЧтениеJSON);
	
	ОтветКод = 200;
	
	Попытка
		МобильныеПриложенияСервер.ВнестиДанныеВПротокол(СтруктураРезультат,ОтветКод);
	Исключение
		ОтветКод = 500;
		ЗаписьЖурналаРегистрации("ОшибкаМобИССпорт",УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки(),);
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Ответ = Новый HTTPСервисОтвет(ОтветКод);
	
	Возврат Ответ;
	
КонецФункции

Функция dataresultdatares(Запрос)
	
	УстановитьПривилегированныйРежим(Истина);
	ОтветJSON = "";
	
	УИДДокумента = СтрЗаменить(Запрос.ПараметрыURL["Мероприятие"],"_","-");
	ОФП = ?(Запрос.ПараметрыURL["ОФП"] = "1",Истина,Ложь);

	Попытка
		СтруктураСоревнования = МобильныеПриложенияСервер.СобратьДанныеМероприятия(УИДДокумента,ОФП);
	Исключение
		ЗаписьЖурналаРегистрации("ОшибкаМобИССпорт",УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки(),);
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Получить_(СтруктураСоревнования);

КонецФункции

Функция authorizauth(Запрос)
    
    УстановитьПривилегированныйРежим(Истина);
    ОтветJSON = "";
    
    СтруктураДанныхСпортсмена = Неопределено;
    СтруктураДанныхОрганизаций = Неопределено;
    СтруктураДанныхДляРодителя = Новый Структура;
    
    Логин = Запрос.ПараметрыURL["Логин"];
    Пароль = Запрос.ПараметрыURL["Пароль"];
    
    СтруктураРоли = МобильныеПриложенияСервер.ВернутьРольПоАвторизации(Логин, Пароль);
    
    Если СтруктураРоли <> Неопределено Тогда
        
        Спортсмены = Неопределено;
        
        Если СтруктураРоли.РольАвторизации = ПредопределенноеЗначение("Перечисление.РолиАвторизацииФизлиц.ЗаконныйПредставитель") Тогда
            
            Спортсмены = МобильныеПриложенияСервер.ВернутьСпортсменаПоРодителю(СтруктураРоли.ФизическоеЛицо);
            
        ИначеЕсли СтруктураРоли.РольАвторизации = ПредопределенноеЗначение("Перечисление.РолиАвторизацииФизлиц.Спортсмен") Тогда	
            
            Спортсмены = МобильныеПриложенияСервер.ВернутьСпортсменаПоФЛ(СтруктураРоли.ФизическоеЛицо);
            
        КонецЕсли;
        
        Если Спортсмены <> Неопределено Тогда
            
            Попытка
                СтруктураДанныхСпортсмена = МобильныеПриложенияСервер.СобратьДанныеСпортсменов(Спортсмены);
            Исключение
                ЗаписьЖурналаРегистрации("ОшибкаМобИССпорт", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
            КонецПопытки;
            
        КонецЕсли; 
        
        
        Попытка
            СтруктураДанныхОрганизаций = МобильныеПриложенияСервер.СобратьДанныеОрганизаций();
        Исключение
            ЗаписьЖурналаРегистрации("ОшибкаМобИССпорт", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
        КонецПопытки;
        
        СтруктураДанныхДляРодителя.Вставить("СтруктураДанныхСпортсмена", СтруктураДанныхСпортсмена);
        СтруктураДанныхДляРодителя.Вставить("СтруктураДанныхОрганизаций", СтруктураДанныхОрганизаций);
        СтруктураДанныхДляРодителя.Вставить("РольАвторизации", Строка(СтруктураРоли.РольАвторизации));
        СтруктураДанныхДляРодителя.Вставить("ФизическоеЛицоУИД", Строка(СтруктураРоли.ФизическоеЛицо.УникальныйИдентификатор()));
        СтруктураДанныхДляРодителя.Вставить("ФизическоеЛицоФИО", СтруктураРоли.ФизическоеЛицо.Наименование);
        
    КонецЕсли;
    
    УстановитьПривилегированныйРежим(Ложь);
    
    Возврат Получить_(СтруктураДанныхДляРодителя);
    
КонецФункции

Функция requestreq(Запрос)
    
    УстановитьПривилегированныйРежим(Истина);
    
    МассивДат = Новый Массив;
    МассивДат.Добавить("ДатаРождения");
    МассивДат.Добавить("ДатаЗаявления");
    МассивДат.Добавить("СвидетельствоПаспортДатаВыдачи");
    МассивДат.Добавить("ПаспортДатаВыдачи");
    МассивДат.Добавить("СвидетельствоПаспортСрокДействия");
    
	ОтветJSON = Запрос.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ОтветJSON);
	СтруктураЗапроса = ПрочитатьJSON(ЧтениеJSON, , МассивДат, ФорматДатыJSON.ISO);
    
    ХранилищеРезультат =XMLЗначение(Тип("ХранилищеЗначения"), СтрЗаменить(СтруктураЗапроса.Текст64, Символы.ПС, ""));
    СтруктураРезультат = ХранилищеРезультат.Получить();

	ОтветКод = 200;
	
	Попытка
		МобильныеПриложенияСервер.СформироватьЗаявление(СтруктураРезультат, ОтветКод);
	Исключение
		ОтветКод = 500;
		ЗаписьЖурналаРегистрации("ОшибкаМобИССпорт", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Ответ = Новый HTTPСервисОтвет(ОтветКод);
	
	Возврат Ответ;

КонецФункции