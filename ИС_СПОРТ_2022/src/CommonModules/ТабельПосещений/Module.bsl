////////////////////////////////////////////////////////////////////////////////
// Табель посещений
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает отображаемые брони.
//
// Параметры:
//  ОтображаемаяДатаНачала - Дата - Дата начала отображения.
//  ОтображаемаяДатаОкончания - Дата - Дата окончания отображения.
//  ОтображаемыеПомещения - Массив - Отображаемые брони.
//
// Возвращаемое значение:
//  Массив - Отображаемые брони.
//
Функция ПолучитьОтображаемыеСобытия(
	ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания, ОтображаемыйТренер = Неопределено, ОтображаемыйЭтап = Неопределено) Экспорт
	
	ПоказыватьУдаленные = БронированиеПомещений.ПолучитьПерсональнуюНастройку("ПоказыватьУдаленные");
	НастройкаОтбораСобытий = ПолучитьНастройкуОтбораСобытий(
		ОтображаемыйТренер, ОтображаемыйЭтап, ОтображаемаяДатаНачала, ОтображаемаяДатаОкончания, ПоказыватьУдаленные);
	
	Возврат ПолучитьСобытия(НастройкаОтбораСобытий);
	
КонецФункции

// Формирует структуру настройки отбора броней.
//
// Параметры:
//  ПараметрМестоЗанятия		 - Массив, СправочникСсылка.ТерриторииИПомещения - МестоЗанятия, по которому необходимы брони.
//  ДатаНачала				 - Дата											 - Дата, с которой отбираются брони.
//  ДатаОкончания			 - Дата											 - Дата, по которую отбираются брони.
//  ПоказыватьУдаленные		 - Булево										 - Показывать помеченные на удаление брони.
//  Пользователь			 - СправочникСсылка.Пользователь				 - Пользователь, брони которого отбирать.
//  ПользовательИсключение	 - СправочникСсылка.Пользователь				 - Пользователь, брони которого не будут отобраны.
// 
// Возвращаемое значение:
//  Структура - Настройка отбора броней.
//   * ПараметрМестоЗанятия - Массив, СправочникСсылка.ТерриторииИПомещения - МестоЗанятия, по которому необходимы брони.
//   * ДатаНачала - Дата - Дата, с которой отбираются брони.
//   * ДатаОкончания - Дата - Дата, по которую отбираются брони.
//   * ПоказыватьУдаленные - Булево - Показывать помеченные на удаление брони.
//   * Пользователь - СправочникСсылка.Пользователь - Пользователь, брони которого отбирать.
//   * ПользовательИсключение - СправочникСсылка.Пользователь - Пользователь, брони которого не будут отобраны.
//
Функция ПолучитьНастройкуОтбораСобытий(ПараметрТренер, ПараметрЭтап, ДатаНачала, ДатаОкончания, ПоказыватьУдаленные = Ложь) Экспорт

	НастройкаОтбораСобытий = Новый Структура;
	НастройкаОтбораСобытий.Вставить("Тренер", ПараметрТренер);
	НастройкаОтбораСобытий.Вставить("Этап", ПараметрЭтап);
	НастройкаОтбораСобытий.Вставить("ДатаНачала", ДатаНачала);
	НастройкаОтбораСобытий.Вставить("ДатаОкончания", ДатаОкончания);
	НастройкаОтбораСобытий.Вставить("ПоказыватьУдаленные", ПоказыватьУдаленные);
	
	Возврат НастройкаОтбораСобытий;
	
КонецФункции

// Возвращает брони по переданным параметрам.
//
// Параметры:
//  НастройкаОтбораБроней	 - Структура - Настройки отбора броней.
//   Описание - см. параметры возвращаемые функцией БронированиеПомещений.ПолучитьНастройкуОтбораБроней().
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица броней.
//
Функция ПолучитьСобытия(НастройкаОтбораСобытий) Экспорт
	
	ТаблицаБроней = СформироватьТаблицуБроней();
	ЗаполнитьТаблицуСобытиями(ТаблицаБроней, НастройкаОтбораСобытий);
	ЗаполнитьТаблицуПовторяющимисяСобытиями(ТаблицаБроней, НастройкаОтбораСобытий);
	
	ТаблицаБроней.Сортировать("ДатаНачала");
	
	Возврат ТаблицаБроней;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает пустую таблицу броней.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица броней.
//
Функция СформироватьТаблицуБроней()
	
	ТаблицаСобытий = Новый ТаблицаЗначений;
	
	ТаблицаСобытий.Колонки.Добавить(
		"Ссылка", Новый ОписаниеТипов("ДокументСсылка.БроньСпортивногоОбъекта"));
	ТаблицаСобытий.Колонки.Добавить(
		"ДатаНачала", Новый ОписаниеТипов("Дата"));
	ТаблицаСобытий.Колонки.Добавить(
		"ДатаОкончания", Новый ОписаниеТипов("Дата"));
	ТаблицаСобытий.Колонки.Добавить(
		"ВесьДень", Новый ОписаниеТипов("Булево"));
	ТаблицаСобытий.Колонки.Добавить(
		"ТипЗаписи", Новый ОписаниеТипов("ПеречислениеСсылка.ТипЗаписиКалендаря"));
	ТаблицаСобытий.Колонки.Добавить(
		"СпортивныйОбъект", Новый ОписаниеТипов("СправочникСсылка.СпортивныеОбъекты"));
	ТаблицаСобытий.Колонки.Добавить(
		"МестоЗанятия", Новый ОписаниеТипов("СправочникСсылка.МестаЗанятий"));
	ТаблицаСобытий.Колонки.Добавить(
		"ПометкаУдаления", Новый ОписаниеТипов("Булево"));
	ТаблицаСобытий.Колонки.Добавить(
		"ВидСпорта", Новый ОписаниеТипов("СправочникСсылка.ВидыСпорта"));
	ТаблицаСобытий.Колонки.Добавить(
		"ВидСпортаПредставление", Новый ОписаниеТипов("Строка"));
	ТаблицаСобытий.Колонки.Добавить(
		"Тренер", Новый ОписаниеТипов("СправочникСсылка.Тренеры"));
	ТаблицаСобытий.Колонки.Добавить(
		"ТренерПредставление", Новый ОписаниеТипов("Строка"));
	ТаблицаСобытий.Колонки.Добавить(
		"Этап", Новый ОписаниеТипов("СправочникСсылка.ЭтапыСпортивнойПодготовки"));
	ТаблицаСобытий.Колонки.Добавить(
		"ЭтапПредставление", Новый ОписаниеТипов("Строка"));
	ТаблицаСобытий.Колонки.Добавить(
		"Зеленый", Новый ОписаниеТипов("Число"));
	ТаблицаСобытий.Колонки.Добавить(
		"Красный", Новый ОписаниеТипов("Число"));
	ТаблицаСобытий.Колонки.Добавить(
		"Синий", Новый ОписаниеТипов("Число"));
	
	Возврат ТаблицаСобытий;
	
КонецФункции

// Заполняет таблицу броней данными о бронях.
//
// Параметры:
//  ТаблицаБроней			 - ТаблицаЗначений	 - Таблица броней.
//  НастройкаОтбораБроней	 - Структура		 - Настройки отбора броней.
//
Процедура ЗаполнитьТаблицуСобытиями(ТаблицаСобытий, НастройкаОтбораСобытий)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	БроньСпортивногоОбъекта.Ссылка КАК Ссылка,
		|	БроньСпортивногоОбъекта.ДатаНачала КАК ДатаНачала,
		|	БроньСпортивногоОбъекта.ДатаОкончания КАК ДатаОкончания,
		|	БроньСпортивногоОбъекта.ВесьДень КАК ВесьДень,
		|	БроньСпортивногоОбъекта.ТипЗаписи КАК ТипЗаписи,
		|	БроньСпортивногоОбъекта.МестоЗанятия КАК МестоЗанятия,
		|	БроньСпортивногоОбъекта.ПометкаУдаления КАК ПометкаУдаления,
		|	БроньСпортивногоОбъекта.ВидСпорта КАК ВидСпорта,
		|	БроньСпортивногоОбъекта.ВидСпорта.Представление КАК ВидСпортаПредставление,
		|	БроньСпортивногоОбъекта.Тренер КАК Тренер,
		|	БроньСпортивногоОбъекта.Тренер.Представление КАК ТренерПредставление,
		|	БроньСпортивногоОбъекта.Этап КАК Этап,
		|	БроньСпортивногоОбъекта.Этап.Представление КАК ЭтапПредставление,
		|	БроньСпортивногоОбъекта.Зеленый КАК Зеленый,
		|	БроньСпортивногоОбъекта.Красный КАК Красный,
		|	БроньСпортивногоОбъекта.Синий КАК Синий
		|ИЗ
		|	Документ.БроньСпортивногоОбъекта КАК БроньСпортивногоОбъекта
		|ГДЕ
		|	БроньСпортивногоОбъекта.ДатаНачала < &ДатаОкончания
		|	И БроньСпортивногоОбъекта.ДатаОкончания > &ДатаНачала
		|	И БроньСпортивногоОбъекта.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипЗаписиКалендаря.ПовторяющеесяСобытие)
		|	И БроньСпортивногоОбъекта.ПометкаУдаления = ЛОЖЬ
		|   %1
		|	%2
		|	И БроньСпортивногоОбъекта.Проведен = ИСТИНА
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаНачала";
	
	Если ЗначениеЗаполнено(НастройкаОтбораСобытий.Тренер) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", " И БроньСпортивногоОбъекта.Тренер = &Тренер");
		Запрос.УстановитьПараметр("Тренер", НастройкаОтбораСобытий.Тренер);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", "");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НастройкаОтбораСобытий.Этап) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%2", " И БроньСпортивногоОбъекта.Этап = &Этап");
		Запрос.УстановитьПараметр("Этап", НастройкаОтбораСобытий.Этап);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%2", "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаОтбораСобытий.ДатаОкончания) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И БроньСпортивногоОбъекта.ДатаНачала < &ДатаОкончания", "");
	КонецЕсли;
	
	Если НастройкаОтбораСобытий.ПоказыватьУдаленные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И БроньСпортивногоОбъекта.ПометкаУдаления = ЛОЖЬ", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаНачала", НастройкаОтбораСобытий.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", НастройкаОтбораСобытий.ДатаОкончания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	                                                       
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаСобытий.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет таблицу броней данными о повторяющихся бронях.
//
// Параметры:
//  ТаблицаБроней - ТаблицаЗначений - Возвращаемый параметр. Таблица броней.
//  НастройкаОтбораБроней - Структура - Настройки отбора броней.
//
Процедура ЗаполнитьТаблицуПовторяющимисяСобытиями(ТаблицаСобытий, НастройкаОтбораСобытий)
	
	РезультатЗапроса = ПолучитьРезультатЗапросаПовторяющихсяСобытий(НастройкаОтбораСобытий);
	Выборка = РезультатЗапроса.Выбрать();
	
	РаботаСРабочимКалендаремСервер.ЗаполнитьТаблицуПовторяющимисяСобытиями(ТаблицаСобытий,
		Выборка, НастройкаОтбораСобытий.ДатаНачала, НастройкаОтбораСобытий.ДатаОкончания);
	
КонецПроцедуры
	
// Возвращает результат запроса повторяющихся событий.
//
// Параметры:
//  НастройкаОтбораБроней	 - Структура - Настройки отбора броней.
// 
// Возвращаемое значение:
//  РезультатЗапроса - Результат запроса повторяющихся событий.
//
Функция ПолучитьРезультатЗапросаПовторяющихсяСобытий(НастройкаОтбораСобытий)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	БроньСпортивногоОбъекта.Ссылка КАК Ссылка,
		|	БроньСпортивногоОбъекта.ДатаНачала КАК ДатаНачала,
		|	БроньСпортивногоОбъекта.ДатаОкончания КАК ДатаОкончания,
		|	БроньСпортивногоОбъекта.ВесьДень КАК ВесьДень,
		|	БроньСпортивногоОбъекта.ТипЗаписи КАК ТипЗаписи,
		|	БроньСпортивногоОбъекта.МестоЗанятия КАК МестоЗанятия,
		|	БроньСпортивногоОбъекта.ПометкаУдаления КАК ПометкаУдаления,
		|	БроньСпортивногоОбъекта.ВидСпорта КАК ВидСпорта,
		|	БроньСпортивногоОбъекта.ВидСпорта.Представление КАК ВидСпортаПредставление,
		|	БроньСпортивногоОбъекта.Тренер КАК Тренер,
		|	БроньСпортивногоОбъекта.Тренер.Представление КАК ТренерПредставление,
		|	БроньСпортивногоОбъекта.Этап КАК Этап,
		|	БроньСпортивногоОбъекта.Этап.Представление КАК ЭтапПредставление,
		|	БроньСпортивногоОбъекта.Зеленый КАК Зеленый,
		|	БроньСпортивногоОбъекта.Красный КАК Красный,
		|	БроньСпортивногоОбъекта.Синий КАК Синий,
		|	БроньСпортивногоОбъекта.ИсключенияПовторения.(
		|		ДатаИсключения,
		|		ЗаписьИсключения
		|	) КАК ИсключенияПовторения,
		|	БроньСпортивногоОбъекта.ПовторениеПоДням.(
		|		ДеньНедели,
		|		НомерВхождения
		|	) КАК ПовторениеПоДням,
		|	БроньСпортивногоОбъекта.ДатаНачалаПовторения КАК ДатаНачалаПовторения,
		|	БроньСпортивногоОбъекта.ДатаОкончанияПовторения КАК ДатаОкончанияПовторения,
		|	БроньСпортивногоОбъекта.ИнтервалПовторения КАК ИнтервалПовторения,
		|	БроньСпортивногоОбъекта.КоличествоПовторов КАК КоличествоПовторов,
		|	БроньСпортивногоОбъекта.ПовторениеПоДнямМесяца КАК ПовторениеПоДнямМесяца,
		|	БроньСпортивногоОбъекта.ПовторениеПоМесяцам КАК ПовторениеПоМесяцам,
		|	БроньСпортивногоОбъекта.ЧастотаПовторения КАК ЧастотаПовторения
		|ИЗ
		|	Документ.БроньСпортивногоОбъекта КАК БроньСпортивногоОбъекта
		|ГДЕ
		|	БроньСпортивногоОбъекта.ДатаНачалаПовторения < &ДатаОкончания
		|	И БроньСпортивногоОбъекта.ДатаОкончанияПовторения >= &ДатаНачала
		|	И БроньСпортивногоОбъекта.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипЗаписиКалендаря.ПовторяющеесяСобытие)
		|	И БроньСпортивногоОбъекта.ПометкаУдаления = ЛОЖЬ
		|   %1
		|   %3	
		|	И БроньСпортивногоОбъекта.Проведен = ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БроньСпортивногоОбъекта.Ссылка,
		|	БроньСпортивногоОбъекта.ДатаНачала,
		|	БроньСпортивногоОбъекта.ДатаОкончания,
		|	БроньСпортивногоОбъекта.ВесьДень,
		|	БроньСпортивногоОбъекта.ТипЗаписи,
		|	БроньСпортивногоОбъекта.МестоЗанятия,
		|	БроньСпортивногоОбъекта.ПометкаУдаления,
		|	БроньСпортивногоОбъекта.ВидСпорта КАК ВидСпорта,
		|	БроньСпортивногоОбъекта.ВидСпорта.Представление КАК ВидСпортаПредставление,
		|	БроньСпортивногоОбъекта.Тренер КАК Тренер,
		|	БроньСпортивногоОбъекта.Тренер.Представление КАК ТренерПредставление,
		|	БроньСпортивногоОбъекта.Этап КАК Этап,
		|	БроньСпортивногоОбъекта.Этап.Представление КАК ЭтапПредставление,
		|	БроньСпортивногоОбъекта.Зеленый КАК Зеленый,
		|	БроньСпортивногоОбъекта.Красный КАК Красный,
		|	БроньСпортивногоОбъекта.Синий КАК Синий,
		|	БроньСпортивногоОбъекта.ИсключенияПовторения.(
		|		ДатаИсключения,
		|		ЗаписьИсключения
		|	),
		|	БроньСпортивногоОбъекта.ПовторениеПоДням.(
		|		ДеньНедели,
		|		НомерВхождения
		|	),
		|	БроньСпортивногоОбъекта.ДатаНачалаПовторения,
		|	БроньСпортивногоОбъекта.ДатаОкончанияПовторения,
		|	БроньСпортивногоОбъекта.ИнтервалПовторения,
		|	БроньСпортивногоОбъекта.КоличествоПовторов,
		|	БроньСпортивногоОбъекта.ПовторениеПоДнямМесяца,
		|	БроньСпортивногоОбъекта.ПовторениеПоМесяцам,
		|	БроньСпортивногоОбъекта.ЧастотаПовторения
		|ИЗ
		|	Документ.БроньСпортивногоОбъекта КАК БроньСпортивногоОбъекта
		|ГДЕ
		|	БроньСпортивногоОбъекта.ДатаНачалаПовторения < &ДатаОкончания
		|	И БроньСпортивногоОбъекта.ДатаОкончанияПовторения = ДАТАВРЕМЯ(1, 1, 1)
		|	И БроньСпортивногоОбъекта.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипЗаписиКалендаря.ПовторяющеесяСобытие)
		|	И БроньСпортивногоОбъекта.ПометкаУдаления = ЛОЖЬ
		|   %2
		|   %4
		|	И БроньСпортивногоОбъекта.Проведен = ИСТИНА
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаНачала";
	
	Если ЗначениеЗаполнено(НастройкаОтбораСобытий.Этап) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", " И БроньСпортивногоОбъекта.Этап = &Этап");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%2", " И БроньСпортивногоОбъекта.Этап = &Этап");
		Запрос.УстановитьПараметр("Этап", НастройкаОтбораСобытий.Этап);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%2", "");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НастройкаОтбораСобытий.Тренер) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%3", " И БроньСпортивногоОбъекта.Тренер = &Тренер");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%4", " И БроньСпортивногоОбъекта.Тренер = &Тренер");
		Запрос.УстановитьПараметр("Тренер", НастройкаОтбораСобытий.Тренер);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%3", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%4", "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаОтбораСобытий.ДатаОкончания) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "	И БроньСпортивногоОбъекта.ДатаНачалаПовторения < &ДатаОкончания", "");
	КонецЕсли;
	
	Если НастройкаОтбораСобытий.ПоказыватьУдаленные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И БроньСпортивногоОбъекта.ПометкаУдаления = ЛОЖЬ", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаНачала", НастройкаОтбораСобытий.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", НастройкаОтбораСобытий.ДатаОкончания);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти