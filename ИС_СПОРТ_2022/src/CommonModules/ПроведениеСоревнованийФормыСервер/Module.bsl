
#Область ФормированиеСтруктурыНормативовНаФорме

Процедура СформироватьСтруктуруНормативовНаФорме(ЭтотОбъект, ЗаполнениеПоКоманде = Ложь) Экспорт
	
	Форма = ЭтотОбъект.ЭтаФорма;
	
	таблицаДляРазбора = ЭтотОбъект.Объект.ЗаявленныеНормативы.Выгрузить();
	
	СоставУчастников = ЭтотОбъект.Объект.СоставУчастников.Выгрузить();
	СоставУчастников.Свернуть("Спортсмен, МеждународнаяВозрастнаяГруппа");
	ЭтотОбъект.СоставУчастниковНаФорме.Загрузить(СоставУчастников);
	
	Для Индекс = 0 По ЭтотОбъект.СоставУчастниковНаФорме.Количество()-1 Цикл
		ЭтотОбъект.СоставУчастниковНаФорме[Индекс].НомерСтроки = Индекс+1;
	КонецЦикла;	
		
	НовыеРеквизиты = Новый Массив;	
	Для Каждого СтрокаНорматив Из таблицаДляРазбора Цикл
		гуид = СтрокаНорматив.УникальныйИдентификаторНорматива;
		НовыеРеквизиты.Добавить(Новый РеквизитФормы("Норматив_" + гуид , Новый ОписаниеТипов("СправочникСсылка.Нормативы"), "СоставУчастниковНаФорме"      , "Норматив"                      , Истина));
		НовыеРеквизиты.Добавить(Новый РеквизитФормы("Выбор_" + гуид    , Новый ОписаниеТипов("Булево")                    , "СоставУчастниковНаФорме"      , СокрЛП(СтрокаНорматив.Норматив) , Истина));
		НовыеРеквизиты.Добавить(Новый РеквизитФормы("Тренер_" + гуид   , Новый ОписаниеТипов("СправочникСсылка.Тренеры")  , "СоставУчастниковНаФорме"      , "Тренер"                        , Истина));
		СтрокаНорматив.УникальныйИдентификаторНорматива = гуид;
	КонецЦикла;
	
	Форма.ИзменитьРеквизиты(НовыеРеквизиты);
	
	СформироватьРеквизитТренер = ?(ЭтотОбъект.Объект.Ссылка.Метаданные().Имя = "СоревнованиеОФПСдачаНормативов", Истина, Ложь);
	
	Для Каждого СтрокаНорматив Из таблицаДляРазбора Цикл
		
		ВыделятьЦветом = НЕ ЭтотОбъект.ВыделятьЦветом;
		
		НовыйЭлементНорматив                   = Форма.Элементы.Добавить("СоставУчастниковНорматив_" + СтрокаНорматив.УникальныйИдентификаторНорматива, Тип("ПолеФормы"), Форма.Элементы.ГруппаНормативов); 
        НовыйЭлементНорматив.Вид               = ВидПоляФормы.ПолеВвода; 
        НовыйЭлементНорматив.ПутьКДанным       = "СоставУчастниковНаФорме." + "Норматив_" + СтрокаНорматив.УникальныйИдентификаторНорматива;
		НовыйЭлементНорматив.Видимость         = Ложь;
		
		НовыйЭлементВыборНорматив              = Форма.Элементы.Добавить("СоставУчастниковВыбор_" + СтрокаНорматив.УникальныйИдентификаторНорматива, Тип("ПолеФормы"), Форма.Элементы.ГруппаНормативов); 
        НовыйЭлементВыборНорматив.Вид          = ВидПоляФормы.ПолеФлажка; 
        НовыйЭлементВыборНорматив.ПутьКДанным  = "СоставУчастниковНаФорме." + "Выбор_" + СтрокаНорматив.УникальныйИдентификаторНорматива;
		НовыйЭлементВыборНорматив.Видимость    = Истина;
		
		Если СформироватьРеквизитТренер Тогда
			НовыйЭлементТренер              = Форма.Элементы.Добавить("СоставУчастниковТренер_" + СтрокаНорматив.УникальныйИдентификаторНорматива, Тип("ПолеФормы"), Форма.Элементы.ГруппаНормативов); 
			НовыйЭлементТренер.Вид          = ВидПоляФормы.ПолеВвода; 
			НовыйЭлементТренер.ПутьКДанным  = "СоставУчастниковНаФорме." + "Тренер_" + СтрокаНорматив.УникальныйИдентификаторНорматива;
			НовыйЭлементТренер.Видимость    = Истина;
			НовыйЭлементТренер.УстановитьДействие("ПриИзменении", "СоставУчастниковНаФормеТренерПриИзменении");
			
			Если ВыделятьЦветом Тогда
				// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
				НовыйЭлементТренер.ЦветФонаЗаголовка    = ЦветаСтиля.НедоступныеДанныеЦвет;
				НовыйЭлементТренер.ЦветФона             = ЦветаСтиля.НедоступныеДанныеЦвет;
				// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			КонецЕсли;
			
		КонецЕсли;	
		
		Если ВыделятьЦветом Тогда
			// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			НовыйЭлементВыборНорматив.ЦветФонаЗаголовка    = ЦветаСтиля.НедоступныеДанныеЦвет;
			НовыйЭлементВыборНорматив.ЦветФона             = ЦветаСтиля.НедоступныеДанныеЦвет;
			// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
		КонецЕсли;
		
		ЭтотОбъект.ВыделятьЦветом = ВыделятьЦветом;
			
	КонецЦикла;
	
	Если НЕ ЗаполнениеПоКоманде Тогда
		
		КомандаДобавитьНорматив                     = Форма.Команды.Добавить("ДобавитьНорматив");
		КомандаДобавитьНорматив.Заголовок           = "Добавить норматив";
		КомандаДобавитьНорматив.Действие            = "КомандаДобавитьНорматив";
		КомандаДобавитьНорматив.Картинка            = БиблиотекаКартинок.ДобавитьСтраницу;
		КомандаДобавитьНорматив.Отображение         = ОтображениеКнопки.КартинкаИТекст;
		
		КомандаУдалитьНорматив                      = Форма.Команды.Добавить("УдалитьНорматив");
		КомандаУдалитьНорматив.Заголовок            = "Удалить норматив";
		КомандаУдалитьНорматив.Действие             = "КомандаУдалитьНорматив";
		КомандаУдалитьНорматив.Картинка             = БиблиотекаКартинок.ВнешняяКомпонентаНеДоступна;
		КомандаУдалитьНорматив.Отображение          = ОтображениеКнопки.КартинкаИТекст;
		
		КомандаВыделитьВсех                         = Форма.Команды.Добавить("ВыделитьВсе");
		КомандаВыделитьВсех.Заголовок               = "Выделить все";
		КомандаВыделитьВсех.Действие                = "КомандаВыделитьВсе";
		КомандаВыделитьВсех.Картинка                = БиблиотекаКартинок.УстановитьФлажки;
		КомандаВыделитьВсех.Отображение             = ОтображениеКнопки.Картинка;
		
		КомандаУдалитьВсех                          = Форма.Команды.Добавить("УдалитьВсе");
		КомандаУдалитьВсех.Заголовок                = "Удалить все";
		КомандаУдалитьВсех.Действие                 = "КомандаУдалитьВсе";
		КомандаУдалитьВсех.Картинка                 = БиблиотекаКартинок.СнятьФлажки;
		КомандаУдалитьВсех.Отображение              = ОтображениеКнопки.Картинка;
		
		КнопкаВыделитьВсех                          = Форма.Элементы.Добавить("ВыделитьВсе", Тип("КнопкаФормы"),Форма.Элементы.ГруппаВыделитьУдалитьВсе);
		КнопкаВыделитьВсех.ИмяКоманды               = "ВыделитьВсе";
		КнопкаВыделитьВсех.Вид                      = ВидКнопкиФормы.КнопкаКоманднойПанели;
		
		КнопкаУдалитьВсех                           = Форма.Элементы.Добавить("УдалитьВсе", Тип("КнопкаФормы"),Форма.Элементы.ГруппаВыделитьУдалитьВсе);
		КнопкаУдалитьВсех.ИмяКоманды                = "УдалитьВсе";
		КнопкаУдалитьВсех.Вид                       = ВидКнопкиФормы.КнопкаКоманднойПанели;
		
		КнопкаДобавитьНорматив                      = Форма.Элементы.Добавить("ДобавитьНорматив", Тип("КнопкаФормы"),Форма.Элементы.СоставУчастниковКоманднаяПанель);
		КнопкаДобавитьНорматив.ИмяКоманды           = "ДобавитьНорматив";
		КнопкаДобавитьНорматив.Вид                  = ВидКнопкиФормы.КнопкаКоманднойПанели;
		
		КнопкаДобавитьНормативКнтМеню               = Форма.Элементы.Добавить("СоставУчастниковКонтекстноеМенюДобавитьНорматив", Тип("КнопкаФормы"), Форма.Элементы.СоставУчастниковКонтекстноеМеню);
		КнопкаДобавитьНормативКнтМеню.ИмяКоманды    = "ДобавитьНорматив";
		
		КнопкаУдалитьНормативКнтМеню                = Форма.Элементы.Добавить("СоставУчастниковКонтекстноеМенюУдалитьНорматив", Тип("КнопкаФормы"), Форма.Элементы.СоставУчастниковКонтекстноеМеню);
		КнопкаУдалитьНормативКнтМеню.ИмяКоманды     = "УдалитьНорматив";
				
	КонецЕсли;
	
	ЗаполнитьПолученнуюСтруктураИзОбъекта(ЭтотОбъект, таблицаДляРазбора);
	
	ЭтотОбъект.таблицаДляРазбора.Загрузить(таблицаДляРазбора);
		                                                     
КонецПроцедуры	

Процедура ДобавитьНормативВГотовуюТаблицуНаФорму(ЭтотОбъект, ВыбранныеНормативы) Экспорт
	
	Форма = ЭтотОбъект.ЭтаФорма;
	
	массивДляРазбора = Новый Массив;
	
	СформироватьРеквизитТренер = ?(ЭтотОбъект.Объект.Ссылка.Метаданные().Имя = "СоревнованиеОФПСдачаНормативов", Истина, Ложь);
	
	НовыеРеквизиты = Новый Массив;	
	Для Каждого Норматив Из ВыбранныеНормативы Цикл
		
		УникальныйИдентификаторНорматива = СтрЗаменить(Новый УникальныйИдентификатор(),"-","_");
		НовыеРеквизиты.Добавить(Новый РеквизитФормы("Норматив_" + УникальныйИдентификаторНорматива , Новый ОписаниеТипов("СправочникСсылка.Нормативы"), "СоставУчастниковНаФорме"      , "Норматив"       , Истина));
		НовыеРеквизиты.Добавить(Новый РеквизитФормы("Выбор_" + УникальныйИдентификаторНорматива    , Новый ОписаниеТипов("Булево")                    , "СоставУчастниковНаФорме"      , СокрЛП(Норматив) , Истина));
		Если СформироватьРеквизитТренер Тогда
			НовыеРеквизиты.Добавить(Новый РеквизитФормы("Тренер_" + УникальныйИдентификаторНорматива, Новый ОписаниеТипов("Булево")               , "СоставУчастниковНаФорме"      , "Тренер"        , Истина));
		КонецЕсли;	
		
		СтруктураНорматива = Новый Структура("Норматив, УникальныйИдентификаторНорматива", Норматив, УникальныйИдентификаторНорматива);
		массивДляРазбора.Добавить(СтруктураНорматива);
		
		строкаДляРазбора = ЭтотОбъект.ТаблицаДляРазбора.Добавить();
		ЗаполнитьЗначенияСвойств(строкаДляРазбора,СтруктураНорматива);
		
	КонецЦикла;
	
	Форма.ИзменитьРеквизиты(НовыеРеквизиты);
	
	Для Каждого СтрокаНорматив Из массивДляРазбора Цикл
		
		ВыделятьЦветом = НЕ ЭтотОбъект.ВыделятьЦветом;
		
		НовыйЭлементНорматив                   = Форма.Элементы.Добавить("СоставУчастниковНорматив_" + СтрокаНорматив.УникальныйИдентификаторНорматива, Тип("ПолеФормы"), Форма.Элементы.ГруппаНормативов); 
        НовыйЭлементНорматив.Вид               = ВидПоляФормы.ПолеВвода; 
        НовыйЭлементНорматив.ПутьКДанным       = "СоставУчастниковНаФорме." + "Норматив_" + СтрокаНорматив.УникальныйИдентификаторНорматива;
		НовыйЭлементНорматив.Видимость         = Ложь;
		
		НовыйЭлементВыборНорматив              = Форма.Элементы.Добавить("СоставУчастниковВыбор_" + СтрокаНорматив.УникальныйИдентификаторНорматива, Тип("ПолеФормы"), Форма.Элементы.ГруппаНормативов); 
        НовыйЭлементВыборНорматив.Вид          = ВидПоляФормы.ПолеФлажка; 
        НовыйЭлементВыборНорматив.ПутьКДанным  = "СоставУчастниковНаФорме." + "Выбор_" + СтрокаНорматив.УникальныйИдентификаторНорматива;
		НовыйЭлементВыборНорматив.Видимость    = Истина;
		
		Если СформироватьРеквизитТренер Тогда
			НовыйЭлементТренер              = Форма.Элементы.Добавить("СоставУчастниковТренер_" + СтрокаНорматив.УникальныйИдентификаторНорматива, Тип("ПолеФормы"), Форма.Элементы.ГруппаНормативов); 
			НовыйЭлементТренер.Вид          = ВидПоляФормы.ПолеВвода; 
			НовыйЭлементТренер.ПутьКДанным  = "СоставУчастниковНаФорме." + "Тренер_" + СтрокаНорматив.УникальныйИдентификаторНорматива;
			НовыйЭлементТренер.Видимость    = Истина;
			НовыйЭлементТренер.УстановитьДействие("ПриИзменении", "СоставУчастниковНаФормеТренерПриИзменении");
			
			Если ВыделятьЦветом Тогда
				// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
				НовыйЭлементТренер.ЦветФонаЗаголовка    = ЦветаСтиля.НедоступныеДанныеЦвет;
				НовыйЭлементТренер.ЦветФона             = ЦветаСтиля.НедоступныеДанныеЦвет;
				// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			КонецЕсли;
		КонецЕсли;
		
		Если ВыделятьЦветом Тогда
			// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
			НовыйЭлементВыборНорматив.ЦветФонаЗаголовка    = ЦветаСтиля.НедоступныеДанныеЦвет;
			НовыйЭлементВыборНорматив.ЦветФона             = ЦветаСтиля.НедоступныеДанныеЦвет;
			// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
		КонецЕсли;
		
		ЭтотОбъект.ВыделятьЦветом = ВыделятьЦветом;
		
	КонецЦикла;
	
	Для Каждого СтрокаНорматив Из массивДляРазбора Цикл
		Для Каждого СтрокаСоставУчастников Из ЭтотОбъект.СоставУчастниковНаФорме Цикл
			Если ЗначениеЗаполнено(СтрокаСоставУчастников["Норматив_" + СтрокаНорматив.УникальныйИдентификаторНорматива]) Тогда
				Продолжить;
			Иначе
				СтрокаСоставУчастников["Норматив_" + СтрокаНорматив.УникальныйИдентификаторНорматива] = СтрокаНорматив.Норматив;
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандНаФорме

Процедура УдалитьКолонкуНормативаСФормы(ЭтотОбъект) Экспорт
	
	ТекущийЭлемент = ЭтотОбъект.Элементы.СоставУчастников.ТекущийЭлемент;
	
	Если Найти(ТекущийЭлемент.Имя, "Выбор_") = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран норматив для удаления.
		|Выделите колонку с нормативом, которую необходимо удалить и повторите команду.");
		Возврат;
		
	Иначе
		
		Форма = ЭтотОбъект.ЭтаФорма;
		Гуид = Сред(ТекущийЭлемент.Имя,Найти(ТекущийЭлемент.Имя,"_")+1);
		
		УдалятьРеквизитТренер = ?(ЭтотОбъект.Объект.Ссылка.Метаданные().Имя = "СоревнованиеОФПСдачаНормативов", Истина, Ложь);
		
		МассивУдаляемыхРеквизитов = Новый Массив;
		МассивУдаляемыхРеквизитов.Добавить("СоставУчастниковНаФорме.Выбор_" + Гуид);
		МассивУдаляемыхРеквизитов.Добавить("СоставУчастниковНаФорме.Норматив_" + Гуид);
		Если УдалятьРеквизитТренер Тогда
			МассивУдаляемыхРеквизитов.Добавить("СоставУчастниковНаФорме.Тренер_" + Гуид);
		КонецЕсли;	
		
		Форма.ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);
		
		Форма.Элементы.Удалить(Форма.Элементы["СоставУчастниковНорматив_" + Гуид]);
		Форма.Элементы.Удалить(Форма.Элементы["СоставУчастниковВыбор_" + Гуид]);
		Если УдалятьРеквизитТренер Тогда
			Форма.Элементы.Удалить(Форма.Элементы["СоставУчастниковТренер_" + Гуид]);
		КонецЕсли;
		
		массивСтрокДляУдаления = ЭтотОбъект.таблицаДляРазбора.НайтиСтроки(Новый Структура("УникальныйИдентификаторНорматива",гуид));
		Для Каждого строкаДляУдаления Из массивСтрокДляУдаления Цикл
			ЭтотОбъект.таблицаДляРазбора.Удалить(строкаДляУдаления);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьВсеКолонкиНормативовНаФорме(ЭтотОбъект) Экспорт
	
	Форма = ЭтотОбъект.ЭтаФорма;
	
	МассивУдаляемыхРеквизитов = Новый Массив;
	
	УдалятьРеквизитТренер = ?(ЭтотОбъект.Объект.Ссылка.Метаданные().Имя = "СоревнованиеОФПСдачаНормативов", Истина, Ложь);
	
	Для Каждого строкаНорматив Из ЭтотОбъект.таблицаДляРазбора Цикл
			
		МассивУдаляемыхРеквизитов.Добавить("СоставУчастниковНаФорме.Выбор_" + строкаНорматив.УникальныйИдентификаторНорматива);
		МассивУдаляемыхРеквизитов.Добавить("СоставУчастниковНаФорме.Норматив_" + строкаНорматив.УникальныйИдентификаторНорматива);
		Если УдалятьРеквизитТренер Тогда
			МассивУдаляемыхРеквизитов.Добавить("СоставУчастниковНаФорме.Тренер_" + строкаНорматив.УникальныйИдентификаторНорматива);
		КонецЕсли;
		
		Форма.Элементы.Удалить(Форма.Элементы["СоставУчастниковНорматив_" + строкаНорматив.УникальныйИдентификаторНорматива]);
		Форма.Элементы.Удалить(Форма.Элементы["СоставУчастниковВыбор_" + строкаНорматив.УникальныйИдентификаторНорматива]);
		Если УдалятьРеквизитТренер Тогда
			Форма.Элементы.Удалить(Форма.Элементы["СоставУчастниковТренер_" + строкаНорматив.УникальныйИдентификаторНорматива]);
		КонецЕсли;
		
	КонецЦикла;
	
	Форма.ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);
	
	ЭтотОбъект.таблицаДляРазбора.Очистить();
	
КонецПроцедуры	

#КонецОбласти

#Область ЗаполнениеСтруктурыНаФорме

Процедура ЗаполнитьПолученнуюСтруктураИзОбъекта(ЭтотОбъект, ТаблицаНормативов)Экспорт
		
	ЗаполнятьГруппуИТренераИзЗаявки = ?(ЭтотОбъект.Объект.Ссылка.Метаданные().Имя = "ЗаявкаНаПроведениеСоревнованияСдачаНормативаОФП", Ложь, Истина);
	
	Для Каждого СтрокаНорматив Из ТаблицаНормативов Цикл
		массивСтрокСоставУчастников = ЭтотОбъект.Объект.СоставУчастников.НайтиСтроки(Новый Структура("УникальныйИдентификаторНорматива",СтрокаНорматив.УникальныйИдентификаторНорматива));
		
		Для Каждого СтрокаСоставУчастников Из массивСтрокСоставУчастников Цикл
			массивСтрокТаблицаСоставаУчастников = ЭтотОбъект.СоставУчастниковНаФорме.НайтиСтроки(Новый Структура("Спортсмен,МеждународнаяВозрастнаяГруппа",СтрокаСоставУчастников.Спортсмен, СтрокаСоставУчастников.МеждународнаяВозрастнаяГруппа));
			
			Для Каждого строкаТаблицаСоставаУчастников Из массивСтрокТаблицаСоставаУчастников Цикл
				
				Если ЗаполнятьГруппуИТренераИзЗаявки Тогда
					ЗаполнитьЗначенияСвойств(СтрокаСоставУчастников,строкаТаблицаСоставаУчастников,"МеждународнаяВозрастнаяГруппа, СтартовыйНомер");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаСоставУчастников.Норматив) Тогда
					строкаТаблицаСоставаУчастников["Норматив_" + СтрокаНорматив.УникальныйИдентификаторНорматива] = СтрокаНорматив.Норматив;
					строкаТаблицаСоставаУчастников["Выбор_" + СтрокаНорматив.УникальныйИдентификаторНорматива] = Истина;
					Если ЗаполнятьГруппуИТренераИзЗаявки Тогда
						строкаТаблицаСоставаУчастников["Тренер_" + СтрокаНорматив.УникальныйИдентификаторНорматива] = СтрокаСоставУчастников.Тренер;
					КонецЕсли;
				ИначеЕсли ЗаполнятьГруппуИТренераИзЗаявки Тогда
					строкаТаблицаСоставаУчастников["Тренер_" + СтрокаНорматив.УникальныйИдентификаторНорматива] = СтрокаСоставУчастников.Тренер;
				Иначе
					Продолжить;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;	
		
	КонецЦикла;		
	
КонецПроцедуры

Процедура ПеренестиСтруктуруНормативовВТаблицуДокумента(ЭтотОбъект, Отказ) Экспорт
	
	Объект = ЭтотОбъект.Объект;
	
	Объект.СоставУчастников.Очистить();
	Объект.ЗаявленныеНормативы.Очистить();
	
	ЗаполнятьРеквизитТренер = ?(Объект.Ссылка.Метаданные().Имя = "СоревнованиеОФПСдачаНормативов", Истина, Ложь);
	
	Если ЭтотОбъект.ТаблицаДляРазбора.Количество()= 0 Тогда
		Для Каждого СтрокаСоставУчастниковНаФорме Из ЭтотОбъект.СоставУчастниковНаФорме Цикл
			строкаСоставУчастников = Объект.СоставУчастников.Добавить();
			ЗаполнитьЗначенияСвойств(строкаСоставУчастников,СтрокаСоставУчастниковНаФорме);
		КонецЦикла;	
	КонецЕсли;	
	
	Для Каждого СтрокаНорматив Из ЭтотОбъект.ТаблицаДляРазбора Цикл
		Для Каждого СтрокаСоставУчастниковНаФорме Из ЭтотОбъект.СоставУчастниковНаФорме Цикл
			строкаСоставУчастников = Объект.СоставУчастников.Добавить();
			ЗаполнитьЗначенияСвойств(строкаСоставУчастников,СтрокаСоставУчастниковНаФорме);
			строкаСоставУчастников.УникальныйИдентификаторНорматива = СтрокаНорматив.УникальныйИдентификаторНорматива;
			Если СтрокаСоставУчастниковНаФорме["Выбор_" + СтрокаНорматив.УникальныйИдентификаторНорматива] Тогда
				строкаСоставУчастников.Норматив = СтрокаНорматив.Норматив;		
			КонецЕсли;
			Если ЗаполнятьРеквизитТренер Тогда
				строкаСоставУчастников.Тренер = СтрокаСоставУчастниковНаФорме["Тренер_" + СтрокаНорматив.УникальныйИдентификаторНорматива]
			КонецЕсли;	
		КонецЦикла;
		строкаЗаявленныйНорматив = Объект.ЗаявленныеНормативы.Добавить();
		ЗаполнитьЗначенияСвойств(строкаЗаявленныйНорматив,СтрокаНорматив);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Текст  = "";
	// {Рарус adilas #- -Sonar 2021.06.29
	УчетСпортсменовВызовСервера.ВвестиСтруктуруВоВременнуюТаблицу(
	   Текст,
	   Новый Структура("Спортсмен,МеждународнаяВозрастнаяГруппа,Норматив" + ?(ЗаполнятьРеквизитТренер, ",Тренер", "")),
	   "ВТ_ТаблицаДокумента",
	   "ТаблицаДокумента");
	   
	Запрос.УстановитьПараметр("ТаблицаДокумента", Объект.СоставУчастников.Выгрузить());   
	
	Запрос.Текст = Текст + "
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТаблицаДокумента.Спортсмен КАК Спортсмен,
	               |	ВТ_ТаблицаДокумента.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа,
	               |	ВТ_ТаблицаДокумента.Норматив КАК Норматив, %1
	               |	СУММА(1) КАК КоличествоСтрок
	               |ПОМЕСТИТЬ ВТ_ДанныеДокументаПоКоличествуСтрок
	               |ИЗ
	               |	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ТаблицаДокумента.Спортсмен,
	               |	ВТ_ТаблицаДокумента.МеждународнаяВозрастнаяГруппа,
	               |	ВТ_ТаблицаДокумента.Норматив %2
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеДокументаПоКоличествуСтрок.Спортсмен КАК Спортсмен,
	               |	ВТ_ДанныеДокументаПоКоличествуСтрок.МеждународнаяВозрастнаяГруппа КАК МеждународнаяВозрастнаяГруппа,
	               |	ВТ_ДанныеДокументаПоКоличествуСтрок.Норматив КАК Норматив, %3
	               |	ВТ_ДанныеДокументаПоКоличествуСтрок.КоличествоСтрок КАК КоличествоСтрок
	               |ИЗ
	               |	ВТ_ДанныеДокументаПоКоличествуСтрок КАК ВТ_ДанныеДокументаПоКоличествуСтрок
	               |ГДЕ
	               |	ВТ_ДанныеДокументаПоКоличествуСтрок.КоличествоСтрок > 1
				   |    И ВТ_ДанныеДокументаПоКоличествуСтрок.Норматив <> ЗНАЧЕНИЕ(Справочник.Нормативы.ПустаяСсылка)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%1", ?(ЗаполнятьРеквизитТренер, " ВТ_ТаблицаДокумента.Тренер КАК Тренер, ", ""));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%2", ?(ЗаполнятьРеквизитТренер, ", ВТ_ТаблицаДокумента.Тренер", ""));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%3", ?(ЗаполнятьРеквизитТренер, " ВТ_ДанныеДокументаПоКоличествуСтрок.Тренер КАК Тренер, ", ""));
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		Отказ = Истина;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Спортсмен %1 с международной возрастной группой %2 заявлен %3 раз(а) в нормативе %4! 
				      |Необходимо исправить.'"),
				Выборка.Спортсмен,
				Выборка.МеждународнаяВозрастнаяГруппа,
				Выборка.КоличествоСтрок,
				Выборка.Норматив);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);	
			
		КонецЦикла;	
		
	Иначе
		Возврат
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроиндексироватьТаблицуДокумента(Объект,ИмяТаблицы) Экспорт
	
	таблицаДокумента = Объект[ИмяТаблицы].Выгрузить();
	таблицаДокумента.Колонки.Добавить("Индекс",Новый ОписаниеТипов("Число"));
	Для ИндексСтроки = 0 По таблицаДокумента.Количество()-1 Цикл
		таблицаДокумента[ИндексСтроки].Индекс = ИндексСтроки;
	КонецЦикла;
	
	Возврат таблицаДокумента
	
КонецФункции

Функция СформироватьТаблицуЗаявленныхСпортсменовПоНормативам(ЭтотОбъект, ИмяТаблицы, ИмяРеквизитаИдентификатора) Экспорт
	
	таблицаЗаявленныхНаФормеСпортсменов = Новый ТаблицаЗначений;
	таблицаЗаявленныхНаФормеСпортсменов.Колонки.Добавить("Индекс", Новый ОписаниеТипов("Число"));
	таблицаЗаявленныхНаФормеСпортсменов.Колонки.Добавить("Норматив", Новый ОписаниеТипов("СправочникСсылка.Нормативы"));
	таблицаЗаявленныхНаФормеСпортсменов.Колонки.Добавить("Спортсмен", Новый ОписаниеТипов("СправочникСсылка.Спортсмены"));
	таблицаЗаявленныхНаФормеСпортсменов.Колонки.Добавить("Тренер", Новый ОписаниеТипов("СправочникСсылка.Тренеры"));
	таблицаЗаявленныхНаФормеСпортсменов.Колонки.Добавить("МеждународнаяВозрастнаяГруппа", Новый ОписаниеТипов("СправочникСсылка.МеждународныеВозрастныеГруппы"));
	
	ЗаполнятьТренераПоГуиду = ?(ЭтотОбъект.Объект.Ссылка.Метаданные().Имя = "ЗаявкаНаПроведениеСоревнованияСдачаНормативаОФП", Ложь, Истина);
	
	Для Индекс = 0 По ЭтотОбъект[ИмяТаблицы].Количество()-1 Цикл
		СтрокаНорматив = ЭтотОбъект[ИмяТаблицы][Индекс];
		Гуид = СтрЗаменить(СтрокаНорматив[ИмяРеквизитаИдентификатора],"-","_");
		Для Каждого СтрокаСоставУчастников Из ЭтотОбъект.СоставУчастниковНаФорме Цикл
			Если НЕ СтрокаСоставУчастников["Выбор_" + Гуид] Тогда
				Продолжить;
			Иначе
				строкаЗаявленныхНаФормеСпортсменов = таблицаЗаявленныхНаФормеСпортсменов.Добавить();
				ЗаполнитьЗначенияСвойств(строкаЗаявленныхНаФормеСпортсменов,СтрокаСоставУчастников);
				Если ЗаполнятьТренераПоГуиду Тогда
					строкаЗаявленныхНаФормеСпортсменов.Тренер   = СтрокаСоставУчастников["Тренер_" + Гуид];
				КонецЕсли;	
				строкаЗаявленныхНаФормеСпортсменов.Норматив = СтрокаНорматив.Норматив;
				строкаЗаявленныхНаФормеСпортсменов.Индекс   = СтрокаСоставУчастников.НомерСтроки-1;
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;
	
	Возврат таблицаЗаявленныхНаФормеСпортсменов
	
КонецФункции

#КонецОбласти