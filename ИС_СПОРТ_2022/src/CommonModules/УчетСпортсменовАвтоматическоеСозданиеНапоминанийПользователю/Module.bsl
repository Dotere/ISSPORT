// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
#Область СлужебныеПроцедурыИФункции

Процедура АвтоматическиеНапоминанияПользователямОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
    
    ИмяОбъектаМетаданных = Источник.Метаданные().Имя;
    СинонимОбъектаМетаданных = Источник.Метаданные().Синоним;
    Записывать = ПараметрыСеанса.ТекущаяОрганизация.АвтоматическиеНапоминанияПользователям;
    
    Если Записывать Тогда
        
        НаборЗаписей = РегистрыСведений.НапоминанияПользователя.СоздатьНаборЗаписей();
        НаборЗаписей.Отбор.Источник.Установить(?(ИмяОбъектаМетаданных = "ДокументыФизическихЛиц", Источник, Источник.Ссылка));
        //НаборЗаписей.Прочитать();
        //Если НаборЗаписей.Количество() = 0 Тогда
            //Запись_ = НаборЗаписей.Добавить();
            СоздатьЗаписиНапоминание(НаборЗаписей, Источник, ИмяОбъектаМетаданных, СинонимОбъектаМетаданных);
        //Иначе
        //    Для Каждого Запись_ Из НаборЗаписей Цикл
        //        СоздатьЗаписьНапоминание(Запись_, Источник, ИмяОбъектаМетаданных, СинонимОбъектаМетаданных);
        //    КонецЦикла;	
        //КонецЕсли;
        Попытка
            НаборЗаписей.Записать();
        Исключение
            ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось создать напоминание. Создайте вручную!");
        КонецПопытки;	
    КонецЕсли;	
    
КонецПроцедуры

Процедура СоздатьЗаписиНапоминание(НаборЗаписей, Источник, ИмяОбъектаМетаданных, СинонимОбъектаМетаданных, ДополнительныеСвойства = Неопределено)
    
    Если ИмяОбъектаМетаданных = "ДопускиУчастниковКСпортивнымСоревнованиям" Тогда
		
        ТЗСрокиДействия = Источник.Спортсмены.Выгрузить();
        ТЗСрокиДействия.Свернуть("ДействуетДо");
        
        ТЗСпортсмены = Источник.Спортсмены.Выгрузить();
		 
        ВремяСобытия = НачалоДня(Источник.Дата);
        Для каждого СтрокаСрока Из ТЗСрокиДействия Цикл
            
            Запись = НаборЗаписей.Добавить();
			// {Рарус adilas #13462 -Уведомления 2021.03.10
			// Запись с путсым пользователем
            Запись.Пользователь = Справочники.Пользователи.ПустаяСсылка();
			Запись.ВидСпорта = Источник.ВидСпорта;
			// }Рарус adilas #13462 -Уведомления 2021.03.10
			// {Рарус dotere #22114 -Запись организации 2021.12.09
			Запись.Организация = ПараметрыСеанса.ТекущаяОрганизация;
			// }Рарус dotere #22114 -Запись организации 2021.12.09

            Запись.ВремяСобытия = ВремяСобытия;
            Запись.Источник = Источник.Ссылка;
            Запись.ИмяРеквизитаИсточника = "ДействуетДо";
            
            ВремяСобытия = ВремяСобытия+1;
            
            СрокНапоминания = СтрокаСрока.ДействуетДо;
            
            НайденныеСтроки = ТЗСпортсмены.НайтиСтроки(Новый Структура("ДействуетДо",СтрокаСрока.ДействуетДо));
            ПараметрыОписанияКраткогоСостава = СформироватьПараметрыПостроенияСтроки(НайденныеСтроки);
            СтрокаСпортсмены = УчетСпортсменовСервер.СформироватьСтрокуПоМассиву(ПараметрыОписанияКраткогоСостава);
            
            ИнтервалНапоминания = ПараметрыСеанса.ТекущаяОрганизация.НапоминаниеДопускТренировкиМесяцев;
            
            Если Источник.ВидДопуска = ПредопределенноеЗначение("Перечисление.ВидыДопусковКСпортивнойДеятельности.ДопускКСпортивнымСоревнованиям") Тогда
                
                ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
                НСтр("ru = 'У спортсменов:"+Символы.ПС+"   %1 "+Символы.ПС+"заканчивается допуск к соревнованиям. Допуск действует до %2'"),
                СтрокаСпортсмены,
                Формат(СрокНапоминания,"ДЛФ=Д"));
                
            Иначе
                
                ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
                НСтр("ru = 'У спортсменов:"+Символы.ПС+"   %1 "+Символы.ПС+"заканчивается допуск к тренировочному процессу. Допуск действует до %2'"),
                СтрокаСпортсмены,
                Формат(СрокНапоминания,"ДЛФ=Д"));
                
            КонецЕсли;
            
            СрокЗаМесяцДоДаты = ДобавитьМесяц(СрокНапоминания, (-1)*ИнтервалНапоминания);
            // {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
            Запись.СрокНапоминания = ?(СрокЗаМесяцДоДаты < ТекущаяДатаСеанса(),ТекущаяДатаСеанса(),СрокЗаМесяцДоДаты);
			// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
            Запись.Описание = ТекстОписания;
            Запись.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ОтносительноВремениПредмета;
            Запись.ИнтервалВремениНапоминания = 86400 * 7;
            Запись.ПредставлениеИсточника = СинонимОбъектаМетаданных;
            
        КонецЦикла; 
        
        Возврат;
        
    ИначеЕсли ИмяОбъектаМетаданных = "ПрисвоениеРазряда" Тогда
        
        ТЗСрокиДействия = Источник.Спортсмены.Выгрузить();
        ТЗСрокиДействия.Свернуть("ДатаПодтверждения");
        
        ТЗСпортсмены = Источник.Спортсмены.Выгрузить();
        
        ВремяСобытия = НачалоДня(Источник.Дата);
        Для каждого СтрокаСрока Из ТЗСрокиДействия Цикл
            
            Запись = НаборЗаписей.Добавить();
            // {Рарус adilas #13462 -Уведомления 2021.03.10
			// Запись с путсым пользователем
            Запись.Пользователь = Справочники.Пользователи.ПустаяСсылка();
			Запись.ВидСпорта = Источник.ВидСпорта;
			// }Рарус adilas #13462 -Уведомления 2021.03.10
			// {Рарус dotere #22114 -Запись организации 2021.12.09
			Запись.Организация = ПараметрыСеанса.ТекущаяОрганизация;
			// }Рарус dotere #22114 -Запись организации 2021.12.09
            Запись.ВремяСобытия = ВремяСобытия;
            Запись.Источник = Источник.Ссылка;
            Запись.ИмяРеквизитаИсточника = "ДатаПодтверждения";

            ВремяСобытия = ВремяСобытия+1;
            
            СрокНапоминания = СтрокаСрока.ДатаПодтверждения;
            
            НайденныеСтроки = ТЗСпортсмены.НайтиСтроки(Новый Структура("ДатаПодтверждения",СтрокаСрока.ДатаПодтверждения));
            ПараметрыОписанияКраткогоСостава = СформироватьПараметрыПостроенияСтроки(НайденныеСтроки);
            СтрокаСпортсмены = УчетСпортсменовСервер.СформироватьСтрокуПоМассиву(ПараметрыОписанияКраткогоСостава);
            
            ИнтервалНапоминания = ПараметрыСеанса.ТекущаяОрганизация.НапоминаниеРазрядыМесяцев;
            
            СрокЗаМесяцДоДаты = ДобавитьМесяц(СрокНапоминания, (-1)*ИнтервалНапоминания);
            
            ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            НСтр("ru = 'Спортсменам:"+Символы.ПС+"   %1 "+Символы.ПС+"необходимо подтвердить разряд. Разряд действует до: %2'"),
            СтрокаСпортсмены,
            Формат(СрокНапоминания,"ДЛФ=Д"));
            // {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
            Запись.СрокНапоминания = ?(СрокЗаМесяцДоДаты < ТекущаяДатаСеанса(),ТекущаяДатаСеанса(),СрокЗаМесяцДоДаты);
			// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
            Запись.Описание = ТекстОписания;
            Запись.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ОтносительноВремениПредмета;
            Запись.ИнтервалВремениНапоминания = 86400 * 7;
            Запись.ПредставлениеИсточника = СинонимОбъектаМетаданных;
            
        КонецЦикла; 
        
        Возврат;
        
    ИначеЕсли ИмяОбъектаМетаданных = "ПодтверждениеРазрядаСпортсмена" Тогда
        
        ТЗСрокиДействия = Источник.Спортсмены.Выгрузить();
        ТЗСрокиДействия.Свернуть("ДатаСледующегоПодтверждения");
        
        ТЗСпортсмены = Источник.Спортсмены.Выгрузить();
        
        ВремяСобытия = НачалоДня(Источник.Дата);
        Для каждого СтрокаСрока Из ТЗСрокиДействия Цикл
            
            Запись = НаборЗаписей.Добавить();
            // {Рарус adilas #13462 -Уведомления 2021.03.10
			// Запись с путсым пользователем
            Запись.Пользователь = Справочники.Пользователи.ПустаяСсылка();
			Запись.ВидСпорта = Источник.ВидСпорта;
			
			// }Рарус adilas #13462 -Уведомления 2021.03.10
			// {Рарус dotere #22114 -Запись организации 2021.12.09
			Запись.Организация = ПараметрыСеанса.ТекущаяОрганизация;
			// }Рарус dotere #22114 -Запись организации 2021.12.09
			Запись.ВремяСобытия = ВремяСобытия;
            Запись.Источник = Источник.Ссылка;
            Запись.ИмяРеквизитаИсточника = "ДатаСледующегоПодтверждения";

            ВремяСобытия = ВремяСобытия+1;
            
            СрокНапоминания = СтрокаСрока.ДатаСледующегоПодтверждения;
            
            НайденныеСтроки = ТЗСпортсмены.НайтиСтроки(Новый Структура("ДатаСледующегоПодтверждения",СтрокаСрока.ДатаСледующегоПодтверждения));
            ПараметрыОписанияКраткогоСостава = СформироватьПараметрыПостроенияСтроки(НайденныеСтроки);
            СтрокаСпортсмены = УчетСпортсменовСервер.СформироватьСтрокуПоМассиву(ПараметрыОписанияКраткогоСостава);
            
            ИнтервалНапоминания = ПараметрыСеанса.ТекущаяОрганизация.НапоминаниеРазрядыМесяцев;
            
            СрокЗаМесяцДоДаты = ДобавитьМесяц(СрокНапоминания, (-1)*ИнтервалНапоминания);
            
            ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            НСтр("ru = 'Спортсменам:"+Символы.ПС+"   %1 "+Символы.ПС+"необходимо подтвердить разряд. Разряд действует до: %2'"),
            СтрокаСпортсмены,
            Формат(СрокНапоминания,"ДЛФ=Д"));
            // {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
            Запись.СрокНапоминания = ?(СрокЗаМесяцДоДаты < ТекущаяДатаСеанса(),ТекущаяДатаСеанса(),СрокЗаМесяцДоДаты);
			// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
            Запись.Описание = ТекстОписания;
            Запись.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ОтносительноВремениПредмета;
            Запись.ИнтервалВремениНапоминания = 86400 * 7;
            Запись.ПредставлениеИсточника = СинонимОбъектаМетаданных;
            
        КонецЦикла; 
        
        Возврат;
        
    ИначеЕсли ИмяОбъектаМетаданных = "СтраховойПолисСпортсмена" Тогда
        
        ИнтервалНапоминания = ПараметрыСеанса.ТекущаяОрганизация.НапоминанияСтраховыхПолисовМесяцев;
        СрокНапоминания = Источник.ДатаОкончания;
        
        Запись = НаборЗаписей.Добавить();
		// {Рарус adilas #13462 -Уведомления 2021.03.10
		// Запись с путсым пользователем
		Запись.Пользователь = Справочники.Пользователи.ПустаяСсылка();
		Запись.ВидСпорта = Источник.ВидСпорта;
		
		// }Рарус adilas #13462 -Уведомления 2021.03.10
		// {Рарус dotere #22114 -Запись организации 2021.12.09
		Запись.Организация = ПараметрыСеанса.ТекущаяОрганизация;
		// }Рарус dotere #22114 -Запись организации 2021.12.09
        Запись.ВремяСобытия = Источник.Дата;
        Запись.Источник = Источник.Ссылка;
        Запись.ИмяРеквизитаИсточника = "ДатаОкончания";
        
        ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
        НСтр("ru = 'У спортсмена %1 заканчивается страховой полис. Полис действует до %2'"),
        СклонениеПредставленийОбъектов.ПросклонятьПредставление(Источник.Спортсмен.Наименование,2,Источник.Ссылка),
        Формат(Источник.ДатаОкончания,"ДЛФ=Д"));
        //{Рарус lobash IN-10029 15.10.20 
    ИначеЕсли ИмяОбъектаМетаданных = "ДокументыФизическихЛиц" Тогда
        Запись = НаборЗаписей.Добавить();
		// {Рарус adilas #13462 -Уведомления 2021.03.10
		// Запись с путсым пользователем
		Запись.Пользователь = Справочники.Пользователи.ПустаяСсылка();
		Запись.ВидСпорта = Источник.ВидСпорта;
		
		// }Рарус adilas #13462 -Уведомления 2021.03.10
		// {Рарус dotere #22114 -Запись организации 2021.12.09
		Запись.Организация = ПараметрыСеанса.ТекущаяОрганизация;
		// }Рарус dotere #22114 -Запись организации 2021.12.09
        Запись.ВремяСобытия = ДополнительныеСвойства.Период;
        Запись.Источник = Источник; 
            
        ИнтервалНапоминания = ПараметрыСеанса.ТекущаяОрганизация.НапоминанияДокументыМесяцев;
        СрокНапоминания = ДополнительныеСвойства.СрокДействия;
        Запись.ИмяРеквизитаИсточника = "СрокДействия";
        Если ДополнительныеСвойства.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортГражданинаРФ Тогда
            ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            НСтр("ru = 'Спортсмену %1 произвести замену паспорта. Паспорт действует до: %2'"),
            СклонениеПредставленийОбъектов.ПросклонятьПредставление(ДополнительныеСвойства.ФизическоеЛицо.Наименование,2),
            Формат(ДополнительныеСвойства.СрокДействия,"ДЛФ=Д"));
        ИначеЕсли ДополнительныеСвойства.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.СвидетельствоОРождении Тогда
            ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            НСтр("ru = 'Спортсмену %1 необходимо получить паспорт. Свидетельство о рождении действует до: %2'"),
            СклонениеПредставленийОбъектов.ПросклонятьПредставление(ДополнительныеСвойства.ФизическоеЛицо.Наименование,2),
            Формат(ДополнительныеСвойства.СрокДействия,"ДЛФ=Д"));
        КонецЕсли;
        //}Рарус lobash IN-10029 15.10.20 
    КонецЕсли;
    
    СрокЗаМесяцДоДаты = ДобавитьМесяц(СрокНапоминания, (-1)*ИнтервалНапоминания);
    // {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
    Запись.СрокНапоминания = ?(СрокЗаМесяцДоДаты < ТекущаяДатаСеанса(),ТекущаяДатаСеанса(),СрокЗаМесяцДоДаты);
	// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
    Запись.Описание = ТекстОписания;
    Запись.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ОтносительноВремениПредмета;
    Запись.ИнтервалВремениНапоминания = 86400 * 7;
    Запись.ПредставлениеИсточника = СинонимОбъектаМетаданных;
    
    
КонецПроцедуры	

Процедура СоздатьЗаписьНапоминание(Запись, Источник, ИмяОбъектаМетаданных, СинонимОбъектаМетаданных, ДополнительныеСвойства = Неопределено)
        
	//Если НЕ ЗначениеЗаполнено(Запись.Пользователь) Тогда
	//    Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	//КонецЕсли;
	
	// {Рарус adilas #13462 -Уведомления 2021.03.10
	// Запись с путсым пользователем
	Запись.Пользователь = Справочники.Пользователи.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.ВидСпорта КАК ВидСпорта,
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Этап КАК Этап,
		|	ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТ_Этапы
		|ИЗ
		|	РегистрСведений.ЭтапыСпортивнойПодготовкиСпортсменов.СрезПоследних(
		|			&ИсточникДата,
		|			Спортсмен = &Спортсмен
		|				И Организация = &Организация) КАК ЭтапыСпортивнойПодготовкиСпортсменовСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидСпорта,
		|	Этап,
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Этапы.ВидСпорта КАК ВидСпорта
		|ИЗ
		|	ВТ_Этапы КАК ВТ_Этапы
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_Этапы.Регистратор.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("ИсточникДата", Источник.Дата);
	Запрос.УстановитьПараметр("Организация", ПараметрыСеанса.ТекущаяОрганизация);
	Запрос.УстановитьПараметр("Спортсмен", Источник.Спортсмен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВидСпорта = ВыборкаДетальныеЗаписи.ВидСпорта;
	КонецЦикла;
	
	// }Рарус adilas #13462 -Уведомления 2021.03.10
    
    Если Запись.ВремяСобытия = Дата(1,1,1) Тогда
        Запись.ВремяСобытия = ?(ИмяОбъектаМетаданных = "ДокументыФизическихЛиц", ДополнительныеСвойства.Период, Источник.Дата);
    КонецЕсли; 
    
    Запись.Источник = ?(ИмяОбъектаМетаданных = "ДокументыФизическихЛиц", Источник, Источник.Ссылка); 
    
   Если ИмяОбъектаМетаданных = "СтраховойПолисСпортсмена" Тогда
        ИнтервалНапоминания = ПараметрыСеанса.ТекущаяОрганизация.НапоминанияСтраховыхПолисовМесяцев;
		СрокНапоминания = Источник.ДатаОкончания;
        Запись.ИмяРеквизитаИсточника = "ДатаОкончания";
        ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
        НСтр("ru = 'У спортсмена %1 заканчивается страховой полис. Полис действует до %2'"),
        СклонениеПредставленийОбъектов.ПросклонятьПредставление(Источник.Спортсмен.Наименование,2,Источник.Ссылка),
        Формат(Источник.ДатаОкончания,"ДЛФ=Д"));
        //{Рарус lobash IN-10029 15.10.20 
    ИначеЕсли ИмяОбъектаМетаданных = "ДокументыФизическихЛиц" Тогда
        ИнтервалНапоминания = ПараметрыСеанса.ТекущаяОрганизация.НапоминанияДокументыМесяцев;
        СрокНапоминания = ДополнительныеСвойства.СрокДействия;
        Запись.ИмяРеквизитаИсточника = "СрокДействия";
        Если ДополнительныеСвойства.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПаспортГражданинаРФ Тогда
            ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            НСтр("ru = 'Спортсмену %1 произвести замену паспорта. Паспорт действует до: %2'"),
            СклонениеПредставленийОбъектов.ПросклонятьПредставление(ДополнительныеСвойства.ФизическоеЛицо.Наименование,2),
            Формат(ДополнительныеСвойства.СрокДействия,"ДЛФ=Д"));
        ИначеЕсли ДополнительныеСвойства.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.СвидетельствоОРождении Тогда
            ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            НСтр("ru = 'Спортсмену %1 необходимо получить паспорт. Свидетельство о рождении действует до: %2'"),
            СклонениеПредставленийОбъектов.ПросклонятьПредставление(ДополнительныеСвойства.ФизическоеЛицо.Наименование,2),
            Формат(ДополнительныеСвойства.СрокДействия,"ДЛФ=Д"));
        КонецЕсли;
        //}Рарус lobash IN-10029 15.10.20 
    КонецЕсли;
    
    СрокЗаМесяцДоДаты = ДобавитьМесяц(СрокНапоминания, (-1)*ИнтервалНапоминания);
	
	// {Рарус adilas #13462 -Уведомления 2021.03.10
	Запись.ВидСпорта = ВидСпорта;
		
	// }Рарус adilas #13462 -Уведомления 2021.03.10
	// {Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
    Запись.СрокНапоминания = ?(СрокЗаМесяцДоДаты < ТекущаяДатаСеанса(),ТекущаяДатаСеанса(),СрокЗаМесяцДоДаты);
	// }Рарус adilas #1.0.0.2 -SonarQube 2021.04.23
    Запись.Описание = ТекстОписания;
    Запись.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ОтносительноВремениПредмета;
    Запись.ИнтервалВремениНапоминания = 86400 * 7;
    Запись.ПредставлениеИсточника = СинонимОбъектаМетаданных;
    
    
КонецПроцедуры	

//{Рарус lobash IN-10029 15.10.20 
Процедура АвтоматическиеНапиминанияПользователямИзСправочникаПриЗаписи(Источник, Отказ) Экспорт
    ДополнительныеСвойства = Новый Структура;
    Для каждого Запись из Источник Цикл
        ДополнительныеСвойства.Вставить("СрокДействия", 	Запись.СрокДействия);
        ДополнительныеСвойства.Вставить("ВидДокумента", 	Запись.ВидДокумента);
        ДополнительныеСвойства.Вставить("Период", 			Запись.Период);
        ДополнительныеСвойства.Вставить("ФизическоеЛицо", 	Запись.ФизическоеЛицо);
        ДополнительныеСвойства.Вставить("Источник", 		Запись);
        
        ИмяОбъектаМетаданных = Источник.Метаданные().Имя;
        СинонимОбъектаМетаданных = Источник.Метаданные().Синоним;
        Записывать = ПараметрыСеанса.ТекущаяОрганизация.АвтоматическиеНапоминанияПользователям;
        
        Если Записывать Тогда
            
            НаборЗаписей = РегистрыСведений.НапоминанияПользователя.СоздатьНаборЗаписей();
            НаборЗаписей.Отбор.Источник.Установить(Источник);
            НаборЗаписей.Прочитать();
            Если НаборЗаписей.Количество() = 0 Тогда
                Запись_ = НаборЗаписей.Добавить();
                СоздатьЗаписьНапоминание(Запись_, Источник, ИмяОбъектаМетаданных, СинонимОбъектаМетаданных, ДополнительныеСвойства);
            Иначе
                Для Каждого Запись_ Из НаборЗаписей Цикл
                    СоздатьЗаписьНапоминание(Запись_, Источник, ИмяОбъектаМетаданных, СинонимОбъектаМетаданных, ДополнительныеСвойства);
                КонецЦикла;	
            КонецЕсли;
            Попытка
                НаборЗаписей.Записать();
            Исключение
                ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось создать напоминание. Создайте вручную!");
            КонецПопытки;	
        КонецЕсли;	
    КонецЦикла;
    
КонецПроцедуры
//}Рарус lobash IN-10029 15.10.20 

Функция СформироватьПараметрыПостроенияСтроки(Источник)
    
    МассивЗначений = Новый Массив;
    
    Для каждого СтрокаИсточника Из Источник Цикл
          МассивЗначений.Добавить(СтрокаИсточника.Спортсмен);
      КонецЦикла; 
      
    СтруктураПараметров = Новый Структура;
    СтруктураПараметров.Вставить("МассивЗначений",МассивЗначений);
    СтруктураПараметров.Вставить("ОграниченнаяДлина",Ложь);
    СтруктураПараметров.Вставить("ДлинаСтроки",3000);
    
    Возврат СтруктураПараметров;
    
КонецФункции

#КонецОбласти