///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Позволяет задать настройки для регистрации событий доступа к персональным данным.
//
// При расширении состава субъектов персональных данных следует иметь в виду, что регистрация событий для них
// не начнется автоматически (это отдельно настраивает администратор программы). Однако если необходимо управлять этим
// при переходе на новую версию программы, то следует реализовать обработчик обновления, вызывающий 
// процедуру ЗащитаПерсональныхДанных.УстановитьИспользованиеСобытияДоступ.
//
// Параметры:
//   ТаблицаСведений    - ТаблицаЗначений - таблица с полями:
//    * Объект          - Строка - полное имя объекта метаданных с персональными данными;
//    * ПоляРегистрации - Строка - имена полей, значения которых выводятся в журнал событий доступа к персональным
//                                 данным для идентификации субъекта персональных данных. Для ссылочных типов, 
//                                 как правило, это поле "Ссылка". Отдельные поля регистрации отделяются запятой, 
//                                 альтернативные - символом "|";
//    * ПоляДоступа     - Строка - имена полей доступа через запятую. Обращение (попытка доступа) к этим полям 
//                                 приводит к записи журнала;
//    * ОбластьДанных   - Строка - идентификатор области данных, если их несколько. Необязательно для заполнения.
//
// Пример:
//  Сведения = ТаблицаСведений.Добавить();
//  Сведения.Объект				= "Справочник.ФизическиеЛица";
//  Сведения.ПоляРегистрации	= "Ссылка";
//  Сведения.ПоляДоступа		= "Наименование,ДатаРождения";
//  Сведения.ОбластьДанных		= "ЛичныеДанные";
//
//  Сведения = ТаблицаСведений.Добавить();
//  Сведения.Объект				= "Справочник.ФизическиеЛица";
//  Сведения.ПоляРегистрации	= "Ссылка";
//  Сведения.ПоляДоступа		= "СерияДокумента,НомерДокумента,КемВыданДокумент,ДатаВыдачиДокумента";
//  Сведения.ОбластьДанных		= "ПаспортныеДанные";
//
Процедура ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений) Экспорт
	
	
	
КонецПроцедуры

// Обеспечивает составление коллекции областей персональных данных.
//
// Параметры:
//		ОбластиПерсональныхДанных - ТаблицаЗначений - таблица с полями:
//			* Имя			- Строка - идентификатор области данных.
//			* Представление	- Строка - пользовательское представление области данных.
//			* Родитель		- Строка - идентификатор родительской области данных.
//
Процедура ЗаполнитьОбластиПерсональныхДанных(ОбластиПерсональныхДанных) Экспорт
	
	
	
КонецПроцедуры

// Вызывается при заполнении формы "Согласие на обработку персональных данных" данными, 
// переданных в качестве параметров, субъектов.
//
// Параметры:
//		СубъектыПерсональныхДанных 	- ДанныеФормыКоллекция - содержит сведения о субъектах.
//		ДатаАктуальности			- Дата - дата, на которую нужно заполнить сведения.
//
Процедура ДополнитьДанныеСубъектовПерсональныхДанных(СубъектыПерсональныхДанных, ДатаАктуальности) Экспорт
	
	 СубъектыПерсональныхДанных.Вставить("Совершеннолетний",Ложь);
	
	 Запрос =  Новый Запрос;
	 Запрос.УстановитьПараметр("Ссылка", СубъектыПерсональныхДанных.Субъект);
	 Запрос.УстановитьПараметр("Дата", ДатаАктуальности);
	 // {Рарус adilas #9913 -Вернуть поддержку БСП 2020.10.12
	 Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 // }Рарус adilas #9913 -Вернуть поддержку БСП 2020.10.12
	                 |	ФизическиеЛица.Ссылка КАК ФИО,
	                 |	ФизическиеЛицаКонтактнаяИнформация.Представление КАК Адрес,
	                 |	ДокументыФизическихЛиц.Серия КАК Серия,
	                 |	ДокументыФизическихЛиц.Номер КАК Номер,
					 // {Рарус adilas #9845 -Заполнение введенными данными в согласии на обработку перс данных 2020.10.02
					 |	ДокументыФизическихЛиц.КемВыдан КАК КемВыдан,
					 // }Рарус adilas #9845 -Заполнение введенными данными в согласии на обработку перс данных 2020.10.02
	                 |	ЕСТЬNULL(ДокументыФизическихЛиц.ДатаВыдачи, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВыдачи,
	                 |	ЕСТЬNULL(ДокументыФизическихЛиц.СрокДействия, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействия,
	                 |	ДокументыФизическихЛиц.Документ КАК Документ,
	                 |	ВЫБОР
	                 |		КОГДА РАЗНОСТЬДАТ(ФизическиеЛица.Ссылка.ДатаРождения, &Дата, ГОД) >= 18
	                 |			ТОГДА ИСТИНА
	                 |		ИНАЧЕ ЛОЖЬ
	                 |	КОНЕЦ КАК Совершеннолетний
	                 |ИЗ
	                 |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	                 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	                 |		ПО ФизическиеЛица.Ссылка = ФизическиеЛицаКонтактнаяИнформация.Ссылка
	                 |			И (ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(справочник.видыконтактнойинформации.АдресПоПропискеФизическиеЛица))
	                 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(&Дата, ) КАК ДокументыФизическихЛиц
	                 |		ПО ФизическиеЛица.Ссылка = ДокументыФизическихЛиц.ФизическоеЛицо
	               	 |ГДЕ
	                 |	ФизическиеЛица.Ссылка = &Ссылка";
	 Выборка = Запрос.Выполнить().Выбрать();
	 Выборка.Следующий();
	 ЗаполнитьЗначенияСвойств(СубъектыПерсональныхДанных,Выборка);
	 СубъектыПерсональныхДанных.ПаспортныеДанные = ?(ЗначениеЗаполнено(Выборка.Документ), НРег(Выборка.Документ)+ " ","") +
	    ?(ЗначениеЗаполнено(Выборка.Серия), Выборка.Серия + " ", "") + ?(ЗначениеЗаполнено(Выборка.Номер), "№ " + Выборка.Номер + " ", "") +
		// {Рарус adilas #9845 -Заполнение введенными данными в согласии на обработку перс данных 2020.10.02
		//
		?(ЗначениеЗаполнено(Выборка.КемВыдан), "выдан " + Выборка.КемВыдан + " ", "") +
		// }Рарус adilas #9845 -Заполнение введенными данными в согласии на обработку перс данных 2020.10.02
		// {Рарус adilas #9845 -Заполнение введенными данными в согласии на обработку перс данных 2020.10.02
		// Типовая конструкция ?(Выборка.ДатаВыдачи = Дата(1,1,1), "", "выдан " + Формат(Выборка.ДатаВыдачи,"ДЛФ=Д"))+ " " +
		// 					   ?(Выборка.СрокДействия = Дата(1,1,1), "", "действует до " + Формат(Выборка.СрокДействия,"ДЛФ=Д"));
		?(Выборка.ДатаВыдачи = Дата(1,1,1), "", Формат(Выборка.ДатаВыдачи,"ДЛФ=Д"))+ " ";
		// }Рарус adilas #9845 -Заполнение введенными данными в согласии на обработку перс данных 2020.10.02
		// ?(Выборка.СрокДействия = Дата(1,1,1), "", "действует до " + Формат(Выборка.СрокДействия,"ДЛФ=Д"));
	                                                                                                                
КонецПроцедуры

// Вызывается при заполнении формы "Согласие на обработку персональных данных" данными организации.
//
// Параметры:
//		Организация			- ОпределяемыйТип.Организация - оператор персональных данных.
//		ДанныеОрганизации	- Структура - данные об организации (адрес, ФИО ответственного и т.д.).
//		ДатаАктуальности	- Дата      - дата, на которую нужно заполнить сведения.
//
Процедура ДополнитьДанныеОрганизацииОператораПерсональныхДанных(Организация, ДанныеОрганизации, ДатаАктуальности) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Организация);
	// {Рарус adilas #9913 -Вернуть поддержку БСП 2020.10.12
	Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	// }Рарус adilas #9913 -Вернуть поддержку БСП 2020.10.12
	                |	ВЫБОР
	                |		КОГДА (ВЫРАЗИТЬ(Организации.ПолноеНаименование КАК СТРОКА(10))) = (ВЫРАЗИТЬ("""" КАК СТРОКА(10)))
	                |			ТОГДА Организации.Наименование
	                |		ИНАЧЕ Организации.ПолноеНаименование
	                |	КОНЕЦ КАК НаименованиеОрганизации,
	                |	ОрганизацииКонтактнаяИнформация.Представление КАК АдресОрганизации
	                |ИЗ
	                |	Справочник.Организации КАК Организации
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	                |		ПО Организации.Ссылка = ОрганизацииКонтактнаяИнформация.Ссылка
	                |			И (ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(справочник.видыконтактнойинформации.ЮрАдресОрганизации))
	                |ГДЕ
	                |	Организации.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ДанныеОрганизации,Выборка);

КонецПроцедуры

// Вызывается при заполнении формы "Согласие на обработку персональных данных".
// Предназначена для заполнения поля ФИО ответственного за обработку ПДн.
//
// Параметры:
//		ФизическоеЛицо	- ОпределяемыйТип.ФизическоеЛицо - ответственный за обработку персональных данных.
//		ФИО				- Строка - ФИО ответственного, которые нужно заполнить.
//
Процедура ЗаполнитьФИОФизическогоЛица(ФизическоеЛицо, ФИО) Экспорт
	
	
	
КонецПроцедуры

// Позволяет проверить возможность скрытия персональных данных и задать состав исключений для записи в данных.
//
// Параметры:
//   Субъекты - Массив - ссылки на объекты данных, чьи персональные данные будут скрыты.
//   ТаблицаИсключений - ТаблицаЗначений - таблица, в которую добавляются субъекты и причины отказа их скрытия.
//   							Состав полей см. в функции ЗащитаПерсональныхДанных.НоваяТаблицаИсключений.
//   Отказ - Булево - (по умолчанию Истина) признак отказа от скрытия. Если конфигурация адаптирована к обменам, и
//   							определены причины отказа от скрытия, то параметру необходимо установить значение Ложь.
//
Процедура ПередСкрытиемПерсональныхДанныхСубъектов(Субъекты, ТаблицаИсключений, Отказ) Экспорт

	
	
КонецПроцедуры

#КонецОбласти
